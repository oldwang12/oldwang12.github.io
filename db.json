{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"node_modules/hexo-theme-landscape/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.css","path":"fancybox/jquery.fancybox.min.css","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/js/script.js","path":"js/script.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/js/jquery-3.6.4.min.js","path":"js/jquery-3.6.4.min.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.js","path":"fancybox/jquery.fancybox.min.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":0,"renderable":1},{"_id":"themes/pure/source/favicon.png","path":"favicon.png","modified":0,"renderable":1},{"_id":"themes/pure/source/css/style.css","path":"css/style.css","modified":0,"renderable":1},{"_id":"themes/pure/source/css/style.min.css","path":"css/style.min.css","modified":0,"renderable":1},{"_id":"themes/pure/source/js/application.js","path":"js/application.js","modified":0,"renderable":1},{"_id":"themes/pure/source/js/application.min.js","path":"js/application.min.js","modified":0,"renderable":1},{"_id":"themes/pure/source/js/plugin.js.map","path":"js/plugin.js.map","modified":0,"renderable":1},{"_id":"themes/pure/source/js/jquery.min.js","path":"js/jquery.min.js","modified":0,"renderable":1},{"_id":"themes/pure/source/js/plugin.js","path":"js/plugin.js","modified":0,"renderable":1},{"_id":"themes/pure/source/js/plugin.min.js","path":"js/plugin.min.js","modified":0,"renderable":1},{"_id":"themes/pure/source/js/insight.js","path":"js/insight.js","modified":0,"renderable":1},{"_id":"themes/pure/source/fonts/README.md","path":"fonts/README.md","modified":0,"renderable":1},{"_id":"themes/pure/source/fonts/iconfont.eot","path":"fonts/iconfont.eot","modified":0,"renderable":1},{"_id":"themes/pure/source/fonts/iconfont.svg","path":"fonts/iconfont.svg","modified":0,"renderable":1},{"_id":"themes/pure/source/fonts/iconfont.woff","path":"fonts/iconfont.woff","modified":0,"renderable":1},{"_id":"themes/pure/source/fonts/iconfont.ttf","path":"fonts/iconfont.ttf","modified":0,"renderable":1},{"_id":"themes/pure/source/images/thumb-default.png","path":"images/thumb-default.png","modified":0,"renderable":1},{"_id":"themes/pure/source/images/xingqiu-qrcode.jpg","path":"images/xingqiu-qrcode.jpg","modified":0,"renderable":1},{"_id":"themes/pure/source/images/avatar.jpg","path":"images/avatar.jpg","modified":0,"renderable":1},{"_id":"themes/pure/source/images/favatar/chuangzaoshi-logo.png","path":"images/favatar/chuangzaoshi-logo.png","modified":0,"renderable":1},{"_id":"themes/pure/source/images/favatar/idesign-logo.png","path":"images/favatar/idesign-logo.png","modified":0,"renderable":1},{"_id":"themes/pure/source/images/donate/wechatpayimg.png","path":"images/donate/wechatpayimg.png","modified":0,"renderable":1},{"_id":"themes/pure/source/images/donate/alipayimg.png","path":"images/donate/alipayimg.png","modified":0,"renderable":1},{"_id":"themes/pure/source/images/favatar/SzsFox-logo.png","path":"images/favatar/SzsFox-logo.png","modified":0,"renderable":1},{"_id":"source/shells/k8s_alias_install.sh","path":"shells/k8s_alias_install.sh","modified":0,"renderable":0},{"_id":"source/shells/k8s_alias_uninstall.sh","path":"shells/k8s_alias_uninstall.sh","modified":0,"renderable":0},{"_id":"themes/pure/source/CNAME","path":"CNAME","modified":0,"renderable":1}],"Cache":[{"_id":"source/_posts/hello-world.md","hash":"7d98d6592de80fdcd2949bd7401cec12afd98cdf","modified":1690040188938},{"_id":"node_modules/hexo-theme-landscape/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1690040028733},{"_id":"node_modules/hexo-theme-landscape/README.md","hash":"1a9b279e6dd29fd19245f913f0c4a316ffaa62db","modified":1690040028733},{"_id":"node_modules/hexo-theme-landscape/languages/de-DE.yml","hash":"d29d1c4256b7ed9df42f511c2ff0a23ad5fd6c1f","modified":1690040028733},{"_id":"node_modules/hexo-theme-landscape/_config.yml","hash":"b608c1f1322760dce9805285a602a95832730a2e","modified":1690040028733},{"_id":"node_modules/hexo-theme-landscape/package.json","hash":"4bf95d52f77edf811f23f6d264a7493311a8d078","modified":1690040028733},{"_id":"node_modules/hexo-theme-landscape/languages/de.yml","hash":"3ebf0775abbee928c8d7bda943c191d166ded0d3","modified":1690040028733},{"_id":"node_modules/hexo-theme-landscape/languages/en-GB.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1690040028733},{"_id":"node_modules/hexo-theme-landscape/languages/en.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1690040028733},{"_id":"node_modules/hexo-theme-landscape/languages/en-US.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1690040028733},{"_id":"node_modules/hexo-theme-landscape/languages/es-ES.yml","hash":"7008a8fc91f18d2a735864817b8ebda30c7a2c66","modified":1690040028733},{"_id":"node_modules/hexo-theme-landscape/languages/es.yml","hash":"76edb1171b86532ef12cfd15f5f2c1ac3949f061","modified":1690040028733},{"_id":"node_modules/hexo-theme-landscape/languages/fr-FR.yml","hash":"8d09dbdab00a30a2870b56f7c0a7ca7deafa7b88","modified":1690040028733},{"_id":"node_modules/hexo-theme-landscape/languages/default.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1690040028733},{"_id":"node_modules/hexo-theme-landscape/languages/fr.yml","hash":"415e1c580ced8e4ce20b3b0aeedc3610341c76fb","modified":1690040028733},{"_id":"node_modules/hexo-theme-landscape/languages/it-IT.yml","hash":"2cb6dc2fab9bd2dbe1c8bb869a9e8bf85a564fdd","modified":1690040028733},{"_id":"node_modules/hexo-theme-landscape/languages/hu-HU.yml","hash":"712d18664898fa21ba38d4973e90ef41a324ea25","modified":1690040028733},{"_id":"node_modules/hexo-theme-landscape/languages/it.yml","hash":"89b7d91306b2c1a0f3ac023b657bf974f798a1e8","modified":1690040028733},{"_id":"node_modules/hexo-theme-landscape/languages/ja.yml","hash":"a73e1b9c80fd6e930e2628b393bfe3fb716a21a9","modified":1690040028733},{"_id":"node_modules/hexo-theme-landscape/languages/ko-KR.yml","hash":"19209ad8f9d4057e8df808937f950eb265e1db69","modified":1690040028733},{"_id":"node_modules/hexo-theme-landscape/languages/mn-MN.yml","hash":"b9e5f3e7c0c2f779cf2cfded6db847b5941637ca","modified":1690040028733},{"_id":"node_modules/hexo-theme-landscape/languages/nl-NL.yml","hash":"5ebbc30021f05d99938f96dfff280392df7f91f0","modified":1690040028733},{"_id":"node_modules/hexo-theme-landscape/languages/ko.yml","hash":"881d6a0a101706e0452af81c580218e0bfddd9cf","modified":1690040028733},{"_id":"node_modules/hexo-theme-landscape/languages/ja-JP.yml","hash":"08481267e0c112e1f6855620f2837ec4c4a98bbd","modified":1690040028733},{"_id":"node_modules/hexo-theme-landscape/languages/mn.yml","hash":"2e7523951072a9403ead3840ad823edd1084c116","modified":1690040028733},{"_id":"node_modules/hexo-theme-landscape/languages/hu.yml","hash":"284d557130bf54a74e7dcef9d42096130e4d9550","modified":1690040028733},{"_id":"node_modules/hexo-theme-landscape/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1690040028733},{"_id":"node_modules/hexo-theme-landscape/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1690040028733},{"_id":"node_modules/hexo-theme-landscape/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1690040028733},{"_id":"node_modules/hexo-theme-landscape/languages/pt.yml","hash":"57d07b75d434fbfc33b0ddb543021cb5f53318a8","modified":1690040028733},{"_id":"node_modules/hexo-theme-landscape/languages/th-TH.yml","hash":"ebfdba9bc4842c829473c1e6e4544344f182724d","modified":1690040028733},{"_id":"node_modules/hexo-theme-landscape/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1690040028733},{"_id":"node_modules/hexo-theme-landscape/languages/pt-PT.yml","hash":"0f852b6b228e6ea59aa3540574bb89b233f2a098","modified":1690040028733},{"_id":"node_modules/hexo-theme-landscape/languages/tr.yml","hash":"a1cdbfa17682d7a971de8ab8588bf57c74224b5b","modified":1690040028733},{"_id":"node_modules/hexo-theme-landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1690040028733},{"_id":"node_modules/hexo-theme-landscape/languages/th.yml","hash":"84a55b00aa01f03982be294e43c33a20e6d32862","modified":1690040028733},{"_id":"node_modules/hexo-theme-landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1690040028733},{"_id":"node_modules/hexo-theme-landscape/languages/zh-CN.yml","hash":"1efd95774f401c80193eac6ee3f1794bfe93dc5a","modified":1690040028733},{"_id":"node_modules/hexo-theme-landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1690040028733},{"_id":"node_modules/hexo-theme-landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1690040028733},{"_id":"node_modules/hexo-theme-landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1690040028733},{"_id":"node_modules/hexo-theme-landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1690040028733},{"_id":"node_modules/hexo-theme-landscape/layout/layout.ejs","hash":"0d1765036e4874500e68256fedb7470e96eeb6ee","modified":1690040028733},{"_id":"node_modules/hexo-theme-landscape/scripts/fancybox.js","hash":"c857d7a5e4a5d71c743a009c5932bf84229db428","modified":1690040028733},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/after-footer.ejs","hash":"377d257d5d16e0158a4405c72401517b074fd7ff","modified":1690040028733},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/archive.ejs","hash":"7cb70a7a54f8c7ae49b10d1f37c0a9b74eab8826","modified":1690040028733},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":1690040028733},{"_id":"node_modules/hexo-theme-landscape/languages/ru-RU.yml","hash":"360d11a28bb768afb1dd15f63fa7fd3a8cc547ee","modified":1690040028733},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/article.ejs","hash":"56597e951203dd662a6d2c817c7c4f1c920d4a25","modified":1690040028733},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/gauges-analytics.ejs","hash":"21a1e2a3907d1a3dad1cd0ab855fe6735f233c74","modified":1690040028733},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":1690040028733},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/footer.ejs","hash":"3656eb692254346671abc03cb3ba1459829e0dce","modified":1690040028733},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":1690040028733},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":1690040028733},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/header.ejs","hash":"6a5033d189554c9a6d42e2ef7952ae5c9742648e","modified":1690040028733},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/recent_posts.ejs","hash":"60c4b012dcc656438ff59997e60367e5a21ab746","modified":1690040028733},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/head.ejs","hash":"f05bced793b0314d4f2ef0c993b3a51d0b7d203a","modified":1690040028733},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":1690040028733},{"_id":"node_modules/hexo-theme-landscape/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":1690040028733},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":1690040028733},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":1690040028733},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/google-analytics.ejs","hash":"2ea7442ea1e1a8ab4e41e26c563f58413b59a3d0","modified":1690040028733},{"_id":"node_modules/hexo-theme-landscape/source/css/_variables.styl","hash":"ca28281423ae57d76b6c1eb91cd845fd4e518bd6","modified":1690040028733},{"_id":"node_modules/hexo-theme-landscape/source/css/style.styl","hash":"e55a1d92954ed20f6887f92dc727bb995a010a43","modified":1690040028733},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":1690040028733},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1690040028733},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1690040028733},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1690040028733},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/date.ejs","hash":"f1458584b679545830b75bef2526e2f3eb931045","modified":1690040028733},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/nav.ejs","hash":"16a904de7bceccbb36b4267565f2215704db2880","modified":1690040028733},{"_id":"node_modules/hexo-theme-landscape/source/js/script.js","hash":"49773efcb2221bbdf2d86f3f5c5ff2d841b528cc","modified":1690040028733},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/title.ejs","hash":"4d7e62574ddf46de9b41605fe3140d77b5ddb26d","modified":1690040028733},{"_id":"node_modules/hexo-theme-landscape/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1690040028733},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/article.styl","hash":"2d1f6f79ebf9cb55ebdb3865a2474437eb2b37c6","modified":1690040028733},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/comment.styl","hash":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":1690040028733},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/footer.styl","hash":"e35a060b8512031048919709a8e7b1ec0e40bc1b","modified":1690040028733},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/header.styl","hash":"268d2989acb06e2ddd06cc36a6918c6cd865476b","modified":1690040028733},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/highlight.styl","hash":"9cc3b2927d814f2f6e8e188f9d3657b94f4c6ef3","modified":1690040028733},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/mobile.styl","hash":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":1690040028733},{"_id":"node_modules/hexo-theme-landscape/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1690040028733},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":1690040028733},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/sidebar-aside.styl","hash":"890349df5145abf46ce7712010c89237900b3713","modified":1690040028733},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/archive.styl","hash":"db15f5677dc68f1730e82190bab69c24611ca292","modified":1690040028733},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/sidebar.styl","hash":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":1690040028733},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.js","hash":"6181412e73966696d08e1e5b1243a572d0f22ba6","modified":1690040028733},{"_id":"node_modules/hexo-theme-landscape/source/js/jquery-3.6.4.min.js","hash":"eda46747c71d38a880bee44f9a439c3858bb8f99","modified":1690040028733},{"_id":"node_modules/hexo-theme-landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1690040028733},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1690040398519},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1690040398506},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1690040398506},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1690040398519},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1690040398519},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1690040398517},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1690040398517},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1690040398517},{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1690040398501},{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1690040398501},{"_id":"themes/next/.gitignore","hash":"0b5c2ffd41f66eb1849d6426ba8cf9649eeed329","modified":1690040398501},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1690040398501},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1690040398501},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1690040398502},{"_id":"themes/next/LICENSE","hash":"f293bcfcdc06c0b77ba13570bb8af55eb5c059fd","modified":1690040398502},{"_id":"themes/next/.javascript_ignore","hash":"8a224b381155f10e6eb132a4d815c5b52962a9d1","modified":1690040398502},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1690040398502},{"_id":"themes/next/README.cn.md","hash":"263b74f1ac7c0f6f9424b8cced4b0b320ae61efc","modified":1690040398502},{"_id":"themes/next/README.md","hash":"287c7e6b7a6ddf75d815dda0df8bd228e3f285c5","modified":1690040398502},{"_id":"themes/next/.travis.yml","hash":"d60d4a5375fea23d53b2156b764a99b2e56fa660","modified":1690040398502},{"_id":"themes/next/_config.yml","hash":"5ff37e90e4d6812c8fc40c03fa6e1d903d743470","modified":1690040398502},{"_id":"themes/next/package.json","hash":"036d3a1346203d2f1a3958024df7f74e7ac07bfe","modified":1690040398510},{"_id":"themes/next/bower.json","hash":"0674f11d3d514e087a176da0e1d85c2286aa5fba","modified":1690040398502},{"_id":"themes/next/gulpfile.coffee","hash":"031bffc483e417b20e90eceb6cf358e7596d2e69","modified":1690040398502},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"902f627155a65099e0a37842ff396a58d0dc306f","modified":1690040398501},{"_id":"themes/next/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1690040398501},{"_id":"themes/next/languages/default.yml","hash":"44ef3f26917f467459326c2c8be2f73e4d947f35","modified":1690040398503},{"_id":"themes/next/languages/de.yml","hash":"057e7df11ddeb1c8c15a5d7c5ff29430d725ec6b","modified":1690040398502},{"_id":"themes/next/languages/en.yml","hash":"7e680d9bb8f3a3a9d1ba1c9d312b3d257183dded","modified":1690040398503},{"_id":"themes/next/languages/fr-FR.yml","hash":"7e4eb7011b8feee641cfb11c6e73180b0ded1c0f","modified":1690040398503},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"50d48c47162817a3810a9d9ad51104e83947419a","modified":1690040398501},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"3b5eafd32abb718e56ccf8d1cee0607ad8ce611d","modified":1690040398501},{"_id":"themes/next/languages/it.yml","hash":"aa595f2bda029f73ef7bfa104b4c55c3f4e9fb4c","modified":1690040398503},{"_id":"themes/next/languages/ja.yml","hash":"3c76e16fd19b262864475faa6854b718bc08c4d8","modified":1690040398503},{"_id":"themes/next/languages/ko.yml","hash":"ea5b46056e73ebcee121d5551627af35cbffc900","modified":1690040398503},{"_id":"themes/next/languages/id.yml","hash":"b5de1ea66dd9ef54cac9a1440eaa4e3f5fc011f5","modified":1690040398503},{"_id":"themes/next/languages/pt.yml","hash":"44b61f2d085b827b507909a0b8f8ce31c6ef5d04","modified":1690040398503},{"_id":"themes/next/languages/ru.yml","hash":"98ec6f0b7183282e11cffc7ff586ceb82400dd75","modified":1690040398503},{"_id":"themes/next/languages/pt-BR.yml","hash":"b1694ae766ed90277bcc4daca4b1cfa19cdcb72b","modified":1690040398503},{"_id":"themes/next/languages/vi.yml","hash":"fd08d3c8d2c62965a98ac420fdaf95e54c25d97c","modified":1690040398503},{"_id":"themes/next/languages/zh-Hans.yml","hash":"16ef56d0dea94638de7d200984c90ae56f26b4fe","modified":1690040398503},{"_id":"themes/next/languages/zh-hk.yml","hash":"9396f41ae76e4fef99b257c93c7354e661f6e0fa","modified":1690040398503},{"_id":"themes/next/languages/nl-NL.yml","hash":"edca4f3598857dbc3cbf19ed412213329b6edd47","modified":1690040398503},{"_id":"themes/next/layout/_layout.swig","hash":"da0929166674ea637e0ad454f85ad0d7bac4aff2","modified":1690040398504},{"_id":"themes/next/languages/zh-tw.yml","hash":"50b71abb3ecc0686f9739e179e2f829cd074ecd9","modified":1690040398504},{"_id":"themes/next/layout/archive.swig","hash":"f0a8225feafd971419837cdb4bcfec98a4a59b2f","modified":1690040398509},{"_id":"themes/next/layout/page.swig","hash":"969caaee05bdea725e99016eb63d810893a73e99","modified":1690040398509},{"_id":"themes/next/layout/category.swig","hash":"4472255f4a3e3dd6d79201523a9526dcabdfbf18","modified":1690040398509},{"_id":"themes/next/layout/schedule.swig","hash":"d86f8de4e118f8c4d778b285c140474084a271db","modified":1690040398509},{"_id":"themes/next/layout/post.swig","hash":"b3589a8e46288a10d20e41c7a5985d2493725aec","modified":1690040398509},{"_id":"themes/next/layout/tag.swig","hash":"7e0a7d7d832883eddb1297483ad22c184e4368de","modified":1690040398509},{"_id":"themes/next/scripts/merge-configs.js","hash":"81e86717ecfb775986b945d17f0a4ba27532ef07","modified":1690040398510},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1690040398510},{"_id":"themes/next/layout/index.swig","hash":"783611349c941848a0e26ee2f1dc44dd14879bd1","modified":1690040398509},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1690040398539},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1690040398539},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1690040398539},{"_id":"themes/next/layout/_partials/header.swig","hash":"ed042be6252848058c90109236ec988e392d91d4","modified":1690040398505},{"_id":"themes/next/layout/_partials/comments.swig","hash":"4a6f5b1792b2e5262b7fdab9a716b3108e2f09c7","modified":1690040398505},{"_id":"themes/next/layout/_partials/head.swig","hash":"6b94fe8f3279daea5623c49ef4bb35917ba57510","modified":1690040398505},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1690040398504},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1690040398504},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1efd925d34a5d4ba2dc0838d9c86ba911e705fc9","modified":1690040398505},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1690040398505},{"_id":"themes/next/layout/_partials/footer.swig","hash":"c4d6181f5d3db5365e622f78714af8cc58d7a45e","modified":1690040398505},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"665a928604f99d2ba7dc4a4a9150178229568cc6","modified":1690040398504},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1690040398504},{"_id":"themes/next/layout/_macro/reward.swig","hash":"56e8d8556cf474c56ae1bef9cb7bbd26554adb07","modified":1690040398504},{"_id":"themes/next/layout/_partials/search.swig","hash":"9dbd378e94abfcb3f864a5b8dbbf18d212ca2ee0","modified":1690040398505},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"6a54c3c85ff6b19d275827a327abbf4bd99b2ebf","modified":1690040398504},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1690040398506},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"39852700e4084ecccffa6d4669168e5cc0514c9e","modified":1690040398504},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1690040398506},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"a266f96ad06ee87bdeae6e105a4b53cd587bbd04","modified":1690040398506},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"5fe0447cc88a5a63b530cf0426f93c4634811876","modified":1690040398508},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1690040398508},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1690040398508},{"_id":"themes/next/layout/_macro/post.swig","hash":"446a35a2cd389f8cfc3aa38973a9b44ad0740134","modified":1690040398504},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1690040398508},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1690040398508},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1690040398510},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1690040398510},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"1ddb2336a1a19b47af3017047012c01ec5f54529","modified":1690040398508},{"_id":"themes/next/scripts/tags/button.js","hash":"d023f10a00077f47082b0517e2ad666e6e994f60","modified":1690040398510},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"7c04a42319d728be356746363aff8ea247791d24","modified":1690040398508},{"_id":"themes/next/scripts/tags/exturl.js","hash":"919ab7496c0031020c7b7242486531b1f7a135a7","modified":1690040398510},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"eeeabede68cf263de9e6593ecf682f620da16f0a","modified":1690040398510},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1690040398510},{"_id":"themes/next/scripts/tags/label.js","hash":"2f8f41a7316372f0d1ed6b51190dc4acd3e16fff","modified":1690040398510},{"_id":"themes/next/scripts/tags/tabs.js","hash":"5786545d51c38e8ca38d1bfc7dd9e946fc70a316","modified":1690040398511},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1690040398519},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1690040398520},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1690040398520},{"_id":"themes/next/scripts/tags/note.js","hash":"64de4e9d01cf3b491ffc7d53afdf148ee5ad9779","modified":1690040398510},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1690040398520},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1690040398520},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1690040398520},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1690040398520},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1690040398520},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1690040398520},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1690040398520},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1690040398520},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1690040398520},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1690040398520},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1690040398521},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1690040398521},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1690040398521},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1690040398521},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1690040398505},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1690040398521},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1690040398505},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1690040398505},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1690040398505},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1690040398506},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"048fd5e98149469f8c28c21ba3561a7a67952c9b","modified":1690040398506},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1690040398505},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1690040398521},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1690040398506},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1690040398505},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1690040398506},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1690040398506},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"98df9d72e37dd071e882f2d5623c9d817815b139","modified":1690040398506},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1690040398507},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1690040398505},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"5e9bb24c750b49513d9a65799e832f07410002ac","modified":1690040398507},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"1cd01c6e92ab1913d48e556a92bb4f28b6dc4996","modified":1690040398507},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1690040398507},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a234c5cd1f75ca5731e814d0dbb92fdcf9240d1b","modified":1690040398507},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1690040398507},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"fc65b9c98a0a8ab43a5e7aabff6c5f03838e09c8","modified":1690040398507},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"18e7bef8923d83ea42df6c97405e515a876cede4","modified":1690040398507},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1690040398507},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1690040398507},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1690040398508},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1690040398507},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1690040398507},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"c316758546dc9ba6c60cb4d852c17ca6bb6d6724","modified":1690040398507},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"10160daceaa6f1ecf632323d422ebe2caae49ddf","modified":1690040398508},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"aa0629277d751c55c6d973e7691bf84af9b17a60","modified":1690040398508},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1690040398508},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"8b6650f77fe0a824c8075b2659e0403e0c78a705","modified":1690040398508},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"8a2e393d2e49f7bf560766d8a07cd461bf3fce4f","modified":1690040398508},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"385c066af96bee30be2459dbec8aae1f15d382f5","modified":1690040398509},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"fcabbb241f894c9a6309c44e126cf3e8fea81fd4","modified":1690040398508},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1690040398507},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1690040398509},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1690040398509},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1690040398509},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"99fbb4686ea9a3e03a4726ed7cf4d8f529034452","modified":1690040398519},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"be087dcc060e8179f7e7f60ab4feb65817bd3d9f","modified":1690040398519},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1690040398517},{"_id":"themes/next/source/css/_variables/base.styl","hash":"29c261fa6b4046322559074d75239c6b272fb8a3","modified":1690040398519},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"f29165e36489a87ba32d17dddfd2720d84e3f3ec","modified":1690040398519},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1690040398517},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1690040398521},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"82f9055955920ed88a2ab6a20ab02169abb2c634","modified":1690040398517},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"9ab65361ba0a12a986edd103e56492644c2db0b8","modified":1690040398517},{"_id":"themes/next/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1690040398521},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1690040398521},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1690040398521},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1690040398521},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1690040398522},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1690040398521},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1690040398522},{"_id":"themes/next/source/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1690040398522},{"_id":"themes/next/source/js/src/utils.js","hash":"9b1325801d27213083d1487a12b1a62b539ab6f8","modified":1690040398522},{"_id":"themes/next/source/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1690040398521},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1690040398525},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1690040398525},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1690040398524},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1690040398525},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1690040398533},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1690040398534},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1690040398534},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1690040398525},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1690040398534},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1690040398534},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1690040398534},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1690040398534},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1690040398527},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1690040398535},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1690040398527},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1690040398527},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1690040398527},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1690040398534},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1690040398527},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1690040398534},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1690040398528},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1690040398528},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1690040398527},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1690040398528},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1690040398536},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1690040398536},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1690040398538},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1690040398538},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1690040398536},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1690040398539},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1690040398539},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1690040398535},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1690040398539},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1690040398535},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1690040398535},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1690040398535},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1690040398535},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1690040398535},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1690040398535},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1690040398535},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1690040398535},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1690040398535},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1690040398535},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1690040398535},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1690040398536},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1690040398535},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1690040398509},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1690040398509},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"4719ce717962663c5c33ef97b1119a0b3a4ecdc3","modified":1690040398511},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"7e509c7c28c59f905b847304dd3d14d94b6f3b8e","modified":1690040398511},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1690040398511},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1690040398511},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1690040398511},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"c5d48863f332ff8ce7c88dec2c893f709d7331d3","modified":1690040398512},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"18c3336ee3d09bd2da6a876e1336539f03d5a973","modified":1690040398517},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1690040398514},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1690040398516},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1690040398517},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1690040398517},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1690040398518},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"3b25edfa187d1bbbd0d38b50dd013cef54758abf","modified":1690040398518},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1690040398518},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1690040398518},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1690040398518},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1690040398518},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1690040398518},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"4aac01962520d60b03b23022ab601ad4bd19c08c","modified":1690040398518},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1690040398518},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1690040398518},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"215de948be49bcf14f06d500cef9f7035e406a43","modified":1690040398519},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1690040398519},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"5b93958239d3d2bf9aeaede44eced2434d784462","modified":1690040398519},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1690040398519},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"9d16fa3c14ed76b71229f022b63a02fd0f580958","modified":1690040398519},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"47a46583a1f3731157a3f53f80ed1ed5e2753e8e","modified":1690040398516},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1690040398516},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1690040398519},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1690040398516},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1690040398516},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"f7c44b0ee46cf2cf82a4c9455ba8d8b55299976f","modified":1690040398516},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1690040398522},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1690040398523},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1690040398517},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1690040398525},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1690040398526},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1690040398523},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1690040398526},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1690040398525},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1690040398526},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1690040398523},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1690040398527},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1690040398526},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1690040398527},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1690040398525},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1690040398527},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1690040398528},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1690040398528},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1690040398526},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1690040398528},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1690040398538},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1690040398538},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1690040398511},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1690040398512},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1690040398511},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1690040398512},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1690040398511},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"25dc25f61a232f03ca72472b7852f882448ec185","modified":1690040398512},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1690040398512},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"7905a7f625702b45645d8be1268cb8af3f698c70","modified":1690040398511},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1690040398512},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1690040398514},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1690040398514},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"0a6c0efffdf18bddbc1d1238feaed282b09cd0fe","modified":1690040398514},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1690040398514},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1690040398514},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"12937cae17c96c74d5c58db6cb29de3b2dfa14a2","modified":1690040398514},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"89dd4f8b1f1cce3ad46cf2256038472712387d02","modified":1690040398514},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1690040398514},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1690040398514},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"50305b6ad7d09d2ffa4854e39f41ec1f4fe984fd","modified":1690040398514},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"f5aa2ba3bfffc15475e7e72a55b5c9d18609fdf5","modified":1690040398512},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1690040398513},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1690040398512},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1690040398513},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1690040398512},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1690040398512},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"535b3b4f8cb1eec2558e094320e7dfb01f94c0e7","modified":1690040398513},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1690040398512},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1690040398513},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"0f7f522cc6bfb3401d5afd62b0fcdf48bb2d604b","modified":1690040398513},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"aea21141015ca8c409d8b33e3e34ec505f464e93","modified":1690040398513},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1690040398513},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1690040398513},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"d5a4e4fc17f1f7e7c3a61b52d8e2e9677e139de7","modified":1690040398513},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"36332c8a91f089f545f3c3e8ea90d08aa4d6e60c","modified":1690040398513},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1690040398513},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1690040398513},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"e4055a0d2cd2b0ad9dc55928e2f3e7bd4e499da3","modified":1690040398513},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1690040398514},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1690040398514},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"262debfd4442fa03d9919ceb88b948339df03fb0","modified":1690040398513},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1690040398515},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"37e951e734a252fe8a81f452b963df2ba90bfe90","modified":1690040398514},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1690040398513},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"ee7528900578ef4753effe05b346381c40de5499","modified":1690040398515},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"32c9156bea5bac9e9ad0b4c08ffbca8b3d9aac4b","modified":1690040398515},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1690040398515},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"4ab5deed8c3b0c338212380f678f8382672e1bcb","modified":1690040398515},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1690040398515},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"fd42777b9125fd8969dc39d4f15473e2b91b4142","modified":1690040398515},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"34935b40237c074be5f5e8818c14ccfd802b7439","modified":1690040398515},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1690040398515},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1690040398516},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1690040398516},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"a5e3e6b4b4b814a9fe40b34d784fed67d6d977fa","modified":1690040398516},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"ead0d0f2321dc71505788c7f689f92257cf14947","modified":1690040398515},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"1ccfbd4d0f5754b2dc2719a91245c95f547a7652","modified":1690040398516},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1690040398515},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1690040398515},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1690040398522},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1690040398518},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1690040398522},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1690040398519},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1690040398522},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1690040398518},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1690040398526},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1690040398523},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1690040398522},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1690040398526},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1690040398526},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1690040398526},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1690040398526},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1690040398526},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1690040398534},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1690040398523},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1690040398533},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1690040398533},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1690040398529},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1690040398530},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1690040398533},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1690040398539},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1690040398525},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1690040398532},{"_id":"themes/next/source/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1690040398538},{"_id":"themes/pure/.gitignore","hash":"efd53f4f9fa11c505c11daa7d6e59fc8594ba96a","modified":1690857248247},{"_id":"themes/pure/README.cn.md","hash":"ddf15a1feb7a2630210aae0528df3504fca23b5e","modified":1690040728215},{"_id":"themes/pure/_config.yml","hash":"cba8052741db3baa597db5b59966e44df073cc41","modified":1690427474185},{"_id":"themes/pure/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1690040728215},{"_id":"themes/pure/package.json","hash":"32f9dfeeee3efdf7a4c0b0e73fa3f2b9b86a000a","modified":1690040802518},{"_id":"themes/pure/_config.yml.example","hash":"4714f87fdb6d4a6ea5ece84f4fe37f922337f14d","modified":1690040728216},{"_id":"themes/pure/README.md","hash":"5861cec81712af9197a210fd5212d007aad8b0de","modified":1690040728215},{"_id":"themes/pure/layout/about.ejs","hash":"4f5c769e183249b12eb9d3141432bc0039519730","modified":1690040728224},{"_id":"themes/pure/layout/books.ejs","hash":"6c64719cd7071b5319b01339aa524fdaab391385","modified":1690040728224},{"_id":"themes/pure/layout/categories.ejs","hash":"22a2bc1712dd9ba1a3027e875d636132d334fb00","modified":1690040728224},{"_id":"themes/pure/layout/category.ejs","hash":"3ca5651bbce7b0c280c906468f2eb18c2e55ebcb","modified":1690040728224},{"_id":"themes/pure/layout/archive.ejs","hash":"0e9e67a82202ca3971be59579744d43ec6696bbf","modified":1690040728224},{"_id":"themes/pure/layout/layout.ejs","hash":"e72268bdff7610da6e2ce239d3bcd34b00c06eff","modified":1690128129876},{"_id":"themes/pure/layout/links.ejs","hash":"77c5d1561e2c606c5b3bb39610133d84324074df","modified":1690040728225},{"_id":"themes/pure/layout/index.ejs","hash":"07825d8d8b21eb7b694f5585567b9df5c5a91a60","modified":1690040728224},{"_id":"themes/pure/layout/page.ejs","hash":"5c27475c176627e6e2e6a16172eb6980e56bcaff","modified":1690040728225},{"_id":"themes/pure/layout/tag.ejs","hash":"df60564c162f7ad3422f8959dfea19351857a7cd","modified":1690040728225},{"_id":"themes/pure/layout/repository.ejs","hash":"fe4b3e051a8b0debe9ee22c2cc2cc935d92ee23f","modified":1690040728225},{"_id":"themes/pure/layout/tags.ejs","hash":"29f19a6ed10f8b1f069259a7aeaaacddcfaa2ed4","modified":1690040728225},{"_id":"themes/pure/layout/post.ejs","hash":"5c27475c176627e6e2e6a16172eb6980e56bcaff","modified":1690040728225},{"_id":"themes/pure/scripts/thumbnail.js","hash":"e667a611f9baac270281b765832020d50bf8fb7f","modified":1690040728234},{"_id":"themes/pure/languages/default.yml","hash":"734cd4246b808e2bd1c5828416bb0970ba1c6769","modified":1690045132329},{"_id":"themes/pure/languages/en.yml","hash":"77cec61179f3049074ce48d95d916c9945990770","modified":1690127597928},{"_id":"themes/pure/languages/zh-CN.yml","hash":"057ebc043f09449af9768791c89c86dfc2938365","modified":1690040728217},{"_id":"themes/pure/languages/zh-TW.yml","hash":"6d27c3114be539b8783ffce944f68b2e26a8c3b9","modified":1690040728217},{"_id":"themes/pure/source/favicon.png","hash":"89875d3b018552e396fc5f0bd8ff5d9f5d4a5d71","modified":1690040728236},{"_id":"themes/pure/.github/ISSUE_TEMPLATE/bug_report.md","hash":"83d211c67c12e8c1f6e9f796cfd0cecbf5160e15","modified":1690040728215},{"_id":"themes/pure/.github/ISSUE_TEMPLATE/custom.md","hash":"84208538d48505ee8e49812cb336eb9882e08dc7","modified":1690040728215},{"_id":"themes/pure/_source/_data/gallery.yml","hash":"e2b3fad87be3d1cfde1effa655d39678ee90907e","modified":1690040728216},{"_id":"themes/pure/.github/ISSUE_TEMPLATE/feature_request.md","hash":"f6867a2f0417fe89a0f2008730ee19dd38422021","modified":1690040728215},{"_id":"themes/pure/_source/_data/links.yml","hash":"aa443a4508550820c77c2a4f6abff1d38ad85054","modified":1690040728216},{"_id":"themes/pure/_source/404/index.md","hash":"8d493f624fdd29c8d0266767e56f343d549e16d8","modified":1690040728216},{"_id":"themes/pure/_source/about/index.md","hash":"9c95cabb533409d06daefc4295021ad199761efc","modified":1690040728216},{"_id":"themes/pure/_source/books/index.md","hash":"cf4163959c23244059cbbbc1c0fe379cc3b2cb73","modified":1690040728216},{"_id":"themes/pure/_source/categories/index.md","hash":"5d2a4f103d27bebbe3eef1604649d0f5c6d86ac6","modified":1690040728216},{"_id":"themes/pure/_source/tags/index.md","hash":"42e9c904ea63b0a7dd4033e2e8f153225bc5cda5","modified":1690040728217},{"_id":"themes/pure/layout/_common/footer.ejs","hash":"20ae8574d809e46e55291a0d63df6151ca3bbc1b","modified":1690126787677},{"_id":"themes/pure/layout/_common/head.ejs","hash":"a48ef0fa22712b29ec044b9e5134461f3a21c10d","modified":1690040728218},{"_id":"themes/pure/_source/links/index.md","hash":"febcf87eb0ab3c5080578275d25f3970bba39625","modified":1690040728217},{"_id":"themes/pure/layout/_common/header.ejs","hash":"3d739d1e2b2991927c08ec222db123830a44a519","modified":1690040728218},{"_id":"themes/pure/layout/_common/script.ejs","hash":"0031114d2a58f8601c2869f78ceedc75a10be90d","modified":1690040728218},{"_id":"themes/pure/layout/_common/social.ejs","hash":"a35a2610e9da762df96587b76b51470507a88cad","modified":1690040728218},{"_id":"themes/pure/layout/_search/baidu.ejs","hash":"67aab280a3ea34429f086cc5c3de7de17727c567","modified":1690040728223},{"_id":"themes/pure/layout/_search/index.ejs","hash":"f8d5a9c3f777250f5fb6512bba585307f784d5cd","modified":1690040728223},{"_id":"themes/pure/layout/_search/index-mobile.ejs","hash":"c726e234c0166da69fdfbd3dd613a5eaf4c80258","modified":1690040728223},{"_id":"themes/pure/layout/_search/swiftype.ejs","hash":"4baeca36e410181300ae7d47ba1fb4755bcfcff0","modified":1690040728223},{"_id":"themes/pure/layout/_script/comment.ejs","hash":"6f951510bab9dc15474b6664e0329defccf29a30","modified":1690040728222},{"_id":"themes/pure/layout/_script/analytics.ejs","hash":"e756a81f8c20a187fb863b9689f2f1fa15e2f4e1","modified":1690040728222},{"_id":"themes/pure/layout/_script/douban.ejs","hash":"ee21c4e7ccac26ff2ab6d1d178447fd11fea4d7e","modified":1690040728222},{"_id":"themes/pure/layout/_script/fancybox.ejs","hash":"8f1be01e70a15b2c31ae57d8c6bce54622ebf8a7","modified":1690040728222},{"_id":"themes/pure/layout/_script/mathjax.ejs","hash":"f618393ab971b2faa80d541f2e6a553d9ace9816","modified":1690040728222},{"_id":"themes/pure/layout/_script/pv.ejs","hash":"fb9b5f16029f2ccef4b83cf4facfdcdd748b65b4","modified":1690040728223},{"_id":"themes/pure/layout/_script/repository.ejs","hash":"32f0ac36fa68d8786506957338e552661f2f809c","modified":1690040728223},{"_id":"themes/pure/layout/_script/search.ejs","hash":"7be33dc260ce788aa1a2cd3bd0386d95057533cb","modified":1690040728223},{"_id":"themes/pure/layout/_widget/archive.ejs","hash":"af8ad7f62877764b75d5272d9d899fd6c8e3845c","modified":1690040728223},{"_id":"themes/pure/layout/_widget/board.ejs","hash":"acd27451be52703e670ce0b313f2da6fa24071e4","modified":1690040728223},{"_id":"themes/pure/layout/_widget/category.ejs","hash":"331b7642a0f58b9088b937436ab39076a4c5dd7e","modified":1690040728224},{"_id":"themes/pure/layout/_search/insight.ejs","hash":"4af3e92ef98bedba9680d45699cb04dde4640536","modified":1690040728223},{"_id":"themes/pure/layout/_widget/recent_posts.ejs","hash":"8942d60311797a591ba2d157c5cdd23e85ceb694","modified":1690040728224},{"_id":"themes/pure/layout/_widget/tag.ejs","hash":"487628925da5fcac91463cdad3d9e55d071bd5ed","modified":1690040728224},{"_id":"themes/pure/layout/_widget/tagcloud.ejs","hash":"3291108e5411c48b2c5b3e17adace6ffa90d1c29","modified":1690040728224},{"_id":"themes/pure/layout/_partial/archive-book.ejs","hash":"977f97f3636947006ad738e502858c46d4cd5ec7","modified":1690040728218},{"_id":"themes/pure/layout/_partial/archive-category.ejs","hash":"9c364fd6b5172890784141802f5f466241d233fd","modified":1690040728218},{"_id":"themes/pure/layout/_partial/archive-link.ejs","hash":"fe4d9bf526d8176683cea89b8561ced571374db0","modified":1690040728218},{"_id":"themes/pure/layout/_partial/archive-tag.ejs","hash":"5de90244c3cedad531cccc03c40e5f9a3aef3c61","modified":1690040728219},{"_id":"themes/pure/layout/_partial/article-about.ejs","hash":"dd91a34ea0d88e85c6107f3d8b267511a270ef93","modified":1690127481979},{"_id":"themes/pure/layout/_partial/article.ejs","hash":"0f9b71de0087d1f777d92c5a0f3873971aec5a5b","modified":1690040728219},{"_id":"themes/pure/layout/_partial/archive.ejs","hash":"4d6793f50d41fbd47dc50aa36b24d496006bba6c","modified":1690040728219},{"_id":"themes/pure/layout/_partial/item-post.ejs","hash":"2f3790257d6ad07fdad2043b27950842c9011daa","modified":1690040728219},{"_id":"themes/pure/layout/_partial/sidebar-about.ejs","hash":"46da1ee327b8af107335146bd8fc131eee6c9c4f","modified":1690040728220},{"_id":"themes/pure/layout/_partial/pagination.ejs","hash":"c792537723b59f437967262c9575a20fac02e911","modified":1690040728219},{"_id":"themes/pure/layout/_partial/sidebar-toc.ejs","hash":"fa9e2041c4a6e03f566545db1385c5ae1a80f879","modified":1690040728220},{"_id":"themes/pure/layout/_partial/sidebar.ejs","hash":"2aa8a9f90838e7c105e75e6d3d03cbf860bb1239","modified":1690040728220},{"_id":"themes/pure/_source/repository/index.md","hash":"ed0e082c30f233dd5c140d188f1e4bce44bdbf79","modified":1690040728217},{"_id":"themes/pure/source/js/application.js","hash":"fd0b7529e7c0b387f88c4f28c9e272bb01169490","modified":1690127324054},{"_id":"themes/pure/layout/_partial/archive-list.ejs","hash":"1081974f182e8e1ce452d701b8f6575b6dc45b0c","modified":1690040728218},{"_id":"themes/pure/source/js/insight.js","hash":"298e8ca42517984bd26f34caa4c45560b0e909ad","modified":1690040728238},{"_id":"themes/pure/source/fonts/README.md","hash":"c5772b99ad81291fb137b330813f866bdceea0a3","modified":1690040728236},{"_id":"themes/pure/source/js/application.min.js","hash":"34d765e982c7d6360c37f82202d99f63ac40e408","modified":1690040728238},{"_id":"themes/pure/source/fonts/iconfont.eot","hash":"6819d9bb643bdeafc17bfecb0746ae641b018fdf","modified":1690040728236},{"_id":"themes/pure/source/fonts/iconfont.woff","hash":"78d29194287b8885d25212048c4f787705212a6e","modified":1690040728237},{"_id":"themes/pure/source/fonts/iconfont.ttf","hash":"9b8837f9f79cf6ab794736301d0665345183a20c","modified":1690040728237},{"_id":"themes/pure/source/images/thumb-default.png","hash":"e8403b97ed9251f9f5207765b0ce796c5000b4ba","modified":1690040728238},{"_id":"themes/pure/source/images/xingqiu-qrcode.jpg","hash":"ef2c2848dc79db6df7c752510651ed8ba57f2daf","modified":1690040728238},{"_id":"themes/pure/source/images/avatar.jpg","hash":"f86eafc318f3900319b25057811720168f24d248","modified":1690040728237},{"_id":"themes/pure/layout/_script/_comment/livere.ejs","hash":"5ab997d5ee4475d2f89f882fab4a52648dbe0e30","modified":1690040728221},{"_id":"themes/pure/layout/_script/_comment/valine.ejs","hash":"acf81f9a59dc45f197d723f70484de5fcd166577","modified":1690040728221},{"_id":"themes/pure/layout/_script/_comment/gitalk.ejs","hash":"de4c43d3056825c14283fe426b8cc677dea59617","modified":1690040728221},{"_id":"themes/pure/layout/_script/_comment/youyan.ejs","hash":"095649a173573d03b5845c2e331ec7be976b152a","modified":1690040728221},{"_id":"themes/pure/layout/_partial/archive-repository.ejs","hash":"3464682ae0359ba23034ac40e8153699c37fb7be","modified":1690040728218},{"_id":"themes/pure/layout/_partial/archive-post.ejs","hash":"13039fec017332029122ef99901755fcecbfc8ea","modified":1690040728218},{"_id":"themes/pure/layout/_script/_comment/gitment.ejs","hash":"a64852076483395738a398deb4c10bdb0f3b7b71","modified":1690040728221},{"_id":"themes/pure/layout/_script/_analytics/google-analytics.ejs","hash":"54f1dc9375cbdb65464e0ac1b58847aa5e8bc6a5","modified":1690040728221},{"_id":"themes/pure/layout/_script/_analytics/tencent-analytics.ejs","hash":"77defb41a1613a758ff5a6a5128c6107fc584190","modified":1690040728221},{"_id":"themes/pure/layout/_script/_repository/github.ejs","hash":"a4762135de6816c85156e85886f50fb32b0adc89","modified":1690040728222},{"_id":"themes/pure/layout/_script/_analytics/baidu-analytics.ejs","hash":"f314be7860c1d5930f1600d010e3120ba5c85325","modified":1690040728221},{"_id":"themes/pure/layout/_script/_repository/legacy.ejs","hash":"b5e5c666e89550abb5004e35c7ef165c6edab62d","modified":1690040728222},{"_id":"themes/pure/layout/_script/_search/insight.ejs","hash":"3543c11d060feaf9381b5d87564b01ffef0e0a59","modified":1690040728222},{"_id":"themes/pure/layout/_partial/post/category.ejs","hash":"fcee6b4aef8b6c4627831ff8dbb2d73478511426","modified":1690040728219},{"_id":"themes/pure/layout/_partial/post/comment.ejs","hash":"3c0da69fcea6ccfd97b82d50e740107a88eec5c4","modified":1690040728219},{"_id":"themes/pure/layout/_partial/post/copyright.ejs","hash":"0a99c99992fb1e97bf5a57e05179f5680d69dcc8","modified":1690040728219},{"_id":"themes/pure/layout/_script/_search/baidu.ejs","hash":"9b60ffa2e2725a993e9cecfb81ddedd9b9361011","modified":1690040728222},{"_id":"themes/pure/layout/_partial/post/date.ejs","hash":"7d4979652998abf92a64bfae8157b70d6e514057","modified":1690040728219},{"_id":"themes/pure/layout/_partial/post/donate.ejs","hash":"a251dc34d660601a2e8b7d98b3bfe2b9023dbbce","modified":1690040728219},{"_id":"themes/pure/layout/_script/_repository/gitee.ejs","hash":"0e1ecabe809f149ebe3ce3ac393f6e6155dd6780","modified":1690040728221},{"_id":"themes/pure/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1690040728220},{"_id":"themes/pure/layout/_partial/post/nav.ejs","hash":"fcbe3695ae9b164a4a2d27a66a6827dcf3ee76f1","modified":1690040728220},{"_id":"themes/pure/layout/_partial/post/tag.ejs","hash":"39f53ead07f75c181a7ba93e586dd1b8171620f1","modified":1690040728220},{"_id":"themes/pure/layout/_partial/post/thumbnail.ejs","hash":"080d5c5f3e95accf51893a7092695fe32d34a087","modified":1690040728220},{"_id":"themes/pure/layout/_partial/post/pv.ejs","hash":"ec3ccf322432afc2761f860c5a3000ac34d46e4c","modified":1690040728220},{"_id":"themes/pure/layout/_partial/post/wordcount.ejs","hash":"bd06c4c8449ed96aabf655fe1ae3be1f0707b81e","modified":1690040728220},{"_id":"themes/pure/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1690040728220},{"_id":"themes/pure/source/images/favatar/chuangzaoshi-logo.png","hash":"7fa5734072050952159a02d330bbc008b5a99122","modified":1690040728238},{"_id":"themes/pure/source/images/favatar/idesign-logo.png","hash":"6b150a2dbb9912b7a7662255c27e4d4baaecee71","modified":1690040728238},{"_id":"themes/pure/source/images/donate/wechatpayimg.png","hash":"925c456c6f7696dc26103e21fddebf3a984d7d83","modified":1690045488452},{"_id":"themes/pure/source/images/donate/alipayimg.png","hash":"b85b03b2ea162ada14d40efb129db716fe1b3c6f","modified":1690045425911},{"_id":"themes/pure/source/images/favatar/SzsFox-logo.png","hash":"d71fcc73b7bc2a439d8c7ba461137856d190bd76","modified":1690040728238},{"_id":"themes/pure/layout/_script/_comment/disqus.ejs","hash":"a051e3eddc75586e69131c29ab8c89d69626e0fd","modified":1690040728221},{"_id":"themes/pure/screenshot/pure-theme-black.png","hash":"10b40f398af7eb7e8ba2bf2f2a959d8779fc1fe1","modified":1690040728226},{"_id":"themes/pure/screenshot/pure-theme-blue.png","hash":"6146890a68d5ea9d343c48d50151ddd5a2a1872c","modified":1690040728226},{"_id":"themes/pure/screenshot/pure-theme-green.png","hash":"12ec0c6033cb2762839fdf75434bbb4fbf946022","modified":1690040728227},{"_id":"themes/pure/screenshot/pure-theme-purple.png","hash":"9855d2eb0acd23370209354f232471df8f4f72e2","modified":1690040728227},{"_id":"themes/pure/screenshot/pure.png","hash":"8f4cfd8d7edfa4fbffdf375291302d9807f5cc1c","modified":1690040728228},{"_id":"themes/pure/source/js/jquery.min.js","hash":"5a9dcfbef655a2668e78baebeaa8dc6f41d8dabb","modified":1690040728239},{"_id":"themes/pure/source/js/plugin.min.js","hash":"07fe34638f9832702c5f81d8583c5e4e8b3d9659","modified":1690040728241},{"_id":"themes/pure/source/js/plugin.js","hash":"a8524d42b8621bfaa06602a163c6a1f82702b91d","modified":1690040728239},{"_id":"themes/pure/source/css/style.css","hash":"a115348d8810a8d6b608ffc7bb02b915b3f48534","modified":1690040728235},{"_id":"themes/pure/source/js/plugin.js.map","hash":"1730c0cc660f863120aca0a439d7264e2e245fc5","modified":1690040728240},{"_id":"themes/pure/source/css/style.min.css","hash":"1d23abc76726ebe042f7df4749f00f8f73338444","modified":1690040728236},{"_id":"themes/pure/source/fonts/iconfont.svg","hash":"25929e6e74f7027acd1f6467a67e95b153bcd8d5","modified":1690040728237},{"_id":"themes/pure/package-lock.json","hash":"a5c033452f20cd017500bb373e8f6ced2a798be8","modified":1690040802518},{"_id":"themes/pure/screenshot/pure.psd","hash":"a31cea40b45bdc31f051fca2f1e2f4ecbaee1a94","modified":1690040728234},{"_id":"source/_posts/test.md","hash":"729323a0c432382217aff5398ab46ce349d704a4","modified":1690042204505},{"_id":"source/_posts/无法下载kubernetes包.md","hash":"d52f450ae3a9fd8e7bef605ca3a6ff56a345f84d","modified":1690043313190},{"_id":"source/_posts/Macos-好用工具推荐.md","hash":"58c70acf436e287f73a318ffa0d45fb72444766c","modified":1690043806231},{"_id":"source/_posts/chrome浏览器如何屏蔽无效请求.md","hash":"c8acf520c09ba09a2a0ca0a804ab50b09453700a","modified":1690042748164},{"_id":"source/_posts/docker记不住的命令.md","hash":"43b878a16174c86b46b8554865299fa634feaaa0","modified":1690043484474},{"_id":"source/_posts/Makefile模版.md","hash":"d71313ea618a6cb4bf3f7e04dfacbd8167ea2368","modified":1690043904214},{"_id":"source/_posts/k8s记不住的命令.md","hash":"dc3f0579ff00f2267c60d181e676f64c91a02a4c","modified":1690043391639},{"_id":"source/_posts/vscode必备插件.md","hash":"6048dbbdb60d494e4c4ff04aff62542cad03b50e","modified":1690042661637},{"_id":"source/_posts/gin跨域问题.md","hash":"f7bb9406f67a500de767595715334d64d5420260","modified":1690042478841},{"_id":"source/golang/index.md","hash":"742a431b8794104e313ef6a67012c27b8209d0a3","modified":1690043127713},{"_id":"source/k8s/index.md","hash":"cbcb6dd5158ddc34eefb24dd2e0294d99a5514bb","modified":1690043118642},{"_id":"source/docker/index.md","hash":"415ad73ebaff0eb40d47bde66d6ba14b9bf78477","modified":1690043123670},{"_id":"source/tages/index.md","hash":"b679621d505b6ce842cbe1d36ec048474e5d5bc0","modified":1690043689854},{"_id":"source/工具/index.md","hash":"511921cdcdb400d1e323f7821e256d2e7cae9bca","modified":1690043730710},{"_id":"source/linux/index.md","hash":"01ce0f1a63fbf974ed1ba29122fbee323fabadc6","modified":1690043131725},{"_id":"source/k8s/k8s记不住的命令.md","hash":"14b5c84b74a93c3d24649c78e452417834c531ca","modified":1690043240457},{"_id":"source/tags/index.md","hash":"b679621d505b6ce842cbe1d36ec048474e5d5bc0","modified":1690043689854},{"_id":"source/工具/Macos-好用工具推荐.md","hash":"0d04073bc5b593b4a4b5310bdc187980ff3836ef","modified":1690043744004},{"_id":"source/tools/Macos-好用工具推荐.md","hash":"58c70acf436e287f73a318ffa0d45fb72444766c","modified":1690043806231},{"_id":"source/tools/index.md","hash":"d0b531476426f640c2d35a1de61591c1fa7f6964","modified":1690043927029},{"_id":"source/_posts/tools/Macos-好用工具推荐.md","hash":"58c70acf436e287f73a318ffa0d45fb72444766c","modified":1690043806231},{"_id":"source/_posts/tools/index.md","hash":"d0b531476426f640c2d35a1de61591c1fa7f6964","modified":1690043927029},{"_id":"source/_posts/工具/index.md","hash":"848a1a9a9677a1e38dc07188c51e0abd9e58034e","modified":1690044037947},{"_id":"source/_posts/工具/Macos-好用工具推荐.md","hash":"8eecebbdb38ed8352981e36a8abbcad8796eee99","modified":1690044033810},{"_id":"source/_posts/工具/vscode必备插件.md","hash":"78f893c4fabd9567b916b239a5ef44c2e0b2a80a","modified":1690799147850},{"_id":"source/_posts/k8s/k8s记不住的命令.md","hash":"dc3f0579ff00f2267c60d181e676f64c91a02a4c","modified":1690043391639},{"_id":"source/_posts/linux/Makefile模版.md","hash":"9d8665fde814d323d2dcaeee07f1a3424694998f","modified":1690276564489},{"_id":"source/_posts/工具/chrome浏览器如何屏蔽无效请求.md","hash":"dda583757d1b544ff2ed6ed2611f0a7d0e395152","modified":1690044112841},{"_id":"source/_posts/docker/docker记不住的命令.md","hash":"09b4068f8dc7e5bfc36ea72c3645adabb3fe5068","modified":1690876583510},{"_id":"source/_posts/docker/gin跨域问题.md","hash":"ae813ce71dfb36280edae99c5fa412d17666dec6","modified":1690044196066},{"_id":"source/_posts/golang/无法下载kubernetes包.md","hash":"d52f450ae3a9fd8e7bef605ca3a6ff56a345f84d","modified":1690043313190},{"_id":"source/_posts/k8s/一键安装快捷命令.md","hash":"d0720013076ad0d63bfe96ddf10c6bf024870979","modified":1690209493887},{"_id":"source/shells/shell.sh","hash":"7a5c6c538edda2603e700647833369ce713704a6","modified":1690098219032},{"_id":"source/_posts/linux/网络.md","hash":"7874604cac068c9027ff3669b6144a8fc1c518dc","modified":1690096013912},{"_id":"themes/pure/layout/_partial/article-copy-code.ejs","hash":"87c3048e7f450807d479f3520768cd490b1c8a6c","modified":1690127522911},{"_id":"source/_posts/golang/如何分配IP.md","hash":"e20bddf0fbfb157ab4871b7df0d5cdeafb8701c2","modified":1690195171221},{"_id":"source/_posts/golang不失优雅.md","hash":"6a40cefa4c9f35fa8d925b596ac6bc78d9403d65","modified":1690425850923},{"_id":"source/_posts/k8s/使用kubeadm安装集群.md","hash":"928a239df2c56e73b4a6f2143f48b2f0b4571255","modified":1690607290675},{"_id":"source/shells/k8s_alias_uninstall.sh","hash":"9583e19558fe014228bfdf2c8d4591380950ce55","modified":1690540425760},{"_id":"source/_posts/k8s/使用client-go操作自定义CRD.md","hash":"9cbf06bebd4c177bbc381ddacc19f4cf26dbeb51","modified":1690514772458},{"_id":"source/_posts/linux/文件、磁盘相关命令.md","hash":"a2c25f1e668dbc3d66e6cea2960d60ba656ad0aa","modified":1690274360998},{"_id":"source/shells/k8s_alias_install.sh","hash":"e2d660818a3e82ef0f9e5cc6153244ff4b968bcb","modified":1690540848365},{"_id":"source/_posts/golang/golang time包用法.md","hash":"a032ac03dec6483390243755ae8d165b1a0d47b7","modified":1690430185470},{"_id":"source/_posts/k8s/flannel、calico.md","hash":"fe4a0c0426b9b4d276992a84bddf1404a28a7c3c","modified":1690439680717},{"_id":"source/_posts/docker/Dockerfile模板.md","hash":"542b49d7e8b8bfe0bdcf534704199fb9a9360a93","modified":1690443250217},{"_id":"source/_posts/golang/golang-time包用法.md","hash":"63a8360bb7badd380ba9422f36e84ec6a76aa97f","modified":1690443230769},{"_id":"source/_posts/k8s/一键安装kubectl快捷命令.md","hash":"2c0d084e3a3a3b844fd093842f68dd0ef65bd58c","modified":1690448484400},{"_id":"source/_posts/docker/Dockerfile使用.md","hash":"66874c0b3427d1b262859aeffab0628b3f0c697e","modified":1690451584474},{"_id":"source/_posts/golang/golang细节.md","hash":"c8dc323857ec3344e18caf9b7c4eeeddfea905f1","modified":1690610361089},{"_id":"source/_posts/golang/viper配置文件.md","hash":"da2de5556188a7d37f4e056bb4f2e3c813268b51","modified":1690607406008},{"_id":"source/_posts/工具/xui客户端配置.md","hash":"fe56a7c1d6404138f82049a34afadad4f20c6fb0","modified":1690609662238},{"_id":"source/_posts/k8s/安装kubectl快捷命令.md","hash":"f49166a4b79015f5bf4c684df9ca1b2d25983637","modified":1690540438434},{"_id":"source/_posts/工具/oh-my-zsh-让终端飞.md","hash":"e055e7561f1d2a5ac2a44e749f084d66c45907f7","modified":1690542332600},{"_id":"source/_posts/工具/chatgpt.md","hash":"b9482f05f8aed815d19d3144efe7b55c596bf87e","modified":1690522689860},{"_id":"public/atom.xml","hash":"c51282b8b74f0f9a3f9884ee4e906104b1126f2e","modified":1690876607198},{"_id":"public/baidusitemap.xml","hash":"8396894cdc332e3782ccb921b48f0cc9bb31c127","modified":1690876607198},{"_id":"public/sitemap.xml","hash":"a7cdb523650793b10a4742d66c65c2467ad21d1a","modified":1690876607198},{"_id":"public/sitemap.txt","hash":"fcfe08387ff40c27e9071ce4ed7c62c31a6f7dd3","modified":1690876607198},{"_id":"public/content.json","hash":"69e45d3f7f01661915de402c67937c879ad2e0c5","modified":1690876607198},{"_id":"public/archives/2023/page/3/index.html","hash":"f5ef764c7c93836e7b70f8852890adb9052d6619","modified":1690876607198},{"_id":"public/archives/page/3/index.html","hash":"cdcca0d7a62e361e4eba30f5f8264dc923a2927c","modified":1690876607198},{"_id":"public/archives/2023/07/page/3/index.html","hash":"00eeb6b4a18bc2ae9f042e3675465a806cba195c","modified":1690876607198},{"_id":"public/tags/linux/index.html","hash":"212a99b359d91974398cc3b1dea646744361b078","modified":1690876607198},{"_id":"public/tags/index.html","hash":"d1b896bf7938bc41beb19e676a27b9367f7e262b","modified":1690876607198},{"_id":"public/2023/07/29/golang/golang细节/index.html","hash":"27938e4c903b184aa19ee04ac9408bb541bc845f","modified":1690876607198},{"_id":"public/2023/07/28/工具/xui客户端配置/index.html","hash":"e64d4944454a7d1bfaf4b73549aa9c088aae8460","modified":1690876607198},{"_id":"public/2023/07/28/工具/chatgpt/index.html","hash":"ec3eb9c7afd686bf7048761cdcc4cd31b8e319b1","modified":1690876607198},{"_id":"public/2023/07/29/golang/viper配置文件/index.html","hash":"63f619fbbe24c53c8d706b5013beee990767e4f4","modified":1690876607198},{"_id":"public/2023/07/27/工具/oh-my-zsh-让终端飞/index.html","hash":"c5331a66920166617684e8b2b3062045ef4cf579","modified":1690876607198},{"_id":"public/2023/07/27/docker/Dockerfile使用/index.html","hash":"b40f38c9f4d11ff92442845db07f893d358a69e9","modified":1690876607198},{"_id":"public/2023/07/27/golang/golang-time包用法/index.html","hash":"c7667bf8638d1b2aca401da214be61e493728bbe","modified":1690876607198},{"_id":"public/2023/07/27/k8s/flannel、calico/index.html","hash":"b6eab083950bb97f710483d3a910c5ba9951b5e5","modified":1690876607198},{"_id":"public/2023/07/26/k8s/使用kubeadm安装集群/index.html","hash":"fac8d7cccf4e399a85ed63d10f76346ee8d36f7a","modified":1690876607198},{"_id":"public/2023/07/25/k8s/使用client-go操作自定义CRD/index.html","hash":"bd9af3df9c43b6a55b7cc3bed306ac683a65b3dc","modified":1690876607198},{"_id":"public/2023/07/24/golang/如何分配IP/index.html","hash":"e6fccbd890e0e767bf2bedd2f3d0a5a9c8cbd316","modified":1690876607198},{"_id":"public/2023/07/23/k8s/安装kubectl快捷命令/index.html","hash":"48fd24f9c88f188217aca5a4b4799f678ca0b6e1","modified":1690876607198},{"_id":"public/2023/07/25/linux/文件、磁盘相关命令/index.html","hash":"1048b006012a0d977ef63823b42bb6455c802edf","modified":1690876607198},{"_id":"public/2023/07/23/k8s/k8s记不住的命令/index.html","hash":"badade574bd1f49a4c72acb65476f10780f5ebfa","modified":1690876607198},{"_id":"public/2023/07/23/linux/网络/index.html","hash":"0a29b0ab797a1fd8bea7300f8c7a7e4808dcbb61","modified":1690876607198},{"_id":"public/2023/07/23/docker/docker记不住的命令/index.html","hash":"aa405543fb47231b301ced59f8d4554146cddc38","modified":1690876607198},{"_id":"public/2023/07/23/工具/chrome浏览器如何屏蔽无效请求/index.html","hash":"29397664475fb63f7c4e59d0edafd681f93f2f53","modified":1690876607198},{"_id":"public/2023/07/23/工具/vscode必备插件/index.html","hash":"c9b0157f9486edef9187ee2266b16310395c6613","modified":1690876607198},{"_id":"public/2023/07/23/工具/Macos-好用工具推荐/index.html","hash":"70fd5cc26801a1aab53bb8c6137847bc4adfc352","modified":1690876607198},{"_id":"public/2023/07/23/linux/Makefile模版/index.html","hash":"bba3ab7491faea512c1c43db01d2a1455083cde0","modified":1690876607198},{"_id":"public/2023/07/23/docker/gin跨域问题/index.html","hash":"f0db51bea22a6a25c01824b4aff67b74dfcf6247","modified":1690876607198},{"_id":"public/archives/index.html","hash":"faff327ba37e1b2fb546f83ec114608d8e73e99e","modified":1690876607198},{"_id":"public/archives/2023/index.html","hash":"c0f10a9518b55ff1309c5eba3ce835894bd09384","modified":1690876607198},{"_id":"public/archives/page/2/index.html","hash":"71a68dbe9e9b4cb4ca9fdfb6b98dd32964255824","modified":1690876607198},{"_id":"public/2023/07/23/golang/无法下载kubernetes包/index.html","hash":"ddca9eb5bced98fa452bcbcc245e72027f6e761f","modified":1690876607198},{"_id":"public/archives/2023/page/2/index.html","hash":"a89ed2e888f458ed31f0949f5d8114a1f1fdcaa0","modified":1690876607198},{"_id":"public/archives/2023/07/index.html","hash":"d22a33fdefdf50d72809861e03cef4830a56804b","modified":1690876607198},{"_id":"public/archives/2023/07/page/2/index.html","hash":"006e83585f21e42a902d866b48642a47ce066ec7","modified":1690876607198},{"_id":"public/index.html","hash":"029839473dc5370dd4b3776ef92790d1e277ce39","modified":1690876607198},{"_id":"public/tags/k8s/index.html","hash":"3a1cf9bb6623d3eeb03512074e589b7a907ee27f","modified":1690876607198},{"_id":"public/tags/golang/index.html","hash":"2135c8b7d33449620e33463384e4019eeb592af1","modified":1690876607198},{"_id":"public/page/2/index.html","hash":"9d370c78c07b8a255a305b4ef4d6d063709d47dc","modified":1690876607198},{"_id":"public/tags/docker/index.html","hash":"19611f89d92b9c628f855729f4c1f0f129708fe2","modified":1690876607198},{"_id":"public/page/3/index.html","hash":"f3fe2c99d61d8f44c850c0678b188a4614560662","modified":1690876607198},{"_id":"public/tags/工具/index.html","hash":"f4c0a5a5dcfd440fa596b7c78d470a233dbdf3d0","modified":1690876607198},{"_id":"public/favicon.png","hash":"89875d3b018552e396fc5f0bd8ff5d9f5d4a5d71","modified":1690785245970},{"_id":"public/fonts/iconfont.woff","hash":"78d29194287b8885d25212048c4f787705212a6e","modified":1690785245970},{"_id":"public/images/thumb-default.png","hash":"e8403b97ed9251f9f5207765b0ce796c5000b4ba","modified":1690785245970},{"_id":"public/images/avatar.jpg","hash":"f86eafc318f3900319b25057811720168f24d248","modified":1690785245970},{"_id":"public/fonts/iconfont.ttf","hash":"9b8837f9f79cf6ab794736301d0665345183a20c","modified":1690785245970},{"_id":"public/images/xingqiu-qrcode.jpg","hash":"ef2c2848dc79db6df7c752510651ed8ba57f2daf","modified":1690785245970},{"_id":"public/images/favatar/idesign-logo.png","hash":"6b150a2dbb9912b7a7662255c27e4d4baaecee71","modified":1690785245970},{"_id":"public/images/favatar/SzsFox-logo.png","hash":"d71fcc73b7bc2a439d8c7ba461137856d190bd76","modified":1690785245970},{"_id":"public/images/favatar/chuangzaoshi-logo.png","hash":"7fa5734072050952159a02d330bbc008b5a99122","modified":1690785245970},{"_id":"public/fonts/iconfont.eot","hash":"6819d9bb643bdeafc17bfecb0746ae641b018fdf","modified":1690785245970},{"_id":"public/shells/k8s_alias_install.sh","hash":"e2d660818a3e82ef0f9e5cc6153244ff4b968bcb","modified":1690785245970},{"_id":"public/shells/k8s_alias_uninstall.sh","hash":"9583e19558fe014228bfdf2c8d4591380950ce55","modified":1690785245970},{"_id":"public/images/donate/alipayimg.png","hash":"b85b03b2ea162ada14d40efb129db716fe1b3c6f","modified":1690785245970},{"_id":"public/images/donate/wechatpayimg.png","hash":"925c456c6f7696dc26103e21fddebf3a984d7d83","modified":1690785245970},{"_id":"public/fancybox/jquery.fancybox.min.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1690785245970},{"_id":"public/js/application.min.js","hash":"34d765e982c7d6360c37f82202d99f63ac40e408","modified":1690785245970},{"_id":"public/js/script.js","hash":"49773efcb2221bbdf2d86f3f5c5ff2d841b528cc","modified":1690785245970},{"_id":"public/js/application.js","hash":"fd0b7529e7c0b387f88c4f28c9e272bb01169490","modified":1690785245970},{"_id":"public/js/insight.js","hash":"298e8ca42517984bd26f34caa4c45560b0e909ad","modified":1690785245970},{"_id":"public/fonts/README.html","hash":"3b9daaf126709e3bbce5926e15d599f1fe877921","modified":1690785245970},{"_id":"public/css/style.css","hash":"a115348d8810a8d6b608ffc7bb02b915b3f48534","modified":1690785245970},{"_id":"public/js/jquery-3.6.4.min.js","hash":"eda46747c71d38a880bee44f9a439c3858bb8f99","modified":1690785245970},{"_id":"public/css/style.min.css","hash":"1d23abc76726ebe042f7df4749f00f8f73338444","modified":1690785245970},{"_id":"public/fancybox/jquery.fancybox.min.js","hash":"6181412e73966696d08e1e5b1243a572d0f22ba6","modified":1690785245970},{"_id":"public/js/plugin.js","hash":"a8524d42b8621bfaa06602a163c6a1f82702b91d","modified":1690785245970},{"_id":"public/js/jquery.min.js","hash":"5a9dcfbef655a2668e78baebeaa8dc6f41d8dabb","modified":1690785245970},{"_id":"public/js/plugin.min.js","hash":"07fe34638f9832702c5f81d8583c5e4e8b3d9659","modified":1690785245970},{"_id":"public/fonts/iconfont.svg","hash":"25929e6e74f7027acd1f6467a67e95b153bcd8d5","modified":1690785245970},{"_id":"public/js/plugin.js.map","hash":"1730c0cc660f863120aca0a439d7264e2e245fc5","modified":1690785245970},{"_id":"public/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1690785245970},{"_id":"source/_posts/golang/grpc如何使用.md","hash":"534d756a61e30c3f67113de64b0e0aef60b15405","modified":1690797448538},{"_id":"source/_posts/golang/test.md","hash":"6d7cc1ab7b0796cd4d145ffd85e4614a86fc62e8","modified":1690800562188},{"_id":"public/2023/07/31/golang/test/index.html","hash":"4a564ccb8765e90424a281591d0e4885df04ad5d","modified":1690856296315},{"_id":"public/2023/07/31/golang/grpc如何使用/index.html","hash":"22b6b6d4510ee97b5aab111bad9160ee5a1ca6c7","modified":1690876607198},{"_id":"themes/pure/source/CANME","hash":"15c5fb1d986e21e53e29f989ed097ff5c949c341","modified":1690857244345},{"_id":"public/CANME","hash":"15c5fb1d986e21e53e29f989ed097ff5c949c341","modified":1690857255409},{"_id":"themes/pure/source/CNAME","hash":"15c5fb1d986e21e53e29f989ed097ff5c949c341","modified":1690857619632},{"_id":"public/CNAME","hash":"15c5fb1d986e21e53e29f989ed097ff5c949c341","modified":1690857621938},{"_id":"source/_posts/linux/linux命令.md","hash":"2e750dc698eaab9707ed0abdacb0aa85821fe6a9","modified":1690876585306},{"_id":"public/archives/2023/08/index.html","hash":"e92789c67b303084d508eff6db963560c0f6a8b8","modified":1690876607198},{"_id":"public/2023/08/01/linux/linux命令/index.html","hash":"1bd386abf9386157e2cfd2951fe5ff7a236354cb","modified":1690876607198}],"Category":[],"Data":[],"Page":[{"title":"tags","type":"tags","layout":"tags","date":"2023-07-22T16:24:49.000Z","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ntype: tags\nlayout: \"tags\"\ndate: 2023-07-23 00:24:49\n---\n","updated":"2023-07-22T16:34:49.854Z","path":"tags/index.html","_id":"clke8f2bz0002yj4w89rrge00","comments":1,"content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"layout":"docker","title":"docker记不住的命令","date":"2023-07-22T16:20:28.000Z","type":"tags","_content":"\n#### 启动一个容器\n\n```yaml\n# -p: 8888为主机端口，3306为容器端口\n# -e: 环境变量设置\n# 最后的 mysql 为镜像 \ndocker run -itd --name mysql-test -p 8888:3306 -e MYSQL_ROOT_PASSWORD=123456 mysql\n```\n\n#### 删除所有未使用的镜像\n```yaml\n docker system prune -a\n ```\n\n#### mac 清理镜像层\n```sh\nrm ~/Library/Containers/com.docker.docker\n```\n\n#### 启动 x-ui\n```sh\ndocker run -d --net=host --name x-ui -v /etc/x-ui:/etc/x-ui/ xxx/xxx/x-ui:latest\n```\n\n#### 安装最新版 docker\n```sh\n# 删除旧版本的Docker\nsudo yum remove docker docker-client docker-client-latest docker-common docker-latest docker-latest-logrotate docker-logrotate docker-engine\n# 安装依赖软件包\nsudo yum install -y yum-utils device-mapper-persistent-data lvm2\n# 添加Docker软件源\nsudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo\n# 更新yum缓存\nsudo yum makecache fast\n# 安装最新版Docker\nsudo yum install -y docker-ce\n# 启动Docker服务并设置开机自启动\nsudo systemctl start docker\nsudo systemctl enable docker\n# 确认Docker已安装并正在运行\ndocker --version\nsudo docker info\n```","source":"_posts/docker/docker记不住的命令.md","raw":"---\nlayout: docker\ntitle: docker记不住的命令\ndate: 2023-07-23 00:20:28\ntype: \"tags\"\ntags: \"docker\"\n---\n\n#### 启动一个容器\n\n```yaml\n# -p: 8888为主机端口，3306为容器端口\n# -e: 环境变量设置\n# 最后的 mysql 为镜像 \ndocker run -itd --name mysql-test -p 8888:3306 -e MYSQL_ROOT_PASSWORD=123456 mysql\n```\n\n#### 删除所有未使用的镜像\n```yaml\n docker system prune -a\n ```\n\n#### mac 清理镜像层\n```sh\nrm ~/Library/Containers/com.docker.docker\n```\n\n#### 启动 x-ui\n```sh\ndocker run -d --net=host --name x-ui -v /etc/x-ui:/etc/x-ui/ xxx/xxx/x-ui:latest\n```\n\n#### 安装最新版 docker\n```sh\n# 删除旧版本的Docker\nsudo yum remove docker docker-client docker-client-latest docker-common docker-latest docker-latest-logrotate docker-logrotate docker-engine\n# 安装依赖软件包\nsudo yum install -y yum-utils device-mapper-persistent-data lvm2\n# 添加Docker软件源\nsudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo\n# 更新yum缓存\nsudo yum makecache fast\n# 安装最新版Docker\nsudo yum install -y docker-ce\n# 启动Docker服务并设置开机自启动\nsudo systemctl start docker\nsudo systemctl enable docker\n# 确认Docker已安装并正在运行\ndocker --version\nsudo docker info\n```","slug":"docker/docker记不住的命令","published":1,"updated":"2023-08-01T07:56:23.510Z","_id":"clke8jrxr00033w4w3v7o1h18","comments":1,"photos":[],"link":"","content":"<h4 id=\"启动一个容器\"><a href=\"#启动一个容器\" class=\"headerlink\" title=\"启动一个容器\"></a>启动一个容器</h4><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -p: 8888为主机端口，3306为容器端口</span></span><br><span class=\"line\"><span class=\"comment\"># -e: 环境变量设置</span></span><br><span class=\"line\"><span class=\"comment\"># 最后的 mysql 为镜像 </span></span><br><span class=\"line\"><span class=\"string\">docker</span> <span class=\"string\">run</span> <span class=\"string\">-itd</span> <span class=\"string\">--name</span> <span class=\"string\">mysql-test</span> <span class=\"string\">-p</span> <span class=\"number\">8888</span><span class=\"string\">:3306</span> <span class=\"string\">-e</span> <span class=\"string\">MYSQL_ROOT_PASSWORD=123456</span> <span class=\"string\">mysql</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"删除所有未使用的镜像\"><a href=\"#删除所有未使用的镜像\" class=\"headerlink\" title=\"删除所有未使用的镜像\"></a>删除所有未使用的镜像</h4><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">docker</span> <span class=\"string\">system</span> <span class=\"string\">prune</span> <span class=\"string\">-a</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"mac-清理镜像层\"><a href=\"#mac-清理镜像层\" class=\"headerlink\" title=\"mac 清理镜像层\"></a>mac 清理镜像层</h4><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">rm</span> ~/Library/Containers/com.docker.docker</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"启动-x-ui\"><a href=\"#启动-x-ui\" class=\"headerlink\" title=\"启动 x-ui\"></a>启动 x-ui</h4><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -d --net=host --name x-ui -v /etc/x-ui:/etc/x-ui/ xxx/xxx/x-ui:latest</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"安装最新版-docker\"><a href=\"#安装最新版-docker\" class=\"headerlink\" title=\"安装最新版 docker\"></a>安装最新版 docker</h4><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 删除旧版本的Docker</span></span><br><span class=\"line\">sudo yum remove docker docker-client docker-client-latest docker-common docker-latest docker-latest-logrotate docker-logrotate docker-engine</span><br><span class=\"line\"><span class=\"comment\"># 安装依赖软件包</span></span><br><span class=\"line\">sudo yum install -y yum-utils device-mapper-persistent-data lvm2</span><br><span class=\"line\"><span class=\"comment\"># 添加Docker软件源</span></span><br><span class=\"line\">sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo</span><br><span class=\"line\"><span class=\"comment\"># 更新yum缓存</span></span><br><span class=\"line\">sudo yum makecache fast</span><br><span class=\"line\"><span class=\"comment\"># 安装最新版Docker</span></span><br><span class=\"line\">sudo yum install -y docker-ce</span><br><span class=\"line\"><span class=\"comment\"># 启动Docker服务并设置开机自启动</span></span><br><span class=\"line\">sudo systemctl start docker</span><br><span class=\"line\">sudo systemctl <span class=\"built_in\">enable</span> docker</span><br><span class=\"line\"><span class=\"comment\"># 确认Docker已安装并正在运行</span></span><br><span class=\"line\">docker --version</span><br><span class=\"line\">sudo docker info</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h4 id=\"启动一个容器\"><a href=\"#启动一个容器\" class=\"headerlink\" title=\"启动一个容器\"></a>启动一个容器</h4><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -p: 8888为主机端口，3306为容器端口</span></span><br><span class=\"line\"><span class=\"comment\"># -e: 环境变量设置</span></span><br><span class=\"line\"><span class=\"comment\"># 最后的 mysql 为镜像 </span></span><br><span class=\"line\"><span class=\"string\">docker</span> <span class=\"string\">run</span> <span class=\"string\">-itd</span> <span class=\"string\">--name</span> <span class=\"string\">mysql-test</span> <span class=\"string\">-p</span> <span class=\"number\">8888</span><span class=\"string\">:3306</span> <span class=\"string\">-e</span> <span class=\"string\">MYSQL_ROOT_PASSWORD=123456</span> <span class=\"string\">mysql</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"删除所有未使用的镜像\"><a href=\"#删除所有未使用的镜像\" class=\"headerlink\" title=\"删除所有未使用的镜像\"></a>删除所有未使用的镜像</h4><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">docker</span> <span class=\"string\">system</span> <span class=\"string\">prune</span> <span class=\"string\">-a</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"mac-清理镜像层\"><a href=\"#mac-清理镜像层\" class=\"headerlink\" title=\"mac 清理镜像层\"></a>mac 清理镜像层</h4><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">rm</span> ~/Library/Containers/com.docker.docker</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"启动-x-ui\"><a href=\"#启动-x-ui\" class=\"headerlink\" title=\"启动 x-ui\"></a>启动 x-ui</h4><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -d --net=host --name x-ui -v /etc/x-ui:/etc/x-ui/ xxx/xxx/x-ui:latest</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"安装最新版-docker\"><a href=\"#安装最新版-docker\" class=\"headerlink\" title=\"安装最新版 docker\"></a>安装最新版 docker</h4><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 删除旧版本的Docker</span></span><br><span class=\"line\">sudo yum remove docker docker-client docker-client-latest docker-common docker-latest docker-latest-logrotate docker-logrotate docker-engine</span><br><span class=\"line\"><span class=\"comment\"># 安装依赖软件包</span></span><br><span class=\"line\">sudo yum install -y yum-utils device-mapper-persistent-data lvm2</span><br><span class=\"line\"><span class=\"comment\"># 添加Docker软件源</span></span><br><span class=\"line\">sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo</span><br><span class=\"line\"><span class=\"comment\"># 更新yum缓存</span></span><br><span class=\"line\">sudo yum makecache fast</span><br><span class=\"line\"><span class=\"comment\"># 安装最新版Docker</span></span><br><span class=\"line\">sudo yum install -y docker-ce</span><br><span class=\"line\"><span class=\"comment\"># 启动Docker服务并设置开机自启动</span></span><br><span class=\"line\">sudo systemctl start docker</span><br><span class=\"line\">sudo systemctl <span class=\"built_in\">enable</span> docker</span><br><span class=\"line\"><span class=\"comment\"># 确认Docker已安装并正在运行</span></span><br><span class=\"line\">docker --version</span><br><span class=\"line\">sudo docker info</span><br></pre></td></tr></table></figure>"},{"layout":"k8s","title":"k8s记不住的命令","date":"2023-07-22T16:29:39.000Z","_content":"\n#### 替换镜像\n```sh\nkubectl set image deployment/provider provider=provider:latest\n```\n\n#### 给 node/pod 打标签\n```sh\nkubectl label nodes kube-node node=kube-node\n```\n\n#### 通过标签过滤\n```sh\nkubectl get node -l \"node=kube-node\"\n```\n\n#### kubectl cp\n```sh\n# 拷贝pod数据到本地\nkubectl cp <some-namespace>/<some-pod>:/tmp/foo /tmp/foo\n\n# 拷贝本地数据到pod之中\nkubectl cp /tmp/foo <some-namespace>/<some-pod>:/tmp/foo\n```\n\n#### 回滚版本\n```sh\n# 查看历史版本\nkubectl rollout history deployment provider\n\n# 回滚到上一个版本\nkubectl rollout undo deployment provider\n\n# 回滚到指定版本\nkubectl rollout undo deployment provider --to-revision=2\n```\n\n#### 污点\n```sh\n# <node-name> 是要添加污点的节点的名称。\n# <taint-key> 是污点的键。\n# <taint-value> 是污点的值，可以留空。\n# <taint-effect> 是污点的影响效果，可以是以下选项之一：\n# NoSchedule：表示不将新的Pod调度到有这个污点的节点上。\n# PreferNoSchedule：表示尽量不将新的Pod调度到有这个污点的节点上。\n# NoExecute：表示不将新的Pod调度到有这个污点的节点上，并且将已经运行在节点上的Pod驱逐出节点（如果它们不匹配Pod的容忍度）。\nkubectl taint nodes <node-name> <taint-key>=<taint-value>:<taint-effect>\n```\n\n#### 探测\n* livenessProbe: 存活探测\n    * failureThreshold: 表示连续失败探测的次数，认为容器已经死亡，默认为3次\n    * initialDelaySeconds: 表示在容器启动后多少秒开始进行探测，默认值为10秒。\n    * periodSeconds: 表示多长时间重试一次探测，默认值为10秒\n    * successThreshold: 表示连续成功探测的次数，认为容器仍处于健康状态，默认为1次\n    * timeoutSeconds: 表示探测请求的超时时间，默认为1秒。\n* readinessProbe: 就绪探测\n```yaml\nlivenessProbe:\n  failureThreshold: 10\n  initialDelaySeconds: 300\n  httpGet:\n    path: /-/healthy\n    port: web\n    scheme: HTTP\n  periodSeconds: 5\n  successThreshold: 1\n  timeoutSeconds: 3\nreadinessProbe:\n  initialDelaySeconds: 300\n  failureThreshold: 20\n  httpGet:\n    path: /-/ready\n    port: web\n    scheme: HTTP\n  periodSeconds: 5\n  successThreshold: 1\n  timeoutSeconds: 3\n```\n","source":"_posts/k8s/k8s记不住的命令.md","raw":"---\nlayout: k8s\ntitle: k8s记不住的命令\ndate: 2023-07-23 00:29:39\ntags: k8s\n---\n\n#### 替换镜像\n```sh\nkubectl set image deployment/provider provider=provider:latest\n```\n\n#### 给 node/pod 打标签\n```sh\nkubectl label nodes kube-node node=kube-node\n```\n\n#### 通过标签过滤\n```sh\nkubectl get node -l \"node=kube-node\"\n```\n\n#### kubectl cp\n```sh\n# 拷贝pod数据到本地\nkubectl cp <some-namespace>/<some-pod>:/tmp/foo /tmp/foo\n\n# 拷贝本地数据到pod之中\nkubectl cp /tmp/foo <some-namespace>/<some-pod>:/tmp/foo\n```\n\n#### 回滚版本\n```sh\n# 查看历史版本\nkubectl rollout history deployment provider\n\n# 回滚到上一个版本\nkubectl rollout undo deployment provider\n\n# 回滚到指定版本\nkubectl rollout undo deployment provider --to-revision=2\n```\n\n#### 污点\n```sh\n# <node-name> 是要添加污点的节点的名称。\n# <taint-key> 是污点的键。\n# <taint-value> 是污点的值，可以留空。\n# <taint-effect> 是污点的影响效果，可以是以下选项之一：\n# NoSchedule：表示不将新的Pod调度到有这个污点的节点上。\n# PreferNoSchedule：表示尽量不将新的Pod调度到有这个污点的节点上。\n# NoExecute：表示不将新的Pod调度到有这个污点的节点上，并且将已经运行在节点上的Pod驱逐出节点（如果它们不匹配Pod的容忍度）。\nkubectl taint nodes <node-name> <taint-key>=<taint-value>:<taint-effect>\n```\n\n#### 探测\n* livenessProbe: 存活探测\n    * failureThreshold: 表示连续失败探测的次数，认为容器已经死亡，默认为3次\n    * initialDelaySeconds: 表示在容器启动后多少秒开始进行探测，默认值为10秒。\n    * periodSeconds: 表示多长时间重试一次探测，默认值为10秒\n    * successThreshold: 表示连续成功探测的次数，认为容器仍处于健康状态，默认为1次\n    * timeoutSeconds: 表示探测请求的超时时间，默认为1秒。\n* readinessProbe: 就绪探测\n```yaml\nlivenessProbe:\n  failureThreshold: 10\n  initialDelaySeconds: 300\n  httpGet:\n    path: /-/healthy\n    port: web\n    scheme: HTTP\n  periodSeconds: 5\n  successThreshold: 1\n  timeoutSeconds: 3\nreadinessProbe:\n  initialDelaySeconds: 300\n  failureThreshold: 20\n  httpGet:\n    path: /-/ready\n    port: web\n    scheme: HTTP\n  periodSeconds: 5\n  successThreshold: 1\n  timeoutSeconds: 3\n```\n","slug":"k8s/k8s记不住的命令","published":1,"updated":"2023-07-22T16:29:51.639Z","_id":"clke8k2dq00053w4whx9jgpie","comments":1,"photos":[],"link":"","content":"<h4 id=\"替换镜像\"><a href=\"#替换镜像\" class=\"headerlink\" title=\"替换镜像\"></a>替换镜像</h4><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl <span class=\"built_in\">set</span> image deployment/provider provider=provider:latest</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"给-node-pod-打标签\"><a href=\"#给-node-pod-打标签\" class=\"headerlink\" title=\"给 node&#x2F;pod 打标签\"></a>给 node&#x2F;pod 打标签</h4><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl label nodes kube-node node=kube-node</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"通过标签过滤\"><a href=\"#通过标签过滤\" class=\"headerlink\" title=\"通过标签过滤\"></a>通过标签过滤</h4><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl get node -l <span class=\"string\">&quot;node=kube-node&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"kubectl-cp\"><a href=\"#kubectl-cp\" class=\"headerlink\" title=\"kubectl cp\"></a>kubectl cp</h4><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 拷贝pod数据到本地</span></span><br><span class=\"line\">kubectl <span class=\"built_in\">cp</span> &lt;some-namespace&gt;/&lt;some-pod&gt;:/tmp/foo /tmp/foo</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 拷贝本地数据到pod之中</span></span><br><span class=\"line\">kubectl <span class=\"built_in\">cp</span> /tmp/foo &lt;some-namespace&gt;/&lt;some-pod&gt;:/tmp/foo</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"回滚版本\"><a href=\"#回滚版本\" class=\"headerlink\" title=\"回滚版本\"></a>回滚版本</h4><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看历史版本</span></span><br><span class=\"line\">kubectl rollout <span class=\"built_in\">history</span> deployment provider</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 回滚到上一个版本</span></span><br><span class=\"line\">kubectl rollout undo deployment provider</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 回滚到指定版本</span></span><br><span class=\"line\">kubectl rollout undo deployment provider --to-revision=2</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"污点\"><a href=\"#污点\" class=\"headerlink\" title=\"污点\"></a>污点</h4><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># &lt;node-name&gt; 是要添加污点的节点的名称。</span></span><br><span class=\"line\"><span class=\"comment\"># &lt;taint-key&gt; 是污点的键。</span></span><br><span class=\"line\"><span class=\"comment\"># &lt;taint-value&gt; 是污点的值，可以留空。</span></span><br><span class=\"line\"><span class=\"comment\"># &lt;taint-effect&gt; 是污点的影响效果，可以是以下选项之一：</span></span><br><span class=\"line\"><span class=\"comment\"># NoSchedule：表示不将新的Pod调度到有这个污点的节点上。</span></span><br><span class=\"line\"><span class=\"comment\"># PreferNoSchedule：表示尽量不将新的Pod调度到有这个污点的节点上。</span></span><br><span class=\"line\"><span class=\"comment\"># NoExecute：表示不将新的Pod调度到有这个污点的节点上，并且将已经运行在节点上的Pod驱逐出节点（如果它们不匹配Pod的容忍度）。</span></span><br><span class=\"line\">kubectl taint nodes &lt;node-name&gt; &lt;taint-key&gt;=&lt;taint-value&gt;:&lt;taint-effect&gt;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"探测\"><a href=\"#探测\" class=\"headerlink\" title=\"探测\"></a>探测</h4><ul>\n<li>livenessProbe: 存活探测<ul>\n<li>failureThreshold: 表示连续失败探测的次数，认为容器已经死亡，默认为3次</li>\n<li>initialDelaySeconds: 表示在容器启动后多少秒开始进行探测，默认值为10秒。</li>\n<li>periodSeconds: 表示多长时间重试一次探测，默认值为10秒</li>\n<li>successThreshold: 表示连续成功探测的次数，认为容器仍处于健康状态，默认为1次</li>\n<li>timeoutSeconds: 表示探测请求的超时时间，默认为1秒。</li>\n</ul>\n</li>\n<li>readinessProbe: 就绪探测<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">livenessProbe:</span></span><br><span class=\"line\">  <span class=\"attr\">failureThreshold:</span> <span class=\"number\">10</span></span><br><span class=\"line\">  <span class=\"attr\">initialDelaySeconds:</span> <span class=\"number\">300</span></span><br><span class=\"line\">  <span class=\"attr\">httpGet:</span></span><br><span class=\"line\">    <span class=\"attr\">path:</span> <span class=\"string\">/-/healthy</span></span><br><span class=\"line\">    <span class=\"attr\">port:</span> <span class=\"string\">web</span></span><br><span class=\"line\">    <span class=\"attr\">scheme:</span> <span class=\"string\">HTTP</span></span><br><span class=\"line\">  <span class=\"attr\">periodSeconds:</span> <span class=\"number\">5</span></span><br><span class=\"line\">  <span class=\"attr\">successThreshold:</span> <span class=\"number\">1</span></span><br><span class=\"line\">  <span class=\"attr\">timeoutSeconds:</span> <span class=\"number\">3</span></span><br><span class=\"line\"><span class=\"attr\">readinessProbe:</span></span><br><span class=\"line\">  <span class=\"attr\">initialDelaySeconds:</span> <span class=\"number\">300</span></span><br><span class=\"line\">  <span class=\"attr\">failureThreshold:</span> <span class=\"number\">20</span></span><br><span class=\"line\">  <span class=\"attr\">httpGet:</span></span><br><span class=\"line\">    <span class=\"attr\">path:</span> <span class=\"string\">/-/ready</span></span><br><span class=\"line\">    <span class=\"attr\">port:</span> <span class=\"string\">web</span></span><br><span class=\"line\">    <span class=\"attr\">scheme:</span> <span class=\"string\">HTTP</span></span><br><span class=\"line\">  <span class=\"attr\">periodSeconds:</span> <span class=\"number\">5</span></span><br><span class=\"line\">  <span class=\"attr\">successThreshold:</span> <span class=\"number\">1</span></span><br><span class=\"line\">  <span class=\"attr\">timeoutSeconds:</span> <span class=\"number\">3</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"替换镜像\"><a href=\"#替换镜像\" class=\"headerlink\" title=\"替换镜像\"></a>替换镜像</h4><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl <span class=\"built_in\">set</span> image deployment/provider provider=provider:latest</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"给-node-pod-打标签\"><a href=\"#给-node-pod-打标签\" class=\"headerlink\" title=\"给 node&#x2F;pod 打标签\"></a>给 node&#x2F;pod 打标签</h4><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl label nodes kube-node node=kube-node</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"通过标签过滤\"><a href=\"#通过标签过滤\" class=\"headerlink\" title=\"通过标签过滤\"></a>通过标签过滤</h4><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl get node -l <span class=\"string\">&quot;node=kube-node&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"kubectl-cp\"><a href=\"#kubectl-cp\" class=\"headerlink\" title=\"kubectl cp\"></a>kubectl cp</h4><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 拷贝pod数据到本地</span></span><br><span class=\"line\">kubectl <span class=\"built_in\">cp</span> &lt;some-namespace&gt;/&lt;some-pod&gt;:/tmp/foo /tmp/foo</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 拷贝本地数据到pod之中</span></span><br><span class=\"line\">kubectl <span class=\"built_in\">cp</span> /tmp/foo &lt;some-namespace&gt;/&lt;some-pod&gt;:/tmp/foo</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"回滚版本\"><a href=\"#回滚版本\" class=\"headerlink\" title=\"回滚版本\"></a>回滚版本</h4><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看历史版本</span></span><br><span class=\"line\">kubectl rollout <span class=\"built_in\">history</span> deployment provider</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 回滚到上一个版本</span></span><br><span class=\"line\">kubectl rollout undo deployment provider</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 回滚到指定版本</span></span><br><span class=\"line\">kubectl rollout undo deployment provider --to-revision=2</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"污点\"><a href=\"#污点\" class=\"headerlink\" title=\"污点\"></a>污点</h4><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># &lt;node-name&gt; 是要添加污点的节点的名称。</span></span><br><span class=\"line\"><span class=\"comment\"># &lt;taint-key&gt; 是污点的键。</span></span><br><span class=\"line\"><span class=\"comment\"># &lt;taint-value&gt; 是污点的值，可以留空。</span></span><br><span class=\"line\"><span class=\"comment\"># &lt;taint-effect&gt; 是污点的影响效果，可以是以下选项之一：</span></span><br><span class=\"line\"><span class=\"comment\"># NoSchedule：表示不将新的Pod调度到有这个污点的节点上。</span></span><br><span class=\"line\"><span class=\"comment\"># PreferNoSchedule：表示尽量不将新的Pod调度到有这个污点的节点上。</span></span><br><span class=\"line\"><span class=\"comment\"># NoExecute：表示不将新的Pod调度到有这个污点的节点上，并且将已经运行在节点上的Pod驱逐出节点（如果它们不匹配Pod的容忍度）。</span></span><br><span class=\"line\">kubectl taint nodes &lt;node-name&gt; &lt;taint-key&gt;=&lt;taint-value&gt;:&lt;taint-effect&gt;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"探测\"><a href=\"#探测\" class=\"headerlink\" title=\"探测\"></a>探测</h4><ul>\n<li>livenessProbe: 存活探测<ul>\n<li>failureThreshold: 表示连续失败探测的次数，认为容器已经死亡，默认为3次</li>\n<li>initialDelaySeconds: 表示在容器启动后多少秒开始进行探测，默认值为10秒。</li>\n<li>periodSeconds: 表示多长时间重试一次探测，默认值为10秒</li>\n<li>successThreshold: 表示连续成功探测的次数，认为容器仍处于健康状态，默认为1次</li>\n<li>timeoutSeconds: 表示探测请求的超时时间，默认为1秒。</li>\n</ul>\n</li>\n<li>readinessProbe: 就绪探测<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">livenessProbe:</span></span><br><span class=\"line\">  <span class=\"attr\">failureThreshold:</span> <span class=\"number\">10</span></span><br><span class=\"line\">  <span class=\"attr\">initialDelaySeconds:</span> <span class=\"number\">300</span></span><br><span class=\"line\">  <span class=\"attr\">httpGet:</span></span><br><span class=\"line\">    <span class=\"attr\">path:</span> <span class=\"string\">/-/healthy</span></span><br><span class=\"line\">    <span class=\"attr\">port:</span> <span class=\"string\">web</span></span><br><span class=\"line\">    <span class=\"attr\">scheme:</span> <span class=\"string\">HTTP</span></span><br><span class=\"line\">  <span class=\"attr\">periodSeconds:</span> <span class=\"number\">5</span></span><br><span class=\"line\">  <span class=\"attr\">successThreshold:</span> <span class=\"number\">1</span></span><br><span class=\"line\">  <span class=\"attr\">timeoutSeconds:</span> <span class=\"number\">3</span></span><br><span class=\"line\"><span class=\"attr\">readinessProbe:</span></span><br><span class=\"line\">  <span class=\"attr\">initialDelaySeconds:</span> <span class=\"number\">300</span></span><br><span class=\"line\">  <span class=\"attr\">failureThreshold:</span> <span class=\"number\">20</span></span><br><span class=\"line\">  <span class=\"attr\">httpGet:</span></span><br><span class=\"line\">    <span class=\"attr\">path:</span> <span class=\"string\">/-/ready</span></span><br><span class=\"line\">    <span class=\"attr\">port:</span> <span class=\"string\">web</span></span><br><span class=\"line\">    <span class=\"attr\">scheme:</span> <span class=\"string\">HTTP</span></span><br><span class=\"line\">  <span class=\"attr\">periodSeconds:</span> <span class=\"number\">5</span></span><br><span class=\"line\">  <span class=\"attr\">successThreshold:</span> <span class=\"number\">1</span></span><br><span class=\"line\">  <span class=\"attr\">timeoutSeconds:</span> <span class=\"number\">3</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n"},{"layout":"工具","title":"Macos 好用工具推荐","date":"2023-07-22T16:17:05.000Z","_content":"\n#### 翻译工具\n```\n沙拉查词\n```\n\n#### 截屏\n```\nsnipaste\n```\n\n#### 剪切板（复制多个）\n```\nicopy\n```\n\n#### 内存、CPU、磁盘占用\n```\niStat Menus\n```","source":"_posts/工具/Macos-好用工具推荐.md","raw":"---\nlayout: 工具\ntitle: Macos 好用工具推荐\ndate: 2023-07-23 00:17:05\ntags: 工具\n---\n\n#### 翻译工具\n```\n沙拉查词\n```\n\n#### 截屏\n```\nsnipaste\n```\n\n#### 剪切板（复制多个）\n```\nicopy\n```\n\n#### 内存、CPU、磁盘占用\n```\niStat Menus\n```","slug":"工具/Macos-好用工具推荐","published":1,"updated":"2023-07-22T16:40:33.810Z","_id":"clke8l8o0000c3w4wdk1x511z","comments":1,"photos":[],"link":"","content":"<h4 id=\"翻译工具\"><a href=\"#翻译工具\" class=\"headerlink\" title=\"翻译工具\"></a>翻译工具</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">沙拉查词</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"截屏\"><a href=\"#截屏\" class=\"headerlink\" title=\"截屏\"></a>截屏</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">snipaste</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"剪切板（复制多个）\"><a href=\"#剪切板（复制多个）\" class=\"headerlink\" title=\"剪切板（复制多个）\"></a>剪切板（复制多个）</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">icopy</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"内存、CPU、磁盘占用\"><a href=\"#内存、CPU、磁盘占用\" class=\"headerlink\" title=\"内存、CPU、磁盘占用\"></a>内存、CPU、磁盘占用</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">iStat Menus</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h4 id=\"翻译工具\"><a href=\"#翻译工具\" class=\"headerlink\" title=\"翻译工具\"></a>翻译工具</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">沙拉查词</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"截屏\"><a href=\"#截屏\" class=\"headerlink\" title=\"截屏\"></a>截屏</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">snipaste</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"剪切板（复制多个）\"><a href=\"#剪切板（复制多个）\" class=\"headerlink\" title=\"剪切板（复制多个）\"></a>剪切板（复制多个）</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">icopy</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"内存、CPU、磁盘占用\"><a href=\"#内存、CPU、磁盘占用\" class=\"headerlink\" title=\"内存、CPU、磁盘占用\"></a>内存、CPU、磁盘占用</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">iStat Menus</span><br></pre></td></tr></table></figure>"},{"layout":"tools","title":"vscode必备插件","date":"2023-07-22T16:17:38.000Z","_content":"\nvscode 插件\n\n#### markdone 预览\n```\nMarkdown Preview Enhanced\n```\n\n#### git 查看历史提交\n```\nGit History\n```\n\n#### yaml自动补全\n```\n* git: line\n* kubernetes、yaml\n```\n\n#### 自动生成图\n```\nmarkmap\n```\n\n#### 远程开发\n```\nRemote - SSH\n```\n\n#### html 预览\n```\nHTML Preview\n```\n\n#### 生成脑图\n```\nMarkMap\n```\n\n#### 粘贴图片\n```\nPasts Image\n```\n\n#### 坤坤鼓励师\n```\n坤坤鼓励师\n```","source":"_posts/工具/vscode必备插件.md","raw":"---\nlayout: tools\ntitle: vscode必备插件\ndate: 2023-07-23 00:17:38\ntags: 工具\n---\n\nvscode 插件\n\n#### markdone 预览\n```\nMarkdown Preview Enhanced\n```\n\n#### git 查看历史提交\n```\nGit History\n```\n\n#### yaml自动补全\n```\n* git: line\n* kubernetes、yaml\n```\n\n#### 自动生成图\n```\nmarkmap\n```\n\n#### 远程开发\n```\nRemote - SSH\n```\n\n#### html 预览\n```\nHTML Preview\n```\n\n#### 生成脑图\n```\nMarkMap\n```\n\n#### 粘贴图片\n```\nPasts Image\n```\n\n#### 坤坤鼓励师\n```\n坤坤鼓励师\n```","slug":"工具/vscode必备插件","published":1,"updated":"2023-07-31T10:25:47.850Z","_id":"clke8l8o1000f3w4wdhkvfdw9","comments":1,"photos":[],"link":"","content":"<p>vscode 插件</p>\n<h4 id=\"markdone-预览\"><a href=\"#markdone-预览\" class=\"headerlink\" title=\"markdone 预览\"></a>markdone 预览</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Markdown Preview Enhanced</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"git-查看历史提交\"><a href=\"#git-查看历史提交\" class=\"headerlink\" title=\"git 查看历史提交\"></a>git 查看历史提交</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Git History</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"yaml自动补全\"><a href=\"#yaml自动补全\" class=\"headerlink\" title=\"yaml自动补全\"></a>yaml自动补全</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">* git: line</span><br><span class=\"line\">* kubernetes、yaml</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"自动生成图\"><a href=\"#自动生成图\" class=\"headerlink\" title=\"自动生成图\"></a>自动生成图</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">markmap</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"远程开发\"><a href=\"#远程开发\" class=\"headerlink\" title=\"远程开发\"></a>远程开发</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Remote - SSH</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"html-预览\"><a href=\"#html-预览\" class=\"headerlink\" title=\"html 预览\"></a>html 预览</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">HTML Preview</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"生成脑图\"><a href=\"#生成脑图\" class=\"headerlink\" title=\"生成脑图\"></a>生成脑图</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MarkMap</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"粘贴图片\"><a href=\"#粘贴图片\" class=\"headerlink\" title=\"粘贴图片\"></a>粘贴图片</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Pasts Image</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"坤坤鼓励师\"><a href=\"#坤坤鼓励师\" class=\"headerlink\" title=\"坤坤鼓励师\"></a>坤坤鼓励师</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">坤坤鼓励师</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>vscode 插件</p>\n<h4 id=\"markdone-预览\"><a href=\"#markdone-预览\" class=\"headerlink\" title=\"markdone 预览\"></a>markdone 预览</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Markdown Preview Enhanced</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"git-查看历史提交\"><a href=\"#git-查看历史提交\" class=\"headerlink\" title=\"git 查看历史提交\"></a>git 查看历史提交</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Git History</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"yaml自动补全\"><a href=\"#yaml自动补全\" class=\"headerlink\" title=\"yaml自动补全\"></a>yaml自动补全</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">* git: line</span><br><span class=\"line\">* kubernetes、yaml</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"自动生成图\"><a href=\"#自动生成图\" class=\"headerlink\" title=\"自动生成图\"></a>自动生成图</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">markmap</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"远程开发\"><a href=\"#远程开发\" class=\"headerlink\" title=\"远程开发\"></a>远程开发</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Remote - SSH</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"html-预览\"><a href=\"#html-预览\" class=\"headerlink\" title=\"html 预览\"></a>html 预览</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">HTML Preview</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"生成脑图\"><a href=\"#生成脑图\" class=\"headerlink\" title=\"生成脑图\"></a>生成脑图</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MarkMap</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"粘贴图片\"><a href=\"#粘贴图片\" class=\"headerlink\" title=\"粘贴图片\"></a>粘贴图片</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Pasts Image</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"坤坤鼓励师\"><a href=\"#坤坤鼓励师\" class=\"headerlink\" title=\"坤坤鼓励师\"></a>坤坤鼓励师</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">坤坤鼓励师</span><br></pre></td></tr></table></figure>"},{"layout":"golang","title":"Golang 无法下载kubernetes包","date":"2023-07-22T16:11:45.000Z","_content":"\n如果我们直接 go get k8s.io/kubernetes@v1.19.2 下载依赖，会出现以下错误:\n\n```go\ngo get k8s.io/kubernetes@v1.19.2\ngo: downloading k8s.io/kubernetes v1.19.2\ngo: k8s.io/kubernetes@v1.19.2 requires\n        k8s.io/api@v0.0.0: reading k8s.io/api/go.mod at revision v0.0.0:\n```\n\n错误的原因是在kubernetes主仓中，也使用了公共库，不过go.mod文件中所有公共库版本都指定为了v0.0.0（显然这个版本不存在）， 然后通过Go Module的replace机制，将版本替换为子目录./staging/src/k8s.io对应的依赖。\n\n保存内容为 go-get-kubernetes.sh, 执行 ./go-get-kubernetes.sh v1.19.2，会自动在go.mod中替换。\n```sh\n#!/bin/sh\nset -euo pipefail\n\nVERSION=${1#\"v\"}\nif [ -z \"$VERSION\" ]; then\n    echo \"Must specify version!\"\n    exit 1\nfi\nMODS=($(\n    curl -sS https://raw.githubusercontent.com/kubernetes/kubernetes/v${VERSION}/go.mod |\n    sed -n 's|.*k8s.io/\\(.*\\) => ./staging/src/k8s.io/.*|k8s.io/\\1|p'\n))\nfor MOD in \"${MODS[@]}\"; do\n\n    V=$(\n        go mod download -json \"${MOD}@kubernetes-${VERSION}\" |\n        sed -n 's|.*\"Version\": \"\\(.*\\)\".*|\\1|p'\n    )\n    go mod edit \"-replace=${MOD}=${MOD}@${V}\"\ndone\ngo get \"k8s.io/kubernetes@v${VERSION}\"\n```\n\n","source":"_posts/golang/无法下载kubernetes包.md","raw":"---\nlayout: golang\ntitle: Golang 无法下载kubernetes包\ndate: 2023-07-23 00:11:45\ntags: golang\n---\n\n如果我们直接 go get k8s.io/kubernetes@v1.19.2 下载依赖，会出现以下错误:\n\n```go\ngo get k8s.io/kubernetes@v1.19.2\ngo: downloading k8s.io/kubernetes v1.19.2\ngo: k8s.io/kubernetes@v1.19.2 requires\n        k8s.io/api@v0.0.0: reading k8s.io/api/go.mod at revision v0.0.0:\n```\n\n错误的原因是在kubernetes主仓中，也使用了公共库，不过go.mod文件中所有公共库版本都指定为了v0.0.0（显然这个版本不存在）， 然后通过Go Module的replace机制，将版本替换为子目录./staging/src/k8s.io对应的依赖。\n\n保存内容为 go-get-kubernetes.sh, 执行 ./go-get-kubernetes.sh v1.19.2，会自动在go.mod中替换。\n```sh\n#!/bin/sh\nset -euo pipefail\n\nVERSION=${1#\"v\"}\nif [ -z \"$VERSION\" ]; then\n    echo \"Must specify version!\"\n    exit 1\nfi\nMODS=($(\n    curl -sS https://raw.githubusercontent.com/kubernetes/kubernetes/v${VERSION}/go.mod |\n    sed -n 's|.*k8s.io/\\(.*\\) => ./staging/src/k8s.io/.*|k8s.io/\\1|p'\n))\nfor MOD in \"${MODS[@]}\"; do\n\n    V=$(\n        go mod download -json \"${MOD}@kubernetes-${VERSION}\" |\n        sed -n 's|.*\"Version\": \"\\(.*\\)\".*|\\1|p'\n    )\n    go mod edit \"-replace=${MOD}=${MOD}@${V}\"\ndone\ngo get \"k8s.io/kubernetes@v${VERSION}\"\n```\n\n","slug":"golang/无法下载kubernetes包","published":1,"updated":"2023-07-22T16:28:33.190Z","_id":"clke8lpvj000h3w4w3l9oegjr","comments":1,"photos":[],"link":"","content":"<p>如果我们直接 go get k8s.io&#x2F;<a href=\"mailto:&#107;&#117;&#x62;&#101;&#114;&#x6e;&#101;&#116;&#101;&#x73;&#64;&#118;&#x31;&#x2e;&#49;&#57;&#x2e;&#50;\">&#107;&#117;&#x62;&#101;&#114;&#x6e;&#101;&#116;&#101;&#x73;&#64;&#118;&#x31;&#x2e;&#49;&#57;&#x2e;&#50;</a> 下载依赖，会出现以下错误:</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">go</span> get k8s.io/kubernetes@v1<span class=\"number\">.19</span><span class=\"number\">.2</span></span><br><span class=\"line\"><span class=\"keyword\">go</span>: downloading k8s.io/kubernetes v1<span class=\"number\">.19</span><span class=\"number\">.2</span></span><br><span class=\"line\"><span class=\"keyword\">go</span>: k8s.io/kubernetes@v1<span class=\"number\">.19</span><span class=\"number\">.2</span> requires</span><br><span class=\"line\">        k8s.io/api@v0<span class=\"number\">.0</span><span class=\"number\">.0</span>: reading k8s.io/api/<span class=\"keyword\">go</span>.mod at revision v0<span class=\"number\">.0</span><span class=\"number\">.0</span>:</span><br></pre></td></tr></table></figure>\n\n<p>错误的原因是在kubernetes主仓中，也使用了公共库，不过go.mod文件中所有公共库版本都指定为了v0.0.0（显然这个版本不存在）， 然后通过Go Module的replace机制，将版本替换为子目录.&#x2F;staging&#x2F;src&#x2F;k8s.io对应的依赖。</p>\n<p>保存内容为 go-get-kubernetes.sh, 执行 .&#x2F;go-get-kubernetes.sh v1.19.2，会自动在go.mod中替换。</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/sh</span></span><br><span class=\"line\"><span class=\"built_in\">set</span> -euo pipefail</span><br><span class=\"line\"></span><br><span class=\"line\">VERSION=<span class=\"variable\">$&#123;1#&quot;v&quot;&#125;</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ -z <span class=\"string\">&quot;<span class=\"variable\">$VERSION</span>&quot;</span> ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">&quot;Must specify version!&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">exit</span> 1</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\">MODS=($(</span><br><span class=\"line\">    curl -sS https://raw.githubusercontent.com/kubernetes/kubernetes/v<span class=\"variable\">$&#123;VERSION&#125;</span>/go.mod |</span><br><span class=\"line\">    sed -n <span class=\"string\">&#x27;s|.*k8s.io/\\(.*\\) =&gt; ./staging/src/k8s.io/.*|k8s.io/\\1|p&#x27;</span></span><br><span class=\"line\">))</span><br><span class=\"line\"><span class=\"keyword\">for</span> MOD <span class=\"keyword\">in</span> <span class=\"string\">&quot;<span class=\"variable\">$&#123;MODS[@]&#125;</span>&quot;</span>; <span class=\"keyword\">do</span></span><br><span class=\"line\"></span><br><span class=\"line\">    V=$(</span><br><span class=\"line\">        go mod download -json <span class=\"string\">&quot;<span class=\"variable\">$&#123;MOD&#125;</span>@kubernetes-<span class=\"variable\">$&#123;VERSION&#125;</span>&quot;</span> |</span><br><span class=\"line\">        sed -n <span class=\"string\">&#x27;s|.*&quot;Version&quot;: &quot;\\(.*\\)&quot;.*|\\1|p&#x27;</span></span><br><span class=\"line\">    )</span><br><span class=\"line\">    go mod edit <span class=\"string\">&quot;-replace=<span class=\"variable\">$&#123;MOD&#125;</span>=<span class=\"variable\">$&#123;MOD&#125;</span>@<span class=\"variable\">$&#123;V&#125;</span>&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\">go get <span class=\"string\">&quot;k8s.io/kubernetes@v<span class=\"variable\">$&#123;VERSION&#125;</span>&quot;</span></span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<p>如果我们直接 go get k8s.io&#x2F;<a href=\"mailto:&#107;&#117;&#x62;&#101;&#114;&#x6e;&#101;&#116;&#101;&#x73;&#64;&#118;&#x31;&#x2e;&#49;&#57;&#x2e;&#50;\">&#107;&#117;&#x62;&#101;&#114;&#x6e;&#101;&#116;&#101;&#x73;&#64;&#118;&#x31;&#x2e;&#49;&#57;&#x2e;&#50;</a> 下载依赖，会出现以下错误:</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">go</span> get k8s.io/kubernetes@v1<span class=\"number\">.19</span><span class=\"number\">.2</span></span><br><span class=\"line\"><span class=\"keyword\">go</span>: downloading k8s.io/kubernetes v1<span class=\"number\">.19</span><span class=\"number\">.2</span></span><br><span class=\"line\"><span class=\"keyword\">go</span>: k8s.io/kubernetes@v1<span class=\"number\">.19</span><span class=\"number\">.2</span> requires</span><br><span class=\"line\">        k8s.io/api@v0<span class=\"number\">.0</span><span class=\"number\">.0</span>: reading k8s.io/api/<span class=\"keyword\">go</span>.mod at revision v0<span class=\"number\">.0</span><span class=\"number\">.0</span>:</span><br></pre></td></tr></table></figure>\n\n<p>错误的原因是在kubernetes主仓中，也使用了公共库，不过go.mod文件中所有公共库版本都指定为了v0.0.0（显然这个版本不存在）， 然后通过Go Module的replace机制，将版本替换为子目录.&#x2F;staging&#x2F;src&#x2F;k8s.io对应的依赖。</p>\n<p>保存内容为 go-get-kubernetes.sh, 执行 .&#x2F;go-get-kubernetes.sh v1.19.2，会自动在go.mod中替换。</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/sh</span></span><br><span class=\"line\"><span class=\"built_in\">set</span> -euo pipefail</span><br><span class=\"line\"></span><br><span class=\"line\">VERSION=<span class=\"variable\">$&#123;1#&quot;v&quot;&#125;</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ -z <span class=\"string\">&quot;<span class=\"variable\">$VERSION</span>&quot;</span> ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">&quot;Must specify version!&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">exit</span> 1</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\">MODS=($(</span><br><span class=\"line\">    curl -sS https://raw.githubusercontent.com/kubernetes/kubernetes/v<span class=\"variable\">$&#123;VERSION&#125;</span>/go.mod |</span><br><span class=\"line\">    sed -n <span class=\"string\">&#x27;s|.*k8s.io/\\(.*\\) =&gt; ./staging/src/k8s.io/.*|k8s.io/\\1|p&#x27;</span></span><br><span class=\"line\">))</span><br><span class=\"line\"><span class=\"keyword\">for</span> MOD <span class=\"keyword\">in</span> <span class=\"string\">&quot;<span class=\"variable\">$&#123;MODS[@]&#125;</span>&quot;</span>; <span class=\"keyword\">do</span></span><br><span class=\"line\"></span><br><span class=\"line\">    V=$(</span><br><span class=\"line\">        go mod download -json <span class=\"string\">&quot;<span class=\"variable\">$&#123;MOD&#125;</span>@kubernetes-<span class=\"variable\">$&#123;VERSION&#125;</span>&quot;</span> |</span><br><span class=\"line\">        sed -n <span class=\"string\">&#x27;s|.*&quot;Version&quot;: &quot;\\(.*\\)&quot;.*|\\1|p&#x27;</span></span><br><span class=\"line\">    )</span><br><span class=\"line\">    go mod edit <span class=\"string\">&quot;-replace=<span class=\"variable\">$&#123;MOD&#125;</span>=<span class=\"variable\">$&#123;MOD&#125;</span>@<span class=\"variable\">$&#123;V&#125;</span>&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\">go get <span class=\"string\">&quot;k8s.io/kubernetes@v<span class=\"variable\">$&#123;VERSION&#125;</span>&quot;</span></span><br></pre></td></tr></table></figure>\n\n"},{"layout":"工具","title":"chrome浏览器如何屏蔽无效请求","date":"2023-07-22T16:19:00.000Z","_content":"\n#### 如何屏蔽掉无用的网络请求\n```\n-/.*.js|.*.php|.*.png|.*.ico|.*.css|.*.gif/\n```","source":"_posts/工具/chrome浏览器如何屏蔽无效请求.md","raw":"---\nlayout: 工具\ntitle: chrome浏览器如何屏蔽无效请求\ndate: 2023-07-23 00:19:00\ntags: 工具\n---\n\n#### 如何屏蔽掉无用的网络请求\n```\n-/.*.js|.*.php|.*.png|.*.ico|.*.css|.*.gif/\n```","slug":"工具/chrome浏览器如何屏蔽无效请求","published":1,"updated":"2023-07-22T16:41:52.841Z","_id":"clke8luk3000j3w4wb0xq3j2e","comments":1,"photos":[],"link":"","content":"<h4 id=\"如何屏蔽掉无用的网络请求\"><a href=\"#如何屏蔽掉无用的网络请求\" class=\"headerlink\" title=\"如何屏蔽掉无用的网络请求\"></a>如何屏蔽掉无用的网络请求</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-/.*.js|.*.php|.*.png|.*.ico|.*.css|.*.gif/</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h4 id=\"如何屏蔽掉无用的网络请求\"><a href=\"#如何屏蔽掉无用的网络请求\" class=\"headerlink\" title=\"如何屏蔽掉无用的网络请求\"></a>如何屏蔽掉无用的网络请求</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-/.*.js|.*.php|.*.png|.*.ico|.*.css|.*.gif/</span><br></pre></td></tr></table></figure>"},{"layout":"golang","title":"gin跨域问题","date":"2023-07-22T16:14:35.000Z","_content":"\n#### 解决跨域问题\n```go\nr := gin.Default()\nr.Use(Cors())\n\nfunc Cors() gin.HandlerFunc {\n\treturn func(c *gin.Context) {\n\t\tmethod := c.Request.Method\n\t\torigin := c.Request.Header.Get(\"Origin\")\n\t\tif origin != \"\" {\n\t\t\tc.Header(\"Access-Control-Allow-Origin\", \"*\") // 可将将 * 替换为指定的域名\n\t\t\tc.Header(\"Access-Control-Allow-Methods\", \"POST, GET, OPTIONS, PUT, DELETE, UPDATE\")\n\t\t\tc.Header(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept, Authorization\")\n\t\t\tc.Header(\"Access-Control-Expose-Headers\", \"Content-Length, Access-Control-Allow-Origin, Access-Control-Allow-Headers, Cache-Control, Content-Language, Content-Type\")\n\t\t\tc.Header(\"Access-Control-Allow-Credentials\", \"true\")\n\t\t}\n\t\tif method == \"OPTIONS\" {\n\t\t\tc.AbortWithStatus(http.StatusNoContent)\n\t\t}\n\t\tc.Next()\n\t}\n}\n```","source":"_posts/docker/gin跨域问题.md","raw":"---\nlayout: golang\ntitle: gin跨域问题\ndate: 2023-07-23 00:14:35\ntags: golang\n---\n\n#### 解决跨域问题\n```go\nr := gin.Default()\nr.Use(Cors())\n\nfunc Cors() gin.HandlerFunc {\n\treturn func(c *gin.Context) {\n\t\tmethod := c.Request.Method\n\t\torigin := c.Request.Header.Get(\"Origin\")\n\t\tif origin != \"\" {\n\t\t\tc.Header(\"Access-Control-Allow-Origin\", \"*\") // 可将将 * 替换为指定的域名\n\t\t\tc.Header(\"Access-Control-Allow-Methods\", \"POST, GET, OPTIONS, PUT, DELETE, UPDATE\")\n\t\t\tc.Header(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept, Authorization\")\n\t\t\tc.Header(\"Access-Control-Expose-Headers\", \"Content-Length, Access-Control-Allow-Origin, Access-Control-Allow-Headers, Cache-Control, Content-Language, Content-Type\")\n\t\t\tc.Header(\"Access-Control-Allow-Credentials\", \"true\")\n\t\t}\n\t\tif method == \"OPTIONS\" {\n\t\t\tc.AbortWithStatus(http.StatusNoContent)\n\t\t}\n\t\tc.Next()\n\t}\n}\n```","slug":"docker/gin跨域问题","published":1,"updated":"2023-07-22T16:43:16.066Z","_id":"clke8m1vq000l3w4w1dxifn0l","comments":1,"photos":[],"link":"","content":"<h4 id=\"解决跨域问题\"><a href=\"#解决跨域问题\" class=\"headerlink\" title=\"解决跨域问题\"></a>解决跨域问题</h4><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">r := gin.Default()</span><br><span class=\"line\">r.Use(Cors())</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">Cors</span><span class=\"params\">()</span></span> gin.HandlerFunc &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">func</span><span class=\"params\">(c *gin.Context)</span></span> &#123;</span><br><span class=\"line\">\t\tmethod := c.Request.Method</span><br><span class=\"line\">\t\torigin := c.Request.Header.Get(<span class=\"string\">&quot;Origin&quot;</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> origin != <span class=\"string\">&quot;&quot;</span> &#123;</span><br><span class=\"line\">\t\t\tc.Header(<span class=\"string\">&quot;Access-Control-Allow-Origin&quot;</span>, <span class=\"string\">&quot;*&quot;</span>) <span class=\"comment\">// 可将将 * 替换为指定的域名</span></span><br><span class=\"line\">\t\t\tc.Header(<span class=\"string\">&quot;Access-Control-Allow-Methods&quot;</span>, <span class=\"string\">&quot;POST, GET, OPTIONS, PUT, DELETE, UPDATE&quot;</span>)</span><br><span class=\"line\">\t\t\tc.Header(<span class=\"string\">&quot;Access-Control-Allow-Headers&quot;</span>, <span class=\"string\">&quot;Origin, X-Requested-With, Content-Type, Accept, Authorization&quot;</span>)</span><br><span class=\"line\">\t\t\tc.Header(<span class=\"string\">&quot;Access-Control-Expose-Headers&quot;</span>, <span class=\"string\">&quot;Content-Length, Access-Control-Allow-Origin, Access-Control-Allow-Headers, Cache-Control, Content-Language, Content-Type&quot;</span>)</span><br><span class=\"line\">\t\t\tc.Header(<span class=\"string\">&quot;Access-Control-Allow-Credentials&quot;</span>, <span class=\"string\">&quot;true&quot;</span>)</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> method == <span class=\"string\">&quot;OPTIONS&quot;</span> &#123;</span><br><span class=\"line\">\t\t\tc.AbortWithStatus(http.StatusNoContent)</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tc.Next()</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h4 id=\"解决跨域问题\"><a href=\"#解决跨域问题\" class=\"headerlink\" title=\"解决跨域问题\"></a>解决跨域问题</h4><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">r := gin.Default()</span><br><span class=\"line\">r.Use(Cors())</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">Cors</span><span class=\"params\">()</span></span> gin.HandlerFunc &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">func</span><span class=\"params\">(c *gin.Context)</span></span> &#123;</span><br><span class=\"line\">\t\tmethod := c.Request.Method</span><br><span class=\"line\">\t\torigin := c.Request.Header.Get(<span class=\"string\">&quot;Origin&quot;</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> origin != <span class=\"string\">&quot;&quot;</span> &#123;</span><br><span class=\"line\">\t\t\tc.Header(<span class=\"string\">&quot;Access-Control-Allow-Origin&quot;</span>, <span class=\"string\">&quot;*&quot;</span>) <span class=\"comment\">// 可将将 * 替换为指定的域名</span></span><br><span class=\"line\">\t\t\tc.Header(<span class=\"string\">&quot;Access-Control-Allow-Methods&quot;</span>, <span class=\"string\">&quot;POST, GET, OPTIONS, PUT, DELETE, UPDATE&quot;</span>)</span><br><span class=\"line\">\t\t\tc.Header(<span class=\"string\">&quot;Access-Control-Allow-Headers&quot;</span>, <span class=\"string\">&quot;Origin, X-Requested-With, Content-Type, Accept, Authorization&quot;</span>)</span><br><span class=\"line\">\t\t\tc.Header(<span class=\"string\">&quot;Access-Control-Expose-Headers&quot;</span>, <span class=\"string\">&quot;Content-Length, Access-Control-Allow-Origin, Access-Control-Allow-Headers, Cache-Control, Content-Language, Content-Type&quot;</span>)</span><br><span class=\"line\">\t\t\tc.Header(<span class=\"string\">&quot;Access-Control-Allow-Credentials&quot;</span>, <span class=\"string\">&quot;true&quot;</span>)</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> method == <span class=\"string\">&quot;OPTIONS&quot;</span> &#123;</span><br><span class=\"line\">\t\t\tc.AbortWithStatus(http.StatusNoContent)</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tc.Next()</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"layout":"linux","title":"Makefile模版","date":"2023-07-22T16:15:50.000Z","_content":"\n```makefile\n.PHONY: git_push docker_build all help\n\n# 获取 git 项目 COMMIT_HASH\nCOMMIT_HASH = $(shell git rev-parse --short=7 HEAD)\n\ngit_push: ## 上传代码到 Github\n\tgit add .\n\tgit commit -m \"`date '+%Y/%m/%d %H:%M:%S'`\"\n\tgit push origin dev\n\nhelp: ## 查看帮助\n\t@awk 'BEGIN {FS = \":.*?## \"} /^[a-zA-Z_-]+:.*?## / {sub(\"\\\\\\\\n\",sprintf(\"\\n%22c\",\" \"), $$2);printf \" \\033[36m%-20s\\033[0m  %s\\n\", $$1, $$2}' $(MAKEFILE_LIST)\n```\n\n#### 指定参数\n\n```makefile\ncommit: \n\tgit commit -m \"$(msg)\"\n```\n\n使用如下\n\n```\nmake commit msg=\"makefile 测试\"              \n```","source":"_posts/linux/Makefile模版.md","raw":"---\nlayout: linux\ntitle: Makefile模版\ndate: 2023-07-23 00:15:50\ntags: linux\n---\n\n```makefile\n.PHONY: git_push docker_build all help\n\n# 获取 git 项目 COMMIT_HASH\nCOMMIT_HASH = $(shell git rev-parse --short=7 HEAD)\n\ngit_push: ## 上传代码到 Github\n\tgit add .\n\tgit commit -m \"`date '+%Y/%m/%d %H:%M:%S'`\"\n\tgit push origin dev\n\nhelp: ## 查看帮助\n\t@awk 'BEGIN {FS = \":.*?## \"} /^[a-zA-Z_-]+:.*?## / {sub(\"\\\\\\\\n\",sprintf(\"\\n%22c\",\" \"), $$2);printf \" \\033[36m%-20s\\033[0m  %s\\n\", $$1, $$2}' $(MAKEFILE_LIST)\n```\n\n#### 指定参数\n\n```makefile\ncommit: \n\tgit commit -m \"$(msg)\"\n```\n\n使用如下\n\n```\nmake commit msg=\"makefile 测试\"              \n```","slug":"linux/Makefile模版","published":1,"updated":"2023-07-25T09:16:04.489Z","_id":"clke8mugw000m3w4wcn6s8ouz","comments":1,"photos":[],"link":"","content":"<figure class=\"highlight makefile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\"><span class=\"keyword\">.PHONY</span>: git_push docker_build all help</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取 git 项目 COMMIT_HASH</span></span><br><span class=\"line\">COMMIT_HASH = <span class=\"variable\">$(<span class=\"built_in\">shell</span> git rev-parse --short=7 HEAD)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">git_push: ## 上传代码到 Github</span></span><br><span class=\"line\">\tgit add .</span><br><span class=\"line\">\tgit commit -m <span class=\"string\">&quot;`date &#x27;+%Y/%m/%d %H:%M:%S&#x27;`&quot;</span></span><br><span class=\"line\">\tgit push origin dev</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">help: ## 查看帮助</span></span><br><span class=\"line\">\t@awk &#x27;BEGIN &#123;FS = <span class=\"string\">&quot;:.*?## &quot;</span>&#125; /^[a-zA-Z_-]+:.*?<span class=\"comment\">## / &#123;sub(&quot;\\\\\\\\n&quot;,sprintf(&quot;\\n%22c&quot;,&quot; &quot;), $$2);printf &quot; \\033[36m%-20s\\033[0m  %s\\n&quot;, $$1, $$2&#125;&#x27; $(MAKEFILE_LIST)</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"指定参数\"><a href=\"#指定参数\" class=\"headerlink\" title=\"指定参数\"></a>指定参数</h4><figure class=\"highlight makefile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">commit: </span></span><br><span class=\"line\">\tgit commit -m <span class=\"string\">&quot;<span class=\"variable\">$(msg)</span>&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>使用如下</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">make commit msg=&quot;makefile 测试&quot;              </span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight makefile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\"><span class=\"keyword\">.PHONY</span>: git_push docker_build all help</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取 git 项目 COMMIT_HASH</span></span><br><span class=\"line\">COMMIT_HASH = <span class=\"variable\">$(<span class=\"built_in\">shell</span> git rev-parse --short=7 HEAD)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">git_push: ## 上传代码到 Github</span></span><br><span class=\"line\">\tgit add .</span><br><span class=\"line\">\tgit commit -m <span class=\"string\">&quot;`date &#x27;+%Y/%m/%d %H:%M:%S&#x27;`&quot;</span></span><br><span class=\"line\">\tgit push origin dev</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">help: ## 查看帮助</span></span><br><span class=\"line\">\t@awk &#x27;BEGIN &#123;FS = <span class=\"string\">&quot;:.*?## &quot;</span>&#125; /^[a-zA-Z_-]+:.*?<span class=\"comment\">## / &#123;sub(&quot;\\\\\\\\n&quot;,sprintf(&quot;\\n%22c&quot;,&quot; &quot;), $$2);printf &quot; \\033[36m%-20s\\033[0m  %s\\n&quot;, $$1, $$2&#125;&#x27; $(MAKEFILE_LIST)</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"指定参数\"><a href=\"#指定参数\" class=\"headerlink\" title=\"指定参数\"></a>指定参数</h4><figure class=\"highlight makefile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">commit: </span></span><br><span class=\"line\">\tgit commit -m <span class=\"string\">&quot;<span class=\"variable\">$(msg)</span>&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>使用如下</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">make commit msg=&quot;makefile 测试&quot;              </span><br></pre></td></tr></table></figure>"},{"layout":"linux","title":"网络","date":"2023-07-23T07:06:00.000Z","_content":"\n#### 查看网络连接信息\n```\nnetstat -nplt\n```\n-n 将字母转化为数字\n\n-p 显示进程相关信息\n\n-l 列出状态为监听\n\n-t 只查看tcp协议\n\n-a 查看全部协议(netstat -an)\n\n#### 路由追踪\n```\ntraceroute 8.8.8.8\n```\n\n#### 查看路由表\n```\nip rule\nip -6 rule \nip rule list\n```\n#### 查看默认路由表信息\n```\nip r\nip -6 r\nroute\n```","source":"_posts/linux/网络.md","raw":"---\nlayout: linux\ntitle: 网络\ndate: 2023-07-23 15:06:00\ntags: linux\n---\n\n#### 查看网络连接信息\n```\nnetstat -nplt\n```\n-n 将字母转化为数字\n\n-p 显示进程相关信息\n\n-l 列出状态为监听\n\n-t 只查看tcp协议\n\n-a 查看全部协议(netstat -an)\n\n#### 路由追踪\n```\ntraceroute 8.8.8.8\n```\n\n#### 查看路由表\n```\nip rule\nip -6 rule \nip rule list\n```\n#### 查看默认路由表信息\n```\nip r\nip -6 r\nroute\n```","slug":"linux/网络","published":1,"updated":"2023-07-23T07:06:53.912Z","comments":1,"photos":[],"link":"","_id":"clkfkkqf50001614w2ihd8upa","content":"<h4 id=\"查看网络连接信息\"><a href=\"#查看网络连接信息\" class=\"headerlink\" title=\"查看网络连接信息\"></a>查看网络连接信息</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">netstat -nplt</span><br></pre></td></tr></table></figure>\n<p>-n 将字母转化为数字</p>\n<p>-p 显示进程相关信息</p>\n<p>-l 列出状态为监听</p>\n<p>-t 只查看tcp协议</p>\n<p>-a 查看全部协议(netstat -an)</p>\n<h4 id=\"路由追踪\"><a href=\"#路由追踪\" class=\"headerlink\" title=\"路由追踪\"></a>路由追踪</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">traceroute 8.8.8.8</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"查看路由表\"><a href=\"#查看路由表\" class=\"headerlink\" title=\"查看路由表\"></a>查看路由表</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ip rule</span><br><span class=\"line\">ip -6 rule </span><br><span class=\"line\">ip rule list</span><br></pre></td></tr></table></figure>\n<h4 id=\"查看默认路由表信息\"><a href=\"#查看默认路由表信息\" class=\"headerlink\" title=\"查看默认路由表信息\"></a>查看默认路由表信息</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ip r</span><br><span class=\"line\">ip -6 r</span><br><span class=\"line\">route</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h4 id=\"查看网络连接信息\"><a href=\"#查看网络连接信息\" class=\"headerlink\" title=\"查看网络连接信息\"></a>查看网络连接信息</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">netstat -nplt</span><br></pre></td></tr></table></figure>\n<p>-n 将字母转化为数字</p>\n<p>-p 显示进程相关信息</p>\n<p>-l 列出状态为监听</p>\n<p>-t 只查看tcp协议</p>\n<p>-a 查看全部协议(netstat -an)</p>\n<h4 id=\"路由追踪\"><a href=\"#路由追踪\" class=\"headerlink\" title=\"路由追踪\"></a>路由追踪</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">traceroute 8.8.8.8</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"查看路由表\"><a href=\"#查看路由表\" class=\"headerlink\" title=\"查看路由表\"></a>查看路由表</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ip rule</span><br><span class=\"line\">ip -6 rule </span><br><span class=\"line\">ip rule list</span><br></pre></td></tr></table></figure>\n<h4 id=\"查看默认路由表信息\"><a href=\"#查看默认路由表信息\" class=\"headerlink\" title=\"查看默认路由表信息\"></a>查看默认路由表信息</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ip r</span><br><span class=\"line\">ip -6 r</span><br><span class=\"line\">route</span><br></pre></td></tr></table></figure>"},{"layout":"golang","title":"如何分配IP","date":"2023-07-24T10:33:58.000Z","_content":"\n\n#### 介绍\n\n当我们有一段或者多段IP时，如何从IP池中分配出一个IP？\n\n\n#### 创建配置文件\n\n```sh\ncat <<EOF > ipam.json\n{\n  \"ranges\": [\n    {\n      \"start\": \"10.172.16.2\",\n      \"end\": \"10.172.16.3\"\n    },\n    {\n      \"start\": \"10.172.17.2\",\n      \"end\": \"10.172.17.3\"\n    }\n  ]\n}\nEOF\n```\n\n#### 代码实现\n\n[ipam](https://github.com/oldwang12/ipam)\n","source":"_posts/golang/如何分配IP.md","raw":"---\nlayout: golang\ntitle: 如何分配IP\ndate: 2023-07-24 18:33:58\ntags: golang\n---\n\n\n#### 介绍\n\n当我们有一段或者多段IP时，如何从IP池中分配出一个IP？\n\n\n#### 创建配置文件\n\n```sh\ncat <<EOF > ipam.json\n{\n  \"ranges\": [\n    {\n      \"start\": \"10.172.16.2\",\n      \"end\": \"10.172.16.3\"\n    },\n    {\n      \"start\": \"10.172.17.2\",\n      \"end\": \"10.172.17.3\"\n    }\n  ]\n}\nEOF\n```\n\n#### 代码实现\n\n[ipam](https://github.com/oldwang12/ipam)\n","slug":"golang/如何分配IP","published":1,"updated":"2023-07-24T10:39:31.221Z","comments":1,"photos":[],"link":"","_id":"clkgr6kqj0000ga4w8w9sggqw","content":"<h4 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h4><p>当我们有一段或者多段IP时，如何从IP池中分配出一个IP？</p>\n<h4 id=\"创建配置文件\"><a href=\"#创建配置文件\" class=\"headerlink\" title=\"创建配置文件\"></a>创建配置文件</h4><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cat</span> &lt;&lt;<span class=\"string\">EOF &gt; ipam.json</span></span><br><span class=\"line\"><span class=\"string\">&#123;</span></span><br><span class=\"line\"><span class=\"string\">  &quot;ranges&quot;: [</span></span><br><span class=\"line\"><span class=\"string\">    &#123;</span></span><br><span class=\"line\"><span class=\"string\">      &quot;start&quot;: &quot;10.172.16.2&quot;,</span></span><br><span class=\"line\"><span class=\"string\">      &quot;end&quot;: &quot;10.172.16.3&quot;</span></span><br><span class=\"line\"><span class=\"string\">    &#125;,</span></span><br><span class=\"line\"><span class=\"string\">    &#123;</span></span><br><span class=\"line\"><span class=\"string\">      &quot;start&quot;: &quot;10.172.17.2&quot;,</span></span><br><span class=\"line\"><span class=\"string\">      &quot;end&quot;: &quot;10.172.17.3&quot;</span></span><br><span class=\"line\"><span class=\"string\">    &#125;</span></span><br><span class=\"line\"><span class=\"string\">  ]</span></span><br><span class=\"line\"><span class=\"string\">&#125;</span></span><br><span class=\"line\"><span class=\"string\">EOF</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"代码实现\"><a href=\"#代码实现\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h4><p><a href=\"https://github.com/oldwang12/ipam\">ipam</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h4><p>当我们有一段或者多段IP时，如何从IP池中分配出一个IP？</p>\n<h4 id=\"创建配置文件\"><a href=\"#创建配置文件\" class=\"headerlink\" title=\"创建配置文件\"></a>创建配置文件</h4><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cat</span> &lt;&lt;<span class=\"string\">EOF &gt; ipam.json</span></span><br><span class=\"line\"><span class=\"string\">&#123;</span></span><br><span class=\"line\"><span class=\"string\">  &quot;ranges&quot;: [</span></span><br><span class=\"line\"><span class=\"string\">    &#123;</span></span><br><span class=\"line\"><span class=\"string\">      &quot;start&quot;: &quot;10.172.16.2&quot;,</span></span><br><span class=\"line\"><span class=\"string\">      &quot;end&quot;: &quot;10.172.16.3&quot;</span></span><br><span class=\"line\"><span class=\"string\">    &#125;,</span></span><br><span class=\"line\"><span class=\"string\">    &#123;</span></span><br><span class=\"line\"><span class=\"string\">      &quot;start&quot;: &quot;10.172.17.2&quot;,</span></span><br><span class=\"line\"><span class=\"string\">      &quot;end&quot;: &quot;10.172.17.3&quot;</span></span><br><span class=\"line\"><span class=\"string\">    &#125;</span></span><br><span class=\"line\"><span class=\"string\">  ]</span></span><br><span class=\"line\"><span class=\"string\">&#125;</span></span><br><span class=\"line\"><span class=\"string\">EOF</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"代码实现\"><a href=\"#代码实现\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h4><p><a href=\"https://github.com/oldwang12/ipam\">ipam</a></p>\n"},{"layout":"k8s","title":"使用client-go操作自定义CRD","date":"2023-07-25T09:18:17.000Z","_content":"\n#### 介绍\n\n简洁、高效、无需定义 CR 相关结构体，实现了四种方法： Get、List、Update、Delete 来操作 CR。\n\n个人觉得这只适合对 CR 字段更改不是很多的环境，如果参数过多可能会有些繁琐。\n\n#### 代码实现\n\n```go\npackage main\n\nimport (\n\t\"context\"\n\t\"fmt\"\n\t\"path/filepath\"\n\n\tmetav1 \"k8s.io/apimachinery/pkg/apis/meta/v1\"\n\t\"k8s.io/apimachinery/pkg/apis/meta/v1/unstructured\"\n\t\"k8s.io/apimachinery/pkg/runtime/schema\"\n\t\"k8s.io/client-go/dynamic\"\n\t\"k8s.io/client-go/tools/clientcmd\"\n\t\"k8s.io/client-go/util/homedir\"\n)\n\ntype KubernetesCrdExec interface {\n\tGet(dynamicClient dynamic.Interface, resource schema.GroupVersionResource, namespace, name string) (*unstructured.Unstructured, error)\n\tList(dynamicClient dynamic.Interface, resource schema.GroupVersionResource, namespace string) (*unstructured.UnstructuredList, error)\n\tUpdate(dynamicClient dynamic.Interface, resource schema.GroupVersionResource, result *unstructured.Unstructured, namespace, name string) (*unstructured.Unstructured, error)\n\tDelete(dynamicClient dynamic.Interface, resource schema.GroupVersionResource, namespace, name string) error\n}\n\ntype Alertmanager struct{}\n\nfunc main() {\n\tresource := schema.GroupVersionResource{\n\t\tGroup:    \"monitoring.coreos.com\",\n\t\tVersion:  \"v1\",\n\t\tResource: \"alertmanagers\", // 这里必须是复数形式\n\t}\n\n\tnamespace := \"default\"\n\tname := \"my-alertmanager\"\n\n\tdynamicClient, err := getClient()\n\tif err != nil {\n\t\tpanic(err.Error())\n\t}\n\n\tvar crd KubernetesCrdExec\n\tcrd = Alertmanager{}\n\n\tresult, err := crd.Get(dynamicClient, resource, namespace, name)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\n\tfmt.Println(result.Object[\"spec\"].(map[string]interface{})[\"externalUrl\"])\n\n\tresultLists, err := crd.List(dynamicClient, resource, namespace)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\n\tfor _, item := range resultLists.Items {\n\t\tname := item.Object[\"metadata\"].(map[string]interface{})[\"name\"]\n\t\tnamespace := item.Object[\"metadata\"].(map[string]interface{})[\"namespace\"]\n\t\tfmt.Printf(\"%v/%v\\n\", namespace, name)\n\t}\n\n\t// 在这里对 Object 进行修改，更新字段值。这里相当于更新了 spec.externalUrl = http://127.0.0.1:9093\n\tresult.Object[\"spec\"].(map[string]interface{})[\"externalUrl\"] = \"http://127.0.0.1:9093\"\n\tresult, err = crd.Update(dynamicClient, resource, result, namespace, name)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\n\terr = crd.Delete(dynamicClient, resource, namespace, name)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n}\n\nfunc (Alertmanager) Get(dynamicClient dynamic.Interface, resource schema.GroupVersionResource, namespace, name string) (*unstructured.Unstructured, error) {\n\treturn dynamicClient.Resource(resource).Namespace(namespace).Get(context.TODO(), name, metav1.GetOptions{})\n}\n\nfunc (Alertmanager) List(dynamicClient dynamic.Interface, resource schema.GroupVersionResource, namespace string) (*unstructured.UnstructuredList, error) {\n\treturn dynamicClient.Resource(resource).Namespace(namespace).List(context.TODO(), metav1.ListOptions{})\n}\n\nfunc (Alertmanager) Update(dynamicClient dynamic.Interface, resource schema.GroupVersionResource, result *unstructured.Unstructured, namespace, name string) (*unstructured.Unstructured, error) {\n\treturn dynamicClient.Resource(resource).Namespace(namespace).Update(context.TODO(), result, metav1.UpdateOptions{})\n}\n\nfunc (Alertmanager) Delete(dynamicClient dynamic.Interface, resource schema.GroupVersionResource, namespace, name string) error {\n\treturn dynamicClient.Resource(resource).Namespace(namespace).Delete(context.TODO(), name, metav1.DeleteOptions{})\n}\n\nfunc getClient() (dynamic.Interface, error) {\n\tkubeconfig := filepath.Join(homedir.HomeDir(), \".kube\", \"config\")\n\tconfig, err := clientcmd.BuildConfigFromFlags(\"\", kubeconfig)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn dynamic.NewForConfig(config)\n}\n```","source":"_posts/k8s/使用client-go操作自定义CRD.md","raw":"---\nlayout: k8s\ntitle: 使用client-go操作自定义CRD\ndate: 2023-07-25 17:18:17\ntags: k8s\n---\n\n#### 介绍\n\n简洁、高效、无需定义 CR 相关结构体，实现了四种方法： Get、List、Update、Delete 来操作 CR。\n\n个人觉得这只适合对 CR 字段更改不是很多的环境，如果参数过多可能会有些繁琐。\n\n#### 代码实现\n\n```go\npackage main\n\nimport (\n\t\"context\"\n\t\"fmt\"\n\t\"path/filepath\"\n\n\tmetav1 \"k8s.io/apimachinery/pkg/apis/meta/v1\"\n\t\"k8s.io/apimachinery/pkg/apis/meta/v1/unstructured\"\n\t\"k8s.io/apimachinery/pkg/runtime/schema\"\n\t\"k8s.io/client-go/dynamic\"\n\t\"k8s.io/client-go/tools/clientcmd\"\n\t\"k8s.io/client-go/util/homedir\"\n)\n\ntype KubernetesCrdExec interface {\n\tGet(dynamicClient dynamic.Interface, resource schema.GroupVersionResource, namespace, name string) (*unstructured.Unstructured, error)\n\tList(dynamicClient dynamic.Interface, resource schema.GroupVersionResource, namespace string) (*unstructured.UnstructuredList, error)\n\tUpdate(dynamicClient dynamic.Interface, resource schema.GroupVersionResource, result *unstructured.Unstructured, namespace, name string) (*unstructured.Unstructured, error)\n\tDelete(dynamicClient dynamic.Interface, resource schema.GroupVersionResource, namespace, name string) error\n}\n\ntype Alertmanager struct{}\n\nfunc main() {\n\tresource := schema.GroupVersionResource{\n\t\tGroup:    \"monitoring.coreos.com\",\n\t\tVersion:  \"v1\",\n\t\tResource: \"alertmanagers\", // 这里必须是复数形式\n\t}\n\n\tnamespace := \"default\"\n\tname := \"my-alertmanager\"\n\n\tdynamicClient, err := getClient()\n\tif err != nil {\n\t\tpanic(err.Error())\n\t}\n\n\tvar crd KubernetesCrdExec\n\tcrd = Alertmanager{}\n\n\tresult, err := crd.Get(dynamicClient, resource, namespace, name)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\n\tfmt.Println(result.Object[\"spec\"].(map[string]interface{})[\"externalUrl\"])\n\n\tresultLists, err := crd.List(dynamicClient, resource, namespace)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\n\tfor _, item := range resultLists.Items {\n\t\tname := item.Object[\"metadata\"].(map[string]interface{})[\"name\"]\n\t\tnamespace := item.Object[\"metadata\"].(map[string]interface{})[\"namespace\"]\n\t\tfmt.Printf(\"%v/%v\\n\", namespace, name)\n\t}\n\n\t// 在这里对 Object 进行修改，更新字段值。这里相当于更新了 spec.externalUrl = http://127.0.0.1:9093\n\tresult.Object[\"spec\"].(map[string]interface{})[\"externalUrl\"] = \"http://127.0.0.1:9093\"\n\tresult, err = crd.Update(dynamicClient, resource, result, namespace, name)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\n\terr = crd.Delete(dynamicClient, resource, namespace, name)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n}\n\nfunc (Alertmanager) Get(dynamicClient dynamic.Interface, resource schema.GroupVersionResource, namespace, name string) (*unstructured.Unstructured, error) {\n\treturn dynamicClient.Resource(resource).Namespace(namespace).Get(context.TODO(), name, metav1.GetOptions{})\n}\n\nfunc (Alertmanager) List(dynamicClient dynamic.Interface, resource schema.GroupVersionResource, namespace string) (*unstructured.UnstructuredList, error) {\n\treturn dynamicClient.Resource(resource).Namespace(namespace).List(context.TODO(), metav1.ListOptions{})\n}\n\nfunc (Alertmanager) Update(dynamicClient dynamic.Interface, resource schema.GroupVersionResource, result *unstructured.Unstructured, namespace, name string) (*unstructured.Unstructured, error) {\n\treturn dynamicClient.Resource(resource).Namespace(namespace).Update(context.TODO(), result, metav1.UpdateOptions{})\n}\n\nfunc (Alertmanager) Delete(dynamicClient dynamic.Interface, resource schema.GroupVersionResource, namespace, name string) error {\n\treturn dynamicClient.Resource(resource).Namespace(namespace).Delete(context.TODO(), name, metav1.DeleteOptions{})\n}\n\nfunc getClient() (dynamic.Interface, error) {\n\tkubeconfig := filepath.Join(homedir.HomeDir(), \".kube\", \"config\")\n\tconfig, err := clientcmd.BuildConfigFromFlags(\"\", kubeconfig)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn dynamic.NewForConfig(config)\n}\n```","slug":"k8s/使用client-go操作自定义CRD","published":1,"updated":"2023-07-28T03:26:12.458Z","_id":"clkkk2yo00001e94w72lxehna","comments":1,"photos":[],"link":"","content":"<h4 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h4><p>简洁、高效、无需定义 CR 相关结构体，实现了四种方法： Get、List、Update、Delete 来操作 CR。</p>\n<p>个人觉得这只适合对 CR 字段更改不是很多的环境，如果参数过多可能会有些繁琐。</p>\n<h4 id=\"代码实现\"><a href=\"#代码实现\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h4><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">\t<span class=\"string\">&quot;context&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;path/filepath&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">\tmetav1 <span class=\"string\">&quot;k8s.io/apimachinery/pkg/apis/meta/v1&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;k8s.io/apimachinery/pkg/apis/meta/v1/unstructured&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;k8s.io/apimachinery/pkg/runtime/schema&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;k8s.io/client-go/dynamic&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;k8s.io/client-go/tools/clientcmd&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;k8s.io/client-go/util/homedir&quot;</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">type</span> KubernetesCrdExec <span class=\"keyword\">interface</span> &#123;</span><br><span class=\"line\">\tGet(dynamicClient dynamic.Interface, resource schema.GroupVersionResource, namespace, name <span class=\"type\">string</span>) (*unstructured.Unstructured, <span class=\"type\">error</span>)</span><br><span class=\"line\">\tList(dynamicClient dynamic.Interface, resource schema.GroupVersionResource, namespace <span class=\"type\">string</span>) (*unstructured.UnstructuredList, <span class=\"type\">error</span>)</span><br><span class=\"line\">\tUpdate(dynamicClient dynamic.Interface, resource schema.GroupVersionResource, result *unstructured.Unstructured, namespace, name <span class=\"type\">string</span>) (*unstructured.Unstructured, <span class=\"type\">error</span>)</span><br><span class=\"line\">\tDelete(dynamicClient dynamic.Interface, resource schema.GroupVersionResource, namespace, name <span class=\"type\">string</span>) <span class=\"type\">error</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">type</span> Alertmanager <span class=\"keyword\">struct</span>&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\tresource := schema.GroupVersionResource&#123;</span><br><span class=\"line\">\t\tGroup:    <span class=\"string\">&quot;monitoring.coreos.com&quot;</span>,</span><br><span class=\"line\">\t\tVersion:  <span class=\"string\">&quot;v1&quot;</span>,</span><br><span class=\"line\">\t\tResource: <span class=\"string\">&quot;alertmanagers&quot;</span>, <span class=\"comment\">// 这里必须是复数形式</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tnamespace := <span class=\"string\">&quot;default&quot;</span></span><br><span class=\"line\">\tname := <span class=\"string\">&quot;my-alertmanager&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">\tdynamicClient, err := getClient()</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">panic</span>(err.Error())</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> crd KubernetesCrdExec</span><br><span class=\"line\">\tcrd = Alertmanager&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tresult, err := crd.Get(dynamicClient, resource, namespace, name)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">panic</span>(err)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tfmt.Println(result.Object[<span class=\"string\">&quot;spec&quot;</span>].(<span class=\"keyword\">map</span>[<span class=\"type\">string</span>]<span class=\"keyword\">interface</span>&#123;&#125;)[<span class=\"string\">&quot;externalUrl&quot;</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">\tresultLists, err := crd.List(dynamicClient, resource, namespace)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">panic</span>(err)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> _, item := <span class=\"keyword\">range</span> resultLists.Items &#123;</span><br><span class=\"line\">\t\tname := item.Object[<span class=\"string\">&quot;metadata&quot;</span>].(<span class=\"keyword\">map</span>[<span class=\"type\">string</span>]<span class=\"keyword\">interface</span>&#123;&#125;)[<span class=\"string\">&quot;name&quot;</span>]</span><br><span class=\"line\">\t\tnamespace := item.Object[<span class=\"string\">&quot;metadata&quot;</span>].(<span class=\"keyword\">map</span>[<span class=\"type\">string</span>]<span class=\"keyword\">interface</span>&#123;&#125;)[<span class=\"string\">&quot;namespace&quot;</span>]</span><br><span class=\"line\">\t\tfmt.Printf(<span class=\"string\">&quot;%v/%v\\n&quot;</span>, namespace, name)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 在这里对 Object 进行修改，更新字段值。这里相当于更新了 spec.externalUrl = http://127.0.0.1:9093</span></span><br><span class=\"line\">\tresult.Object[<span class=\"string\">&quot;spec&quot;</span>].(<span class=\"keyword\">map</span>[<span class=\"type\">string</span>]<span class=\"keyword\">interface</span>&#123;&#125;)[<span class=\"string\">&quot;externalUrl&quot;</span>] = <span class=\"string\">&quot;http://127.0.0.1:9093&quot;</span></span><br><span class=\"line\">\tresult, err = crd.Update(dynamicClient, resource, result, namespace, name)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">panic</span>(err)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\terr = crd.Delete(dynamicClient, resource, namespace, name)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">panic</span>(err)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(Alertmanager)</span></span> Get(dynamicClient dynamic.Interface, resource schema.GroupVersionResource, namespace, name <span class=\"type\">string</span>) (*unstructured.Unstructured, <span class=\"type\">error</span>) &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> dynamicClient.Resource(resource).Namespace(namespace).Get(context.TODO(), name, metav1.GetOptions&#123;&#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(Alertmanager)</span></span> List(dynamicClient dynamic.Interface, resource schema.GroupVersionResource, namespace <span class=\"type\">string</span>) (*unstructured.UnstructuredList, <span class=\"type\">error</span>) &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> dynamicClient.Resource(resource).Namespace(namespace).List(context.TODO(), metav1.ListOptions&#123;&#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(Alertmanager)</span></span> Update(dynamicClient dynamic.Interface, resource schema.GroupVersionResource, result *unstructured.Unstructured, namespace, name <span class=\"type\">string</span>) (*unstructured.Unstructured, <span class=\"type\">error</span>) &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> dynamicClient.Resource(resource).Namespace(namespace).Update(context.TODO(), result, metav1.UpdateOptions&#123;&#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(Alertmanager)</span></span> Delete(dynamicClient dynamic.Interface, resource schema.GroupVersionResource, namespace, name <span class=\"type\">string</span>) <span class=\"type\">error</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> dynamicClient.Resource(resource).Namespace(namespace).Delete(context.TODO(), name, metav1.DeleteOptions&#123;&#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">getClient</span><span class=\"params\">()</span></span> (dynamic.Interface, <span class=\"type\">error</span>) &#123;</span><br><span class=\"line\">\tkubeconfig := filepath.Join(homedir.HomeDir(), <span class=\"string\">&quot;.kube&quot;</span>, <span class=\"string\">&quot;config&quot;</span>)</span><br><span class=\"line\">\tconfig, err := clientcmd.BuildConfigFromFlags(<span class=\"string\">&quot;&quot;</span>, kubeconfig)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">nil</span>, err</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> dynamic.NewForConfig(config)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h4 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h4><p>简洁、高效、无需定义 CR 相关结构体，实现了四种方法： Get、List、Update、Delete 来操作 CR。</p>\n<p>个人觉得这只适合对 CR 字段更改不是很多的环境，如果参数过多可能会有些繁琐。</p>\n<h4 id=\"代码实现\"><a href=\"#代码实现\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h4><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">\t<span class=\"string\">&quot;context&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;path/filepath&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">\tmetav1 <span class=\"string\">&quot;k8s.io/apimachinery/pkg/apis/meta/v1&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;k8s.io/apimachinery/pkg/apis/meta/v1/unstructured&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;k8s.io/apimachinery/pkg/runtime/schema&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;k8s.io/client-go/dynamic&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;k8s.io/client-go/tools/clientcmd&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;k8s.io/client-go/util/homedir&quot;</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">type</span> KubernetesCrdExec <span class=\"keyword\">interface</span> &#123;</span><br><span class=\"line\">\tGet(dynamicClient dynamic.Interface, resource schema.GroupVersionResource, namespace, name <span class=\"type\">string</span>) (*unstructured.Unstructured, <span class=\"type\">error</span>)</span><br><span class=\"line\">\tList(dynamicClient dynamic.Interface, resource schema.GroupVersionResource, namespace <span class=\"type\">string</span>) (*unstructured.UnstructuredList, <span class=\"type\">error</span>)</span><br><span class=\"line\">\tUpdate(dynamicClient dynamic.Interface, resource schema.GroupVersionResource, result *unstructured.Unstructured, namespace, name <span class=\"type\">string</span>) (*unstructured.Unstructured, <span class=\"type\">error</span>)</span><br><span class=\"line\">\tDelete(dynamicClient dynamic.Interface, resource schema.GroupVersionResource, namespace, name <span class=\"type\">string</span>) <span class=\"type\">error</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">type</span> Alertmanager <span class=\"keyword\">struct</span>&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\tresource := schema.GroupVersionResource&#123;</span><br><span class=\"line\">\t\tGroup:    <span class=\"string\">&quot;monitoring.coreos.com&quot;</span>,</span><br><span class=\"line\">\t\tVersion:  <span class=\"string\">&quot;v1&quot;</span>,</span><br><span class=\"line\">\t\tResource: <span class=\"string\">&quot;alertmanagers&quot;</span>, <span class=\"comment\">// 这里必须是复数形式</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tnamespace := <span class=\"string\">&quot;default&quot;</span></span><br><span class=\"line\">\tname := <span class=\"string\">&quot;my-alertmanager&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">\tdynamicClient, err := getClient()</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">panic</span>(err.Error())</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> crd KubernetesCrdExec</span><br><span class=\"line\">\tcrd = Alertmanager&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tresult, err := crd.Get(dynamicClient, resource, namespace, name)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">panic</span>(err)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tfmt.Println(result.Object[<span class=\"string\">&quot;spec&quot;</span>].(<span class=\"keyword\">map</span>[<span class=\"type\">string</span>]<span class=\"keyword\">interface</span>&#123;&#125;)[<span class=\"string\">&quot;externalUrl&quot;</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">\tresultLists, err := crd.List(dynamicClient, resource, namespace)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">panic</span>(err)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> _, item := <span class=\"keyword\">range</span> resultLists.Items &#123;</span><br><span class=\"line\">\t\tname := item.Object[<span class=\"string\">&quot;metadata&quot;</span>].(<span class=\"keyword\">map</span>[<span class=\"type\">string</span>]<span class=\"keyword\">interface</span>&#123;&#125;)[<span class=\"string\">&quot;name&quot;</span>]</span><br><span class=\"line\">\t\tnamespace := item.Object[<span class=\"string\">&quot;metadata&quot;</span>].(<span class=\"keyword\">map</span>[<span class=\"type\">string</span>]<span class=\"keyword\">interface</span>&#123;&#125;)[<span class=\"string\">&quot;namespace&quot;</span>]</span><br><span class=\"line\">\t\tfmt.Printf(<span class=\"string\">&quot;%v/%v\\n&quot;</span>, namespace, name)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 在这里对 Object 进行修改，更新字段值。这里相当于更新了 spec.externalUrl = http://127.0.0.1:9093</span></span><br><span class=\"line\">\tresult.Object[<span class=\"string\">&quot;spec&quot;</span>].(<span class=\"keyword\">map</span>[<span class=\"type\">string</span>]<span class=\"keyword\">interface</span>&#123;&#125;)[<span class=\"string\">&quot;externalUrl&quot;</span>] = <span class=\"string\">&quot;http://127.0.0.1:9093&quot;</span></span><br><span class=\"line\">\tresult, err = crd.Update(dynamicClient, resource, result, namespace, name)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">panic</span>(err)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\terr = crd.Delete(dynamicClient, resource, namespace, name)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">panic</span>(err)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(Alertmanager)</span></span> Get(dynamicClient dynamic.Interface, resource schema.GroupVersionResource, namespace, name <span class=\"type\">string</span>) (*unstructured.Unstructured, <span class=\"type\">error</span>) &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> dynamicClient.Resource(resource).Namespace(namespace).Get(context.TODO(), name, metav1.GetOptions&#123;&#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(Alertmanager)</span></span> List(dynamicClient dynamic.Interface, resource schema.GroupVersionResource, namespace <span class=\"type\">string</span>) (*unstructured.UnstructuredList, <span class=\"type\">error</span>) &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> dynamicClient.Resource(resource).Namespace(namespace).List(context.TODO(), metav1.ListOptions&#123;&#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(Alertmanager)</span></span> Update(dynamicClient dynamic.Interface, resource schema.GroupVersionResource, result *unstructured.Unstructured, namespace, name <span class=\"type\">string</span>) (*unstructured.Unstructured, <span class=\"type\">error</span>) &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> dynamicClient.Resource(resource).Namespace(namespace).Update(context.TODO(), result, metav1.UpdateOptions&#123;&#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(Alertmanager)</span></span> Delete(dynamicClient dynamic.Interface, resource schema.GroupVersionResource, namespace, name <span class=\"type\">string</span>) <span class=\"type\">error</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> dynamicClient.Resource(resource).Namespace(namespace).Delete(context.TODO(), name, metav1.DeleteOptions&#123;&#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">getClient</span><span class=\"params\">()</span></span> (dynamic.Interface, <span class=\"type\">error</span>) &#123;</span><br><span class=\"line\">\tkubeconfig := filepath.Join(homedir.HomeDir(), <span class=\"string\">&quot;.kube&quot;</span>, <span class=\"string\">&quot;config&quot;</span>)</span><br><span class=\"line\">\tconfig, err := clientcmd.BuildConfigFromFlags(<span class=\"string\">&quot;&quot;</span>, kubeconfig)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">nil</span>, err</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> dynamic.NewForConfig(config)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"layout":"k8s","title":"使用kubeadm安装集群","date":"2023-07-26T02:09:12.000Z","_content":"\n#### containerd\n\n[下载地址](https://github.com/opencontainers/runc/releases)\n\n```sh\nwget https://github.com/containerd/containerd/releases/download/v1.7.2/containerd-1.7.2-linux-amd64.tar.gz\ntar Cxzvf /usr/local containerd-1.7.2-linux-amd64.tar.gz\nmkdir -p /usr/local/lib/systemd/system\nwget https://raw.githubusercontent.com/containerd/containerd/main/containerd.service\nmv containerd.service /usr/local/lib/systemd/system/containerd.service\nsystemctl daemon-reload\nsystemctl enable --now containerd\n```\n\n#### runc\n\n[下载地址](https://github.com/opencontainers/runc/releases)\n\n```sh\nhttps://github.com/opencontainers/runc/releases/download/v1.1.8/runc.amd64\ninstall -m 755 runc.amd64 /usr/local/sbin/runc\n```\n\n#### kubeadm、kubelet、kubectl\n```sh\nRELEASE=\"$(curl -sSL https://dl.k8s.io/release/stable.txt)\"\nARCH=\"amd64\"\ncd $DOWNLOAD_DIR\nsudo curl -L --remote-name-all https://dl.k8s.io/release/${RELEASE}/bin/linux/${ARCH}/{kubeadm,kubelet}\nsudo chmod +x {kubeadm,kubelet}\n\nRELEASE_VERSION=\"v0.15.1\"\ncurl -sSL \"https://raw.githubusercontent.com/kubernetes/release/${RELEASE_VERSION}/cmd/kubepkg/templates/latest/deb/kubelet/lib/systemd/system/kubelet.service\" | sed \"s:/usr/bin:${DOWNLOAD_DIR}:g\" | sudo tee /etc/systemd/system/kubelet.service\nsudo mkdir -p /etc/systemd/system/kubelet.service.d\ncurl -sSL \"https://raw.githubusercontent.com/kubernetes/release/${RELEASE_VERSION}/cmd/kubepkg/templates/latest/deb/kubeadm/10-kubeadm.conf\" | sed \"s:/usr/bin:${DOWNLOAD_DIR}:g\" | sudo tee /etc/systemd/system/kubelet.service.d/10-kubeadm.conf\n```\n\n激活并启动 kubelet\n```sh\nsystemctl enable --now kubelet\n```\n\n#### ctrctl\n\n[下载地址](https://github.com/kubernetes-sigs/cri-tools/releases)\n\n```sh\nVERSION=\"v1.26.0\" # check latest version in /releases page\ncurl -L https://github.com/kubernetes-sigs/cri-tools/releases/download/$VERSION/crictl-${VERSION}-linux-amd64.tar.gz --output crictl-${VERSION}-linux-amd64.tar.gz\nsudo tar zxvf crictl-$VERSION-linux-amd64.tar.gz -C /usr/local/bin\nrm -f crictl-$VERSION-linux-amd64.tar.gz\n```\n\n###### ctrctl 测试\n* 不同的部署方式，文件路径可能不同。\n\n```sh\ncrictl --runtime-endpoint /var/run/k3s/containerd/containerd.sock ps -a\n```\n\n#### conntrack\n\n```sh\nyum install conntrack-tools -y\n```\n\n测试\n```sh\nconntrack -L\n```\n\n#### 内核参数\n\n如果不设置参数，使用 kubeadm join 时可能会导致报错\n```log\nW0726 10:29:26.474684    8216 checks.go:1064] [preflight] WARNING: Couldn't create the interface used for talking to the container runtime: crictl is required by the container runtime: executable file not found in $PATH\n\t[WARNING FileExisting-socat]: socat not found in system path\nerror execution phase preflight: [preflight] Some fatal errors occurred:\n\t[ERROR FileExisting-crictl]: crictl not found in system path\n\t[ERROR FileExisting-conntrack]: conntrack not found in system path\n\t[ERROR FileContent--proc-sys-net-bridge-bridge-nf-call-iptables]: /proc/sys/net/bridge/bridge-nf-call-iptables does not exist\n\t[ERROR FileContent--proc-sys-net-ipv4-ip_forward]: /proc/sys/net/ipv4/ip_forward contents are not set to 1\n[preflight] If you know what you are doing, you can make a check non-fatal with `--ignore-preflight-errors=...`\n```\n\n1. 启用 IP 转发\n```sh\necho \"net.ipv4.ip_forward = 1\" >> /etc/sysctl.conf\nsysctl -p\n```\n\n2. 打开 /etc/sysctl.conf 文件，更改内核参数\n   \n```\nnet.bridge.bridge-nf-call-iptables = 1\nnet.bridge.bridge-nf-call-ip6tables = 1\n```\n\n3. 加载 bridge 内核模块\n```sh\nlsmod | grep br_netfilter\nsudo modprobe br_netfilter\nsysctl -p\n```\n\n4. 重新加载 sysctl 配置\n\n```sh\nsysctl -p\n```\n\n\n# 未完。。。","source":"_posts/k8s/使用kubeadm安装集群.md","raw":"---\nlayout: k8s\ntitle: 使用kubeadm安装集群\ndate: 2023-07-26 10:09:12\ntags: k8s\n---\n\n#### containerd\n\n[下载地址](https://github.com/opencontainers/runc/releases)\n\n```sh\nwget https://github.com/containerd/containerd/releases/download/v1.7.2/containerd-1.7.2-linux-amd64.tar.gz\ntar Cxzvf /usr/local containerd-1.7.2-linux-amd64.tar.gz\nmkdir -p /usr/local/lib/systemd/system\nwget https://raw.githubusercontent.com/containerd/containerd/main/containerd.service\nmv containerd.service /usr/local/lib/systemd/system/containerd.service\nsystemctl daemon-reload\nsystemctl enable --now containerd\n```\n\n#### runc\n\n[下载地址](https://github.com/opencontainers/runc/releases)\n\n```sh\nhttps://github.com/opencontainers/runc/releases/download/v1.1.8/runc.amd64\ninstall -m 755 runc.amd64 /usr/local/sbin/runc\n```\n\n#### kubeadm、kubelet、kubectl\n```sh\nRELEASE=\"$(curl -sSL https://dl.k8s.io/release/stable.txt)\"\nARCH=\"amd64\"\ncd $DOWNLOAD_DIR\nsudo curl -L --remote-name-all https://dl.k8s.io/release/${RELEASE}/bin/linux/${ARCH}/{kubeadm,kubelet}\nsudo chmod +x {kubeadm,kubelet}\n\nRELEASE_VERSION=\"v0.15.1\"\ncurl -sSL \"https://raw.githubusercontent.com/kubernetes/release/${RELEASE_VERSION}/cmd/kubepkg/templates/latest/deb/kubelet/lib/systemd/system/kubelet.service\" | sed \"s:/usr/bin:${DOWNLOAD_DIR}:g\" | sudo tee /etc/systemd/system/kubelet.service\nsudo mkdir -p /etc/systemd/system/kubelet.service.d\ncurl -sSL \"https://raw.githubusercontent.com/kubernetes/release/${RELEASE_VERSION}/cmd/kubepkg/templates/latest/deb/kubeadm/10-kubeadm.conf\" | sed \"s:/usr/bin:${DOWNLOAD_DIR}:g\" | sudo tee /etc/systemd/system/kubelet.service.d/10-kubeadm.conf\n```\n\n激活并启动 kubelet\n```sh\nsystemctl enable --now kubelet\n```\n\n#### ctrctl\n\n[下载地址](https://github.com/kubernetes-sigs/cri-tools/releases)\n\n```sh\nVERSION=\"v1.26.0\" # check latest version in /releases page\ncurl -L https://github.com/kubernetes-sigs/cri-tools/releases/download/$VERSION/crictl-${VERSION}-linux-amd64.tar.gz --output crictl-${VERSION}-linux-amd64.tar.gz\nsudo tar zxvf crictl-$VERSION-linux-amd64.tar.gz -C /usr/local/bin\nrm -f crictl-$VERSION-linux-amd64.tar.gz\n```\n\n###### ctrctl 测试\n* 不同的部署方式，文件路径可能不同。\n\n```sh\ncrictl --runtime-endpoint /var/run/k3s/containerd/containerd.sock ps -a\n```\n\n#### conntrack\n\n```sh\nyum install conntrack-tools -y\n```\n\n测试\n```sh\nconntrack -L\n```\n\n#### 内核参数\n\n如果不设置参数，使用 kubeadm join 时可能会导致报错\n```log\nW0726 10:29:26.474684    8216 checks.go:1064] [preflight] WARNING: Couldn't create the interface used for talking to the container runtime: crictl is required by the container runtime: executable file not found in $PATH\n\t[WARNING FileExisting-socat]: socat not found in system path\nerror execution phase preflight: [preflight] Some fatal errors occurred:\n\t[ERROR FileExisting-crictl]: crictl not found in system path\n\t[ERROR FileExisting-conntrack]: conntrack not found in system path\n\t[ERROR FileContent--proc-sys-net-bridge-bridge-nf-call-iptables]: /proc/sys/net/bridge/bridge-nf-call-iptables does not exist\n\t[ERROR FileContent--proc-sys-net-ipv4-ip_forward]: /proc/sys/net/ipv4/ip_forward contents are not set to 1\n[preflight] If you know what you are doing, you can make a check non-fatal with `--ignore-preflight-errors=...`\n```\n\n1. 启用 IP 转发\n```sh\necho \"net.ipv4.ip_forward = 1\" >> /etc/sysctl.conf\nsysctl -p\n```\n\n2. 打开 /etc/sysctl.conf 文件，更改内核参数\n   \n```\nnet.bridge.bridge-nf-call-iptables = 1\nnet.bridge.bridge-nf-call-ip6tables = 1\n```\n\n3. 加载 bridge 内核模块\n```sh\nlsmod | grep br_netfilter\nsudo modprobe br_netfilter\nsysctl -p\n```\n\n4. 重新加载 sysctl 配置\n\n```sh\nsysctl -p\n```\n\n\n# 未完。。。","slug":"k8s/使用kubeadm安装集群","published":1,"updated":"2023-07-29T05:08:10.675Z","_id":"clkkk2yo20003e94w2emv7j83","comments":1,"photos":[],"link":"","content":"<h4 id=\"containerd\"><a href=\"#containerd\" class=\"headerlink\" title=\"containerd\"></a>containerd</h4><p><a href=\"https://github.com/opencontainers/runc/releases\">下载地址</a></p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://github.com/containerd/containerd/releases/download/v1.7.2/containerd-1.7.2-linux-amd64.tar.gz</span><br><span class=\"line\">tar Cxzvf /usr/local containerd-1.7.2-linux-amd64.tar.gz</span><br><span class=\"line\"><span class=\"built_in\">mkdir</span> -p /usr/local/lib/systemd/system</span><br><span class=\"line\">wget https://raw.githubusercontent.com/containerd/containerd/main/containerd.service</span><br><span class=\"line\"><span class=\"built_in\">mv</span> containerd.service /usr/local/lib/systemd/system/containerd.service</span><br><span class=\"line\">systemctl daemon-reload</span><br><span class=\"line\">systemctl <span class=\"built_in\">enable</span> --now containerd</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"runc\"><a href=\"#runc\" class=\"headerlink\" title=\"runc\"></a>runc</h4><p><a href=\"https://github.com/opencontainers/runc/releases\">下载地址</a></p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://github.com/opencontainers/runc/releases/download/v1.1.8/runc.amd64</span><br><span class=\"line\">install -m 755 runc.amd64 /usr/local/sbin/runc</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"kubeadm、kubelet、kubectl\"><a href=\"#kubeadm、kubelet、kubectl\" class=\"headerlink\" title=\"kubeadm、kubelet、kubectl\"></a>kubeadm、kubelet、kubectl</h4><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">RELEASE=<span class=\"string\">&quot;<span class=\"subst\">$(curl -sSL https://dl.k8s.io/release/stable.txt)</span>&quot;</span></span><br><span class=\"line\">ARCH=<span class=\"string\">&quot;amd64&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> <span class=\"variable\">$DOWNLOAD_DIR</span></span><br><span class=\"line\">sudo curl -L --remote-name-all https://dl.k8s.io/release/<span class=\"variable\">$&#123;RELEASE&#125;</span>/bin/linux/<span class=\"variable\">$&#123;ARCH&#125;</span>/&#123;kubeadm,kubelet&#125;</span><br><span class=\"line\">sudo <span class=\"built_in\">chmod</span> +x &#123;kubeadm,kubelet&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">RELEASE_VERSION=<span class=\"string\">&quot;v0.15.1&quot;</span></span><br><span class=\"line\">curl -sSL <span class=\"string\">&quot;https://raw.githubusercontent.com/kubernetes/release/<span class=\"variable\">$&#123;RELEASE_VERSION&#125;</span>/cmd/kubepkg/templates/latest/deb/kubelet/lib/systemd/system/kubelet.service&quot;</span> | sed <span class=\"string\">&quot;s:/usr/bin:<span class=\"variable\">$&#123;DOWNLOAD_DIR&#125;</span>:g&quot;</span> | sudo <span class=\"built_in\">tee</span> /etc/systemd/system/kubelet.service</span><br><span class=\"line\">sudo <span class=\"built_in\">mkdir</span> -p /etc/systemd/system/kubelet.service.d</span><br><span class=\"line\">curl -sSL <span class=\"string\">&quot;https://raw.githubusercontent.com/kubernetes/release/<span class=\"variable\">$&#123;RELEASE_VERSION&#125;</span>/cmd/kubepkg/templates/latest/deb/kubeadm/10-kubeadm.conf&quot;</span> | sed <span class=\"string\">&quot;s:/usr/bin:<span class=\"variable\">$&#123;DOWNLOAD_DIR&#125;</span>:g&quot;</span> | sudo <span class=\"built_in\">tee</span> /etc/systemd/system/kubelet.service.d/10-kubeadm.conf</span><br></pre></td></tr></table></figure>\n\n<p>激活并启动 kubelet</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl <span class=\"built_in\">enable</span> --now kubelet</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"ctrctl\"><a href=\"#ctrctl\" class=\"headerlink\" title=\"ctrctl\"></a>ctrctl</h4><p><a href=\"https://github.com/kubernetes-sigs/cri-tools/releases\">下载地址</a></p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">VERSION=<span class=\"string\">&quot;v1.26.0&quot;</span> <span class=\"comment\"># check latest version in /releases page</span></span><br><span class=\"line\">curl -L https://github.com/kubernetes-sigs/cri-tools/releases/download/<span class=\"variable\">$VERSION</span>/crictl-<span class=\"variable\">$&#123;VERSION&#125;</span>-linux-amd64.tar.gz --output crictl-<span class=\"variable\">$&#123;VERSION&#125;</span>-linux-amd64.tar.gz</span><br><span class=\"line\">sudo tar zxvf crictl-<span class=\"variable\">$VERSION</span>-linux-amd64.tar.gz -C /usr/local/bin</span><br><span class=\"line\"><span class=\"built_in\">rm</span> -f crictl-<span class=\"variable\">$VERSION</span>-linux-amd64.tar.gz</span><br></pre></td></tr></table></figure>\n\n<h6 id=\"ctrctl-测试\"><a href=\"#ctrctl-测试\" class=\"headerlink\" title=\"ctrctl 测试\"></a>ctrctl 测试</h6><ul>\n<li>不同的部署方式，文件路径可能不同。</li>\n</ul>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">crictl --runtime-endpoint /var/run/k3s/containerd/containerd.sock ps -a</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"conntrack\"><a href=\"#conntrack\" class=\"headerlink\" title=\"conntrack\"></a>conntrack</h4><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install conntrack-tools -y</span><br></pre></td></tr></table></figure>\n\n<p>测试</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conntrack -L</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"内核参数\"><a href=\"#内核参数\" class=\"headerlink\" title=\"内核参数\"></a>内核参数</h4><p>如果不设置参数，使用 kubeadm join 时可能会导致报错</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">W0726 10:29:26.474684    8216 checks.go:1064] [preflight] WARNING: Couldn&#x27;t create the interface used for talking to the container runtime: crictl is required by the container runtime: executable file not found in $PATH</span><br><span class=\"line\">\t[WARNING FileExisting-socat]: socat not found in system path</span><br><span class=\"line\">error execution phase preflight: [preflight] Some fatal errors occurred:</span><br><span class=\"line\">\t[ERROR FileExisting-crictl]: crictl not found in system path</span><br><span class=\"line\">\t[ERROR FileExisting-conntrack]: conntrack not found in system path</span><br><span class=\"line\">\t[ERROR FileContent--proc-sys-net-bridge-bridge-nf-call-iptables]: /proc/sys/net/bridge/bridge-nf-call-iptables does not exist</span><br><span class=\"line\">\t[ERROR FileContent--proc-sys-net-ipv4-ip_forward]: /proc/sys/net/ipv4/ip_forward contents are not set to 1</span><br><span class=\"line\">[preflight] If you know what you are doing, you can make a check non-fatal with `--ignore-preflight-errors=...`</span><br></pre></td></tr></table></figure>\n\n<ol>\n<li><p>启用 IP 转发</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;net.ipv4.ip_forward = 1&quot;</span> &gt;&gt; /etc/sysctl.conf</span><br><span class=\"line\">sysctl -p</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>打开 &#x2F;etc&#x2F;sysctl.conf 文件，更改内核参数</p>\n</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">net.bridge.bridge-nf-call-iptables = 1</span><br><span class=\"line\">net.bridge.bridge-nf-call-ip6tables = 1</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li><p>加载 bridge 内核模块</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">lsmod | grep br_netfilter</span><br><span class=\"line\">sudo modprobe br_netfilter</span><br><span class=\"line\">sysctl -p</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>重新加载 sysctl 配置</p>\n</li>\n</ol>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sysctl -p</span><br></pre></td></tr></table></figure>\n\n\n<h1 id=\"未完。。。\"><a href=\"#未完。。。\" class=\"headerlink\" title=\"未完。。。\"></a>未完。。。</h1>","site":{"data":{}},"excerpt":"","more":"<h4 id=\"containerd\"><a href=\"#containerd\" class=\"headerlink\" title=\"containerd\"></a>containerd</h4><p><a href=\"https://github.com/opencontainers/runc/releases\">下载地址</a></p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://github.com/containerd/containerd/releases/download/v1.7.2/containerd-1.7.2-linux-amd64.tar.gz</span><br><span class=\"line\">tar Cxzvf /usr/local containerd-1.7.2-linux-amd64.tar.gz</span><br><span class=\"line\"><span class=\"built_in\">mkdir</span> -p /usr/local/lib/systemd/system</span><br><span class=\"line\">wget https://raw.githubusercontent.com/containerd/containerd/main/containerd.service</span><br><span class=\"line\"><span class=\"built_in\">mv</span> containerd.service /usr/local/lib/systemd/system/containerd.service</span><br><span class=\"line\">systemctl daemon-reload</span><br><span class=\"line\">systemctl <span class=\"built_in\">enable</span> --now containerd</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"runc\"><a href=\"#runc\" class=\"headerlink\" title=\"runc\"></a>runc</h4><p><a href=\"https://github.com/opencontainers/runc/releases\">下载地址</a></p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://github.com/opencontainers/runc/releases/download/v1.1.8/runc.amd64</span><br><span class=\"line\">install -m 755 runc.amd64 /usr/local/sbin/runc</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"kubeadm、kubelet、kubectl\"><a href=\"#kubeadm、kubelet、kubectl\" class=\"headerlink\" title=\"kubeadm、kubelet、kubectl\"></a>kubeadm、kubelet、kubectl</h4><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">RELEASE=<span class=\"string\">&quot;<span class=\"subst\">$(curl -sSL https://dl.k8s.io/release/stable.txt)</span>&quot;</span></span><br><span class=\"line\">ARCH=<span class=\"string\">&quot;amd64&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> <span class=\"variable\">$DOWNLOAD_DIR</span></span><br><span class=\"line\">sudo curl -L --remote-name-all https://dl.k8s.io/release/<span class=\"variable\">$&#123;RELEASE&#125;</span>/bin/linux/<span class=\"variable\">$&#123;ARCH&#125;</span>/&#123;kubeadm,kubelet&#125;</span><br><span class=\"line\">sudo <span class=\"built_in\">chmod</span> +x &#123;kubeadm,kubelet&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">RELEASE_VERSION=<span class=\"string\">&quot;v0.15.1&quot;</span></span><br><span class=\"line\">curl -sSL <span class=\"string\">&quot;https://raw.githubusercontent.com/kubernetes/release/<span class=\"variable\">$&#123;RELEASE_VERSION&#125;</span>/cmd/kubepkg/templates/latest/deb/kubelet/lib/systemd/system/kubelet.service&quot;</span> | sed <span class=\"string\">&quot;s:/usr/bin:<span class=\"variable\">$&#123;DOWNLOAD_DIR&#125;</span>:g&quot;</span> | sudo <span class=\"built_in\">tee</span> /etc/systemd/system/kubelet.service</span><br><span class=\"line\">sudo <span class=\"built_in\">mkdir</span> -p /etc/systemd/system/kubelet.service.d</span><br><span class=\"line\">curl -sSL <span class=\"string\">&quot;https://raw.githubusercontent.com/kubernetes/release/<span class=\"variable\">$&#123;RELEASE_VERSION&#125;</span>/cmd/kubepkg/templates/latest/deb/kubeadm/10-kubeadm.conf&quot;</span> | sed <span class=\"string\">&quot;s:/usr/bin:<span class=\"variable\">$&#123;DOWNLOAD_DIR&#125;</span>:g&quot;</span> | sudo <span class=\"built_in\">tee</span> /etc/systemd/system/kubelet.service.d/10-kubeadm.conf</span><br></pre></td></tr></table></figure>\n\n<p>激活并启动 kubelet</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl <span class=\"built_in\">enable</span> --now kubelet</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"ctrctl\"><a href=\"#ctrctl\" class=\"headerlink\" title=\"ctrctl\"></a>ctrctl</h4><p><a href=\"https://github.com/kubernetes-sigs/cri-tools/releases\">下载地址</a></p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">VERSION=<span class=\"string\">&quot;v1.26.0&quot;</span> <span class=\"comment\"># check latest version in /releases page</span></span><br><span class=\"line\">curl -L https://github.com/kubernetes-sigs/cri-tools/releases/download/<span class=\"variable\">$VERSION</span>/crictl-<span class=\"variable\">$&#123;VERSION&#125;</span>-linux-amd64.tar.gz --output crictl-<span class=\"variable\">$&#123;VERSION&#125;</span>-linux-amd64.tar.gz</span><br><span class=\"line\">sudo tar zxvf crictl-<span class=\"variable\">$VERSION</span>-linux-amd64.tar.gz -C /usr/local/bin</span><br><span class=\"line\"><span class=\"built_in\">rm</span> -f crictl-<span class=\"variable\">$VERSION</span>-linux-amd64.tar.gz</span><br></pre></td></tr></table></figure>\n\n<h6 id=\"ctrctl-测试\"><a href=\"#ctrctl-测试\" class=\"headerlink\" title=\"ctrctl 测试\"></a>ctrctl 测试</h6><ul>\n<li>不同的部署方式，文件路径可能不同。</li>\n</ul>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">crictl --runtime-endpoint /var/run/k3s/containerd/containerd.sock ps -a</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"conntrack\"><a href=\"#conntrack\" class=\"headerlink\" title=\"conntrack\"></a>conntrack</h4><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install conntrack-tools -y</span><br></pre></td></tr></table></figure>\n\n<p>测试</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conntrack -L</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"内核参数\"><a href=\"#内核参数\" class=\"headerlink\" title=\"内核参数\"></a>内核参数</h4><p>如果不设置参数，使用 kubeadm join 时可能会导致报错</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">W0726 10:29:26.474684    8216 checks.go:1064] [preflight] WARNING: Couldn&#x27;t create the interface used for talking to the container runtime: crictl is required by the container runtime: executable file not found in $PATH</span><br><span class=\"line\">\t[WARNING FileExisting-socat]: socat not found in system path</span><br><span class=\"line\">error execution phase preflight: [preflight] Some fatal errors occurred:</span><br><span class=\"line\">\t[ERROR FileExisting-crictl]: crictl not found in system path</span><br><span class=\"line\">\t[ERROR FileExisting-conntrack]: conntrack not found in system path</span><br><span class=\"line\">\t[ERROR FileContent--proc-sys-net-bridge-bridge-nf-call-iptables]: /proc/sys/net/bridge/bridge-nf-call-iptables does not exist</span><br><span class=\"line\">\t[ERROR FileContent--proc-sys-net-ipv4-ip_forward]: /proc/sys/net/ipv4/ip_forward contents are not set to 1</span><br><span class=\"line\">[preflight] If you know what you are doing, you can make a check non-fatal with `--ignore-preflight-errors=...`</span><br></pre></td></tr></table></figure>\n\n<ol>\n<li><p>启用 IP 转发</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;net.ipv4.ip_forward = 1&quot;</span> &gt;&gt; /etc/sysctl.conf</span><br><span class=\"line\">sysctl -p</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>打开 &#x2F;etc&#x2F;sysctl.conf 文件，更改内核参数</p>\n</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">net.bridge.bridge-nf-call-iptables = 1</span><br><span class=\"line\">net.bridge.bridge-nf-call-ip6tables = 1</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li><p>加载 bridge 内核模块</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">lsmod | grep br_netfilter</span><br><span class=\"line\">sudo modprobe br_netfilter</span><br><span class=\"line\">sysctl -p</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>重新加载 sysctl 配置</p>\n</li>\n</ol>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sysctl -p</span><br></pre></td></tr></table></figure>\n\n\n<h1 id=\"未完。。。\"><a href=\"#未完。。。\" class=\"headerlink\" title=\"未完。。。\"></a>未完。。。</h1>"},{"layout":"linux","title":"文件、磁盘相关命令","date":"2023-07-25T08:03:37.000Z","_content":"\n#### 查看某个目录下所有文件夹大小\n\n```sh\n# 只能查看文件夹\n\n# 查看当前目录\ndu -h --max-depth=1 | sort -h\n\n# 查看指定目录\ndu -h $DIR --max-depth=1 | sort -h\n\n# 参数解析\n# --max-depth 深度\n# sort -h 从小到大排序\n# sort -rh 从大到小排序\n```\n\n\n#### 查看磁盘\n\n1. 显示系统中每个文件系统的磁盘使用情况\n\n```sh\ndf -h\n```\n\n2. 显示系统中所有的块设备，包括硬盘和分区。通常，系统盘的挂载点是根目录 /，而数据盘则可能挂载在其他目录上，如/home、/mnt等。\n\n```sh\nlsblk\n```\n\n3. 显示所有在启动时挂载的文件系统，包括系统盘和数据盘的信息。一般情况下，系统盘的挂载信息会在此文件中。\n```sh\ncat /etc/fstab\n```","source":"_posts/linux/文件、磁盘相关命令.md","raw":"---\nlayout: linux\ntitle: 文件、磁盘相关命令\ndate: 2023-07-25 16:03:37\ntags: linux\n---\n\n#### 查看某个目录下所有文件夹大小\n\n```sh\n# 只能查看文件夹\n\n# 查看当前目录\ndu -h --max-depth=1 | sort -h\n\n# 查看指定目录\ndu -h $DIR --max-depth=1 | sort -h\n\n# 参数解析\n# --max-depth 深度\n# sort -h 从小到大排序\n# sort -rh 从大到小排序\n```\n\n\n#### 查看磁盘\n\n1. 显示系统中每个文件系统的磁盘使用情况\n\n```sh\ndf -h\n```\n\n2. 显示系统中所有的块设备，包括硬盘和分区。通常，系统盘的挂载点是根目录 /，而数据盘则可能挂载在其他目录上，如/home、/mnt等。\n\n```sh\nlsblk\n```\n\n3. 显示所有在启动时挂载的文件系统，包括系统盘和数据盘的信息。一般情况下，系统盘的挂载信息会在此文件中。\n```sh\ncat /etc/fstab\n```","slug":"linux/文件、磁盘相关命令","published":1,"updated":"2023-07-25T08:39:20.998Z","comments":1,"photos":[],"link":"","_id":"clkkk2yo20004e94w7bthfmwf","content":"<h4 id=\"查看某个目录下所有文件夹大小\"><a href=\"#查看某个目录下所有文件夹大小\" class=\"headerlink\" title=\"查看某个目录下所有文件夹大小\"></a>查看某个目录下所有文件夹大小</h4><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 只能查看文件夹</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看当前目录</span></span><br><span class=\"line\"><span class=\"built_in\">du</span> -h --max-depth=1 | <span class=\"built_in\">sort</span> -h</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看指定目录</span></span><br><span class=\"line\"><span class=\"built_in\">du</span> -h <span class=\"variable\">$DIR</span> --max-depth=1 | <span class=\"built_in\">sort</span> -h</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 参数解析</span></span><br><span class=\"line\"><span class=\"comment\"># --max-depth 深度</span></span><br><span class=\"line\"><span class=\"comment\"># sort -h 从小到大排序</span></span><br><span class=\"line\"><span class=\"comment\"># sort -rh 从大到小排序</span></span><br></pre></td></tr></table></figure>\n\n\n<h4 id=\"查看磁盘\"><a href=\"#查看磁盘\" class=\"headerlink\" title=\"查看磁盘\"></a>查看磁盘</h4><ol>\n<li>显示系统中每个文件系统的磁盘使用情况</li>\n</ol>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">df</span> -h</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>显示系统中所有的块设备，包括硬盘和分区。通常，系统盘的挂载点是根目录 &#x2F;，而数据盘则可能挂载在其他目录上，如&#x2F;home、&#x2F;mnt等。</li>\n</ol>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">lsblk</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>显示所有在启动时挂载的文件系统，包括系统盘和数据盘的信息。一般情况下，系统盘的挂载信息会在此文件中。<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cat</span> /etc/fstab</span><br></pre></td></tr></table></figure></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"查看某个目录下所有文件夹大小\"><a href=\"#查看某个目录下所有文件夹大小\" class=\"headerlink\" title=\"查看某个目录下所有文件夹大小\"></a>查看某个目录下所有文件夹大小</h4><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 只能查看文件夹</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看当前目录</span></span><br><span class=\"line\"><span class=\"built_in\">du</span> -h --max-depth=1 | <span class=\"built_in\">sort</span> -h</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看指定目录</span></span><br><span class=\"line\"><span class=\"built_in\">du</span> -h <span class=\"variable\">$DIR</span> --max-depth=1 | <span class=\"built_in\">sort</span> -h</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 参数解析</span></span><br><span class=\"line\"><span class=\"comment\"># --max-depth 深度</span></span><br><span class=\"line\"><span class=\"comment\"># sort -h 从小到大排序</span></span><br><span class=\"line\"><span class=\"comment\"># sort -rh 从大到小排序</span></span><br></pre></td></tr></table></figure>\n\n\n<h4 id=\"查看磁盘\"><a href=\"#查看磁盘\" class=\"headerlink\" title=\"查看磁盘\"></a>查看磁盘</h4><ol>\n<li>显示系统中每个文件系统的磁盘使用情况</li>\n</ol>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">df</span> -h</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>显示系统中所有的块设备，包括硬盘和分区。通常，系统盘的挂载点是根目录 &#x2F;，而数据盘则可能挂载在其他目录上，如&#x2F;home、&#x2F;mnt等。</li>\n</ol>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">lsblk</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>显示所有在启动时挂载的文件系统，包括系统盘和数据盘的信息。一般情况下，系统盘的挂载信息会在此文件中。<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cat</span> /etc/fstab</span><br></pre></td></tr></table></figure></li>\n</ol>\n"},{"layout":"k8s","title":"flannel、calico","date":"2023-07-27T06:31:00.000Z","_content":"\n# flannel\n\n3种封装和路由模式\n\n* UDP\n* VXLAN\n* host-gateway\n\nUDP、VXLAN模式基于三层网络，host-gateway需要在二层网络同一个交换机下才能实现。","source":"_posts/k8s/flannel、calico.md","raw":"---\nlayout: k8s\ntitle: flannel、calico\ndate: 2023-07-27 14:31:00\ntags: k8s\n---\n\n# flannel\n\n3种封装和路由模式\n\n* UDP\n* VXLAN\n* host-gateway\n\nUDP、VXLAN模式基于三层网络，host-gateway需要在二层网络同一个交换机下才能实现。","slug":"k8s/flannel、calico","published":1,"updated":"2023-07-27T06:34:40.717Z","comments":1,"photos":[],"link":"","_id":"clkku7xnf0000jr4wcpcf02k8","content":"<h1 id=\"flannel\"><a href=\"#flannel\" class=\"headerlink\" title=\"flannel\"></a>flannel</h1><p>3种封装和路由模式</p>\n<ul>\n<li>UDP</li>\n<li>VXLAN</li>\n<li>host-gateway</li>\n</ul>\n<p>UDP、VXLAN模式基于三层网络，host-gateway需要在二层网络同一个交换机下才能实现。</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"flannel\"><a href=\"#flannel\" class=\"headerlink\" title=\"flannel\"></a>flannel</h1><p>3种封装和路由模式</p>\n<ul>\n<li>UDP</li>\n<li>VXLAN</li>\n<li>host-gateway</li>\n</ul>\n<p>UDP、VXLAN模式基于三层网络，host-gateway需要在二层网络同一个交换机下才能实现。</p>\n"},{"layout":"golang","title":"golang time包用法","date":"2023-07-27T07:33:31.000Z","_content":"\n#### 时间格式\n```go\n\ttimelocal, err := time.LoadLocation(\"Asia/Shanghai\")\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\ttime.Local = timelocal\n\tfmt.Println(time.Now().Local().Format(\"2006-01-02 15:04:05\"))\n```\n\n#### 超时处理\n\n* 1. 使用select\n```go\n    c1 := make(chan string, 1)\n    go func() {\n        time.Sleep(time.Second * 2)\n        c1 <- \"result 1\"\n    }()\n\n    select {\n    case res := <-c1:\n        fmt.Println(res)\n    case <-time.After(time.Second * 1):\n        fmt.Println(\"timeout 1\")\n    }\n```\n\n* 2. 使用 time.Since\n```go\n\tstartTime := time.Now()\n\ttimeout := 5 * time.Second\n\n    time.Sleep(10 * time.Second)\n\n    if time.Since(startTime) > timeout {\n        return fmt.Errorf(\"timeout\")\n    }\n```\n#### 定时器\n\n* 1. timer\n```go\nfunc main() {\n\t// NewTimer 创建一个 Timer，它会在最少过去时间段 d 后到期，向其自身的 C 字段发送当时的时间\n\ttimer1 := time.NewTimer(5 * time.Second)\n\n\tfmt.Println(\"开始时间：\", time.Now().Format(\"2006-01-02 15:04:05\"))\n\tgo func(t *time.Timer) {\n\t\ttimes := 0\n\t\tfor {\n\t\t\t<-t.C\n\t\t\tfmt.Println(\"timer\", time.Now().Format(\"2006-01-02 15:04:05\"))\n\n\t\t\ttimes++\n\t\t\tfmt.Println(\"调用 reset 重新设置一次timer定时器，并将时间修改为2秒\")\n\t\t\tt.Reset(2 * time.Second)\n\t\t\tif times > 3 {\n\t\t\t\tfmt.Println(\"调用 stop 停止定时器\")\n\t\t\t\tt.Stop()\n\t\t\t}\n\t\t}\n\t}(timer1)\n\n\ttime.Sleep(30 * time.Second)\n\tfmt.Println(\"结束时间：\", time.Now().Format(\"2006-01-02 15:04:05\"))\n}\n```\n* 2. ticker\n  \n```go\nfunc main() {\n\tticker1 := time.NewTicker(5 * time.Second)\n\tdefer ticker1.Stop() // 一定要调用Stop()，回收资源\n\tgo func(t *time.Ticker) {\n\t\tfor {\n\t\t\t// 每5秒中从chan t.C 中读取一次\n\t\t\t<-t.C\n\t\t\tfmt.Println(\"Ticker:\", time.Now().Format(\"2006-01-02 15:04:05\"))\n\t\t}\n\t}(ticker1)\n\n\ttime.Sleep(30 * time.Second)\n\tfmt.Println(\"ok\")\n}\n```","source":"_posts/golang/golang-time包用法.md","raw":"---\nlayout: golang\ntitle: golang time包用法\ndate: 2023-07-27 15:33:31\ntags:\n---\n\n#### 时间格式\n```go\n\ttimelocal, err := time.LoadLocation(\"Asia/Shanghai\")\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\ttime.Local = timelocal\n\tfmt.Println(time.Now().Local().Format(\"2006-01-02 15:04:05\"))\n```\n\n#### 超时处理\n\n* 1. 使用select\n```go\n    c1 := make(chan string, 1)\n    go func() {\n        time.Sleep(time.Second * 2)\n        c1 <- \"result 1\"\n    }()\n\n    select {\n    case res := <-c1:\n        fmt.Println(res)\n    case <-time.After(time.Second * 1):\n        fmt.Println(\"timeout 1\")\n    }\n```\n\n* 2. 使用 time.Since\n```go\n\tstartTime := time.Now()\n\ttimeout := 5 * time.Second\n\n    time.Sleep(10 * time.Second)\n\n    if time.Since(startTime) > timeout {\n        return fmt.Errorf(\"timeout\")\n    }\n```\n#### 定时器\n\n* 1. timer\n```go\nfunc main() {\n\t// NewTimer 创建一个 Timer，它会在最少过去时间段 d 后到期，向其自身的 C 字段发送当时的时间\n\ttimer1 := time.NewTimer(5 * time.Second)\n\n\tfmt.Println(\"开始时间：\", time.Now().Format(\"2006-01-02 15:04:05\"))\n\tgo func(t *time.Timer) {\n\t\ttimes := 0\n\t\tfor {\n\t\t\t<-t.C\n\t\t\tfmt.Println(\"timer\", time.Now().Format(\"2006-01-02 15:04:05\"))\n\n\t\t\ttimes++\n\t\t\tfmt.Println(\"调用 reset 重新设置一次timer定时器，并将时间修改为2秒\")\n\t\t\tt.Reset(2 * time.Second)\n\t\t\tif times > 3 {\n\t\t\t\tfmt.Println(\"调用 stop 停止定时器\")\n\t\t\t\tt.Stop()\n\t\t\t}\n\t\t}\n\t}(timer1)\n\n\ttime.Sleep(30 * time.Second)\n\tfmt.Println(\"结束时间：\", time.Now().Format(\"2006-01-02 15:04:05\"))\n}\n```\n* 2. ticker\n  \n```go\nfunc main() {\n\tticker1 := time.NewTicker(5 * time.Second)\n\tdefer ticker1.Stop() // 一定要调用Stop()，回收资源\n\tgo func(t *time.Ticker) {\n\t\tfor {\n\t\t\t// 每5秒中从chan t.C 中读取一次\n\t\t\t<-t.C\n\t\t\tfmt.Println(\"Ticker:\", time.Now().Format(\"2006-01-02 15:04:05\"))\n\t\t}\n\t}(ticker1)\n\n\ttime.Sleep(30 * time.Second)\n\tfmt.Println(\"ok\")\n}\n```","slug":"golang/golang-time包用法","published":1,"updated":"2023-07-27T07:33:50.769Z","comments":1,"photos":[],"link":"","_id":"clkku9oxq0000ou4w9a5bfsd1","content":"<h4 id=\"时间格式\"><a href=\"#时间格式\" class=\"headerlink\" title=\"时间格式\"></a>时间格式</h4><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">timelocal, err := time.LoadLocation(<span class=\"string\">&quot;Asia/Shanghai&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t<span class=\"built_in\">panic</span>(err)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">time.Local = timelocal</span><br><span class=\"line\">fmt.Println(time.Now().Local().Format(<span class=\"string\">&quot;2006-01-02 15:04:05&quot;</span>))</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"超时处理\"><a href=\"#超时处理\" class=\"headerlink\" title=\"超时处理\"></a>超时处理</h4><ul>\n<li><ol>\n<li>使用select<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">c1 := <span class=\"built_in\">make</span>(<span class=\"keyword\">chan</span> <span class=\"type\">string</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\"><span class=\"keyword\">go</span> <span class=\"function\"><span class=\"keyword\">func</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">    time.Sleep(time.Second * <span class=\"number\">2</span>)</span><br><span class=\"line\">    c1 &lt;- <span class=\"string\">&quot;result 1&quot;</span></span><br><span class=\"line\">&#125;()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">select</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">case</span> res := &lt;-c1:</span><br><span class=\"line\">    fmt.Println(res)</span><br><span class=\"line\"><span class=\"keyword\">case</span> &lt;-time.After(time.Second * <span class=\"number\">1</span>):</span><br><span class=\"line\">    fmt.Println(<span class=\"string\">&quot;timeout 1&quot;</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ol>\n</li>\n<li><ol start=\"2\">\n<li>使用 time.Since<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">startTime := time.Now()</span><br><span class=\"line\">timeout := <span class=\"number\">5</span> * time.Second</span><br><span class=\"line\"></span><br><span class=\"line\">   time.Sleep(<span class=\"number\">10</span> * time.Second)</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">if</span> time.Since(startTime) &gt; timeout &#123;</span><br><span class=\"line\">       <span class=\"keyword\">return</span> fmt.Errorf(<span class=\"string\">&quot;timeout&quot;</span>)</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure></li>\n</ol>\n</li>\n</ul>\n<h4 id=\"定时器\"><a href=\"#定时器\" class=\"headerlink\" title=\"定时器\"></a>定时器</h4><ul>\n<li><ol>\n<li>timer<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// NewTimer 创建一个 Timer，它会在最少过去时间段 d 后到期，向其自身的 C 字段发送当时的时间</span></span><br><span class=\"line\">\ttimer1 := time.NewTimer(<span class=\"number\">5</span> * time.Second)</span><br><span class=\"line\"></span><br><span class=\"line\">\tfmt.Println(<span class=\"string\">&quot;开始时间：&quot;</span>, time.Now().Format(<span class=\"string\">&quot;2006-01-02 15:04:05&quot;</span>))</span><br><span class=\"line\">\t<span class=\"keyword\">go</span> <span class=\"function\"><span class=\"keyword\">func</span><span class=\"params\">(t *time.Timer)</span></span> &#123;</span><br><span class=\"line\">\t\ttimes := <span class=\"number\">0</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> &#123;</span><br><span class=\"line\">\t\t\t&lt;-t.C</span><br><span class=\"line\">\t\t\tfmt.Println(<span class=\"string\">&quot;timer&quot;</span>, time.Now().Format(<span class=\"string\">&quot;2006-01-02 15:04:05&quot;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\ttimes++</span><br><span class=\"line\">\t\t\tfmt.Println(<span class=\"string\">&quot;调用 reset 重新设置一次timer定时器，并将时间修改为2秒&quot;</span>)</span><br><span class=\"line\">\t\t\tt.Reset(<span class=\"number\">2</span> * time.Second)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> times &gt; <span class=\"number\">3</span> &#123;</span><br><span class=\"line\">\t\t\t\tfmt.Println(<span class=\"string\">&quot;调用 stop 停止定时器&quot;</span>)</span><br><span class=\"line\">\t\t\t\tt.Stop()</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;(timer1)</span><br><span class=\"line\"></span><br><span class=\"line\">\ttime.Sleep(<span class=\"number\">30</span> * time.Second)</span><br><span class=\"line\">\tfmt.Println(<span class=\"string\">&quot;结束时间：&quot;</span>, time.Now().Format(<span class=\"string\">&quot;2006-01-02 15:04:05&quot;</span>))</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ol>\n</li>\n<li><ol start=\"2\">\n<li>ticker</li>\n</ol>\n</li>\n</ul>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\tticker1 := time.NewTicker(<span class=\"number\">5</span> * time.Second)</span><br><span class=\"line\">\t<span class=\"keyword\">defer</span> ticker1.Stop() <span class=\"comment\">// 一定要调用Stop()，回收资源</span></span><br><span class=\"line\">\t<span class=\"keyword\">go</span> <span class=\"function\"><span class=\"keyword\">func</span><span class=\"params\">(t *time.Ticker)</span></span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"comment\">// 每5秒中从chan t.C 中读取一次</span></span><br><span class=\"line\">\t\t\t&lt;-t.C</span><br><span class=\"line\">\t\t\tfmt.Println(<span class=\"string\">&quot;Ticker:&quot;</span>, time.Now().Format(<span class=\"string\">&quot;2006-01-02 15:04:05&quot;</span>))</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;(ticker1)</span><br><span class=\"line\"></span><br><span class=\"line\">\ttime.Sleep(<span class=\"number\">30</span> * time.Second)</span><br><span class=\"line\">\tfmt.Println(<span class=\"string\">&quot;ok&quot;</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h4 id=\"时间格式\"><a href=\"#时间格式\" class=\"headerlink\" title=\"时间格式\"></a>时间格式</h4><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">timelocal, err := time.LoadLocation(<span class=\"string\">&quot;Asia/Shanghai&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t<span class=\"built_in\">panic</span>(err)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">time.Local = timelocal</span><br><span class=\"line\">fmt.Println(time.Now().Local().Format(<span class=\"string\">&quot;2006-01-02 15:04:05&quot;</span>))</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"超时处理\"><a href=\"#超时处理\" class=\"headerlink\" title=\"超时处理\"></a>超时处理</h4><ul>\n<li><ol>\n<li>使用select<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">c1 := <span class=\"built_in\">make</span>(<span class=\"keyword\">chan</span> <span class=\"type\">string</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\"><span class=\"keyword\">go</span> <span class=\"function\"><span class=\"keyword\">func</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">    time.Sleep(time.Second * <span class=\"number\">2</span>)</span><br><span class=\"line\">    c1 &lt;- <span class=\"string\">&quot;result 1&quot;</span></span><br><span class=\"line\">&#125;()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">select</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">case</span> res := &lt;-c1:</span><br><span class=\"line\">    fmt.Println(res)</span><br><span class=\"line\"><span class=\"keyword\">case</span> &lt;-time.After(time.Second * <span class=\"number\">1</span>):</span><br><span class=\"line\">    fmt.Println(<span class=\"string\">&quot;timeout 1&quot;</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ol>\n</li>\n<li><ol start=\"2\">\n<li>使用 time.Since<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">startTime := time.Now()</span><br><span class=\"line\">timeout := <span class=\"number\">5</span> * time.Second</span><br><span class=\"line\"></span><br><span class=\"line\">   time.Sleep(<span class=\"number\">10</span> * time.Second)</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">if</span> time.Since(startTime) &gt; timeout &#123;</span><br><span class=\"line\">       <span class=\"keyword\">return</span> fmt.Errorf(<span class=\"string\">&quot;timeout&quot;</span>)</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure></li>\n</ol>\n</li>\n</ul>\n<h4 id=\"定时器\"><a href=\"#定时器\" class=\"headerlink\" title=\"定时器\"></a>定时器</h4><ul>\n<li><ol>\n<li>timer<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// NewTimer 创建一个 Timer，它会在最少过去时间段 d 后到期，向其自身的 C 字段发送当时的时间</span></span><br><span class=\"line\">\ttimer1 := time.NewTimer(<span class=\"number\">5</span> * time.Second)</span><br><span class=\"line\"></span><br><span class=\"line\">\tfmt.Println(<span class=\"string\">&quot;开始时间：&quot;</span>, time.Now().Format(<span class=\"string\">&quot;2006-01-02 15:04:05&quot;</span>))</span><br><span class=\"line\">\t<span class=\"keyword\">go</span> <span class=\"function\"><span class=\"keyword\">func</span><span class=\"params\">(t *time.Timer)</span></span> &#123;</span><br><span class=\"line\">\t\ttimes := <span class=\"number\">0</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> &#123;</span><br><span class=\"line\">\t\t\t&lt;-t.C</span><br><span class=\"line\">\t\t\tfmt.Println(<span class=\"string\">&quot;timer&quot;</span>, time.Now().Format(<span class=\"string\">&quot;2006-01-02 15:04:05&quot;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\ttimes++</span><br><span class=\"line\">\t\t\tfmt.Println(<span class=\"string\">&quot;调用 reset 重新设置一次timer定时器，并将时间修改为2秒&quot;</span>)</span><br><span class=\"line\">\t\t\tt.Reset(<span class=\"number\">2</span> * time.Second)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> times &gt; <span class=\"number\">3</span> &#123;</span><br><span class=\"line\">\t\t\t\tfmt.Println(<span class=\"string\">&quot;调用 stop 停止定时器&quot;</span>)</span><br><span class=\"line\">\t\t\t\tt.Stop()</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;(timer1)</span><br><span class=\"line\"></span><br><span class=\"line\">\ttime.Sleep(<span class=\"number\">30</span> * time.Second)</span><br><span class=\"line\">\tfmt.Println(<span class=\"string\">&quot;结束时间：&quot;</span>, time.Now().Format(<span class=\"string\">&quot;2006-01-02 15:04:05&quot;</span>))</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ol>\n</li>\n<li><ol start=\"2\">\n<li>ticker</li>\n</ol>\n</li>\n</ul>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\tticker1 := time.NewTicker(<span class=\"number\">5</span> * time.Second)</span><br><span class=\"line\">\t<span class=\"keyword\">defer</span> ticker1.Stop() <span class=\"comment\">// 一定要调用Stop()，回收资源</span></span><br><span class=\"line\">\t<span class=\"keyword\">go</span> <span class=\"function\"><span class=\"keyword\">func</span><span class=\"params\">(t *time.Ticker)</span></span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"comment\">// 每5秒中从chan t.C 中读取一次</span></span><br><span class=\"line\">\t\t\t&lt;-t.C</span><br><span class=\"line\">\t\t\tfmt.Println(<span class=\"string\">&quot;Ticker:&quot;</span>, time.Now().Format(<span class=\"string\">&quot;2006-01-02 15:04:05&quot;</span>))</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;(ticker1)</span><br><span class=\"line\"></span><br><span class=\"line\">\ttime.Sleep(<span class=\"number\">30</span> * time.Second)</span><br><span class=\"line\">\tfmt.Println(<span class=\"string\">&quot;ok&quot;</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"layout":"docker","title":"Dockerfile使用","date":"2023-07-27T07:34:10.000Z","_content":"\n#### 1. 一个适用于我自己的模板\n\n```dockerfile\nFROM golang:1.20 as builder\nWORKDIR /root/\nCOPY . .\nRUN GOOS=linux GOARCH=amd64 CGO_ENABLED=0 GOFLAGS=-mod=vendor go build -o hamster main.go\n\n# =================================== 分层编译 ==============================================\nFROM hub.ucloudadmin.com/uaek/alpine:3.9 AS final\n\n# 国内使用的goproxy\nENV GOPROXY=https://goproxy.cn\n\n# 设置时区\nENV TZ=Asia/Shanghai\nRUN apk add --update tzdata \\\n    && cp /usr/share/zoneinfo/$TZ /etc/localtime \\\n    && echo $TZ > /etc/timezone \\\n    && rm -rf /var/cache/apk/*\n\nWORKDIR /root/\nCOPY --from=builder /root/app .\nCOPY ./mydir/  ./mydir/\nRUN chmod +x app \\\n    && wget  https://storage.googleapis.com/kubernetes-release/release/v1.14.7/bin/linux/amd64/kubectl \\\n    && chmod +x kubectl\nEXPOSE 8080\nENTRYPOINT [\"/root/app\"]\n```\n\n#### 2. COPY vs ADD\n\n没有特殊需求情况下，建议使用COPY\n\n###### 1. ADD 会自动解压压缩文件。\n  \n\n###### 2. ADD 支持源文件URL形式。\n\n```dockerfile\nADD http://example.com/example.txt /app/\n```\n\n#### 3. CMD vs ENTRYPOINT\n\n###### 1. docker run 如果指定了命令会覆盖\n\n###### 2. 下面是等价的\n```dockerfile\nCMD [\"python\", \"app.py\"]\n```\n\n```dockerfile\nENTRYPOINT [\"python\", \"app.py\"]\n```\n\n```dockerfile\n# 由 CMD 指令指定默认的可选参数：\nENTRYPOINT [\"python\"]\nCMD [\"app.py\"]\n```","source":"_posts/docker/Dockerfile使用.md","raw":"---\nlayout: docker\ntitle: Dockerfile使用\ndate: 2023-07-27 15:34:10\ntags:\n---\n\n#### 1. 一个适用于我自己的模板\n\n```dockerfile\nFROM golang:1.20 as builder\nWORKDIR /root/\nCOPY . .\nRUN GOOS=linux GOARCH=amd64 CGO_ENABLED=0 GOFLAGS=-mod=vendor go build -o hamster main.go\n\n# =================================== 分层编译 ==============================================\nFROM hub.ucloudadmin.com/uaek/alpine:3.9 AS final\n\n# 国内使用的goproxy\nENV GOPROXY=https://goproxy.cn\n\n# 设置时区\nENV TZ=Asia/Shanghai\nRUN apk add --update tzdata \\\n    && cp /usr/share/zoneinfo/$TZ /etc/localtime \\\n    && echo $TZ > /etc/timezone \\\n    && rm -rf /var/cache/apk/*\n\nWORKDIR /root/\nCOPY --from=builder /root/app .\nCOPY ./mydir/  ./mydir/\nRUN chmod +x app \\\n    && wget  https://storage.googleapis.com/kubernetes-release/release/v1.14.7/bin/linux/amd64/kubectl \\\n    && chmod +x kubectl\nEXPOSE 8080\nENTRYPOINT [\"/root/app\"]\n```\n\n#### 2. COPY vs ADD\n\n没有特殊需求情况下，建议使用COPY\n\n###### 1. ADD 会自动解压压缩文件。\n  \n\n###### 2. ADD 支持源文件URL形式。\n\n```dockerfile\nADD http://example.com/example.txt /app/\n```\n\n#### 3. CMD vs ENTRYPOINT\n\n###### 1. docker run 如果指定了命令会覆盖\n\n###### 2. 下面是等价的\n```dockerfile\nCMD [\"python\", \"app.py\"]\n```\n\n```dockerfile\nENTRYPOINT [\"python\", \"app.py\"]\n```\n\n```dockerfile\n# 由 CMD 指令指定默认的可选参数：\nENTRYPOINT [\"python\"]\nCMD [\"app.py\"]\n```","slug":"docker/Dockerfile使用","published":1,"updated":"2023-07-27T09:53:04.474Z","_id":"clkkxowrf0000wa4wbcz82efu","comments":1,"photos":[],"link":"","content":"<h4 id=\"1-一个适用于我自己的模板\"><a href=\"#1-一个适用于我自己的模板\" class=\"headerlink\" title=\"1. 一个适用于我自己的模板\"></a>1. 一个适用于我自己的模板</h4><figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">FROM</span> golang:<span class=\"number\">1.20</span> as builder</span><br><span class=\"line\"><span class=\"keyword\">WORKDIR</span><span class=\"language-bash\"> /root/</span></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"language-bash\"> . .</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"language-bash\"> GOOS=linux GOARCH=amd64 CGO_ENABLED=0 GOFLAGS=-mod=vendor go build -o hamster main.go</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># =================================== 分层编译 ==============================================</span></span><br><span class=\"line\"><span class=\"keyword\">FROM</span> hub.ucloudadmin.com/uaek/alpine:<span class=\"number\">3.9</span> AS final</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 国内使用的goproxy</span></span><br><span class=\"line\"><span class=\"keyword\">ENV</span> GOPROXY=https://goproxy.cn</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 设置时区</span></span><br><span class=\"line\"><span class=\"keyword\">ENV</span> TZ=Asia/Shanghai</span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"language-bash\"> apk add --update tzdata \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    &amp;&amp; <span class=\"built_in\">cp</span> /usr/share/zoneinfo/<span class=\"variable\">$TZ</span> /etc/localtime \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    &amp;&amp; <span class=\"built_in\">echo</span> <span class=\"variable\">$TZ</span> &gt; /etc/timezone \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    &amp;&amp; <span class=\"built_in\">rm</span> -rf /var/cache/apk/*</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">WORKDIR</span><span class=\"language-bash\"> /root/</span></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"language-bash\"> --from=builder /root/app .</span></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"language-bash\"> ./mydir/  ./mydir/</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"language-bash\"> <span class=\"built_in\">chmod</span> +x app \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    &amp;&amp; wget  https://storage.googleapis.com/kubernetes-release/release/v1.14.7/bin/linux/amd64/kubectl \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    &amp;&amp; <span class=\"built_in\">chmod</span> +x kubectl</span></span><br><span class=\"line\"><span class=\"keyword\">EXPOSE</span> <span class=\"number\">8080</span></span><br><span class=\"line\"><span class=\"keyword\">ENTRYPOINT</span><span class=\"language-bash\"> [<span class=\"string\">&quot;/root/app&quot;</span>]</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-COPY-vs-ADD\"><a href=\"#2-COPY-vs-ADD\" class=\"headerlink\" title=\"2. COPY vs ADD\"></a>2. COPY vs ADD</h4><p>没有特殊需求情况下，建议使用COPY</p>\n<h6 id=\"1-ADD-会自动解压压缩文件。\"><a href=\"#1-ADD-会自动解压压缩文件。\" class=\"headerlink\" title=\"1. ADD 会自动解压压缩文件。\"></a>1. ADD 会自动解压压缩文件。</h6><h6 id=\"2-ADD-支持源文件URL形式。\"><a href=\"#2-ADD-支持源文件URL形式。\" class=\"headerlink\" title=\"2. ADD 支持源文件URL形式。\"></a>2. ADD 支持源文件URL形式。</h6><figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">ADD</span><span class=\"language-bash\"> http://example.com/example.txt /app/</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-CMD-vs-ENTRYPOINT\"><a href=\"#3-CMD-vs-ENTRYPOINT\" class=\"headerlink\" title=\"3. CMD vs ENTRYPOINT\"></a>3. CMD vs ENTRYPOINT</h4><h6 id=\"1-docker-run-如果指定了命令会覆盖\"><a href=\"#1-docker-run-如果指定了命令会覆盖\" class=\"headerlink\" title=\"1. docker run 如果指定了命令会覆盖\"></a>1. docker run 如果指定了命令会覆盖</h6><h6 id=\"2-下面是等价的\"><a href=\"#2-下面是等价的\" class=\"headerlink\" title=\"2. 下面是等价的\"></a>2. 下面是等价的</h6><figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CMD</span><span class=\"language-bash\"> [<span class=\"string\">&quot;python&quot;</span>, <span class=\"string\">&quot;app.py&quot;</span>]</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">ENTRYPOINT</span><span class=\"language-bash\"> [<span class=\"string\">&quot;python&quot;</span>, <span class=\"string\">&quot;app.py&quot;</span>]</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 由 CMD 指令指定默认的可选参数：</span></span><br><span class=\"line\"><span class=\"keyword\">ENTRYPOINT</span><span class=\"language-bash\"> [<span class=\"string\">&quot;python&quot;</span>]</span></span><br><span class=\"line\"><span class=\"keyword\">CMD</span><span class=\"language-bash\"> [<span class=\"string\">&quot;app.py&quot;</span>]</span></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h4 id=\"1-一个适用于我自己的模板\"><a href=\"#1-一个适用于我自己的模板\" class=\"headerlink\" title=\"1. 一个适用于我自己的模板\"></a>1. 一个适用于我自己的模板</h4><figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">FROM</span> golang:<span class=\"number\">1.20</span> as builder</span><br><span class=\"line\"><span class=\"keyword\">WORKDIR</span><span class=\"language-bash\"> /root/</span></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"language-bash\"> . .</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"language-bash\"> GOOS=linux GOARCH=amd64 CGO_ENABLED=0 GOFLAGS=-mod=vendor go build -o hamster main.go</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># =================================== 分层编译 ==============================================</span></span><br><span class=\"line\"><span class=\"keyword\">FROM</span> hub.ucloudadmin.com/uaek/alpine:<span class=\"number\">3.9</span> AS final</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 国内使用的goproxy</span></span><br><span class=\"line\"><span class=\"keyword\">ENV</span> GOPROXY=https://goproxy.cn</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 设置时区</span></span><br><span class=\"line\"><span class=\"keyword\">ENV</span> TZ=Asia/Shanghai</span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"language-bash\"> apk add --update tzdata \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    &amp;&amp; <span class=\"built_in\">cp</span> /usr/share/zoneinfo/<span class=\"variable\">$TZ</span> /etc/localtime \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    &amp;&amp; <span class=\"built_in\">echo</span> <span class=\"variable\">$TZ</span> &gt; /etc/timezone \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    &amp;&amp; <span class=\"built_in\">rm</span> -rf /var/cache/apk/*</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">WORKDIR</span><span class=\"language-bash\"> /root/</span></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"language-bash\"> --from=builder /root/app .</span></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"language-bash\"> ./mydir/  ./mydir/</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"language-bash\"> <span class=\"built_in\">chmod</span> +x app \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    &amp;&amp; wget  https://storage.googleapis.com/kubernetes-release/release/v1.14.7/bin/linux/amd64/kubectl \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    &amp;&amp; <span class=\"built_in\">chmod</span> +x kubectl</span></span><br><span class=\"line\"><span class=\"keyword\">EXPOSE</span> <span class=\"number\">8080</span></span><br><span class=\"line\"><span class=\"keyword\">ENTRYPOINT</span><span class=\"language-bash\"> [<span class=\"string\">&quot;/root/app&quot;</span>]</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-COPY-vs-ADD\"><a href=\"#2-COPY-vs-ADD\" class=\"headerlink\" title=\"2. COPY vs ADD\"></a>2. COPY vs ADD</h4><p>没有特殊需求情况下，建议使用COPY</p>\n<h6 id=\"1-ADD-会自动解压压缩文件。\"><a href=\"#1-ADD-会自动解压压缩文件。\" class=\"headerlink\" title=\"1. ADD 会自动解压压缩文件。\"></a>1. ADD 会自动解压压缩文件。</h6><h6 id=\"2-ADD-支持源文件URL形式。\"><a href=\"#2-ADD-支持源文件URL形式。\" class=\"headerlink\" title=\"2. ADD 支持源文件URL形式。\"></a>2. ADD 支持源文件URL形式。</h6><figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">ADD</span><span class=\"language-bash\"> http://example.com/example.txt /app/</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-CMD-vs-ENTRYPOINT\"><a href=\"#3-CMD-vs-ENTRYPOINT\" class=\"headerlink\" title=\"3. CMD vs ENTRYPOINT\"></a>3. CMD vs ENTRYPOINT</h4><h6 id=\"1-docker-run-如果指定了命令会覆盖\"><a href=\"#1-docker-run-如果指定了命令会覆盖\" class=\"headerlink\" title=\"1. docker run 如果指定了命令会覆盖\"></a>1. docker run 如果指定了命令会覆盖</h6><h6 id=\"2-下面是等价的\"><a href=\"#2-下面是等价的\" class=\"headerlink\" title=\"2. 下面是等价的\"></a>2. 下面是等价的</h6><figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CMD</span><span class=\"language-bash\"> [<span class=\"string\">&quot;python&quot;</span>, <span class=\"string\">&quot;app.py&quot;</span>]</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">ENTRYPOINT</span><span class=\"language-bash\"> [<span class=\"string\">&quot;python&quot;</span>, <span class=\"string\">&quot;app.py&quot;</span>]</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 由 CMD 指令指定默认的可选参数：</span></span><br><span class=\"line\"><span class=\"keyword\">ENTRYPOINT</span><span class=\"language-bash\"> [<span class=\"string\">&quot;python&quot;</span>]</span></span><br><span class=\"line\"><span class=\"keyword\">CMD</span><span class=\"language-bash\"> [<span class=\"string\">&quot;app.py&quot;</span>]</span></span><br></pre></td></tr></table></figure>"},{"layout":"golang","title":"golang细节","date":"2023-07-29T05:20:35.000Z","_content":"\n### 目录\n \n[1. 结构体打印时，%v 和 %+v 的区别](#1)\n[2. new和make的区别](#2)\n[3. slice扩容机制？](#3)\n\n \n<p id=\"1\"></p>\n \n#### 结构体打印时，%v 和 %+v 的区别\n```go\nfunc printStruct(){\n\tpeople := People{\n\t\tName: \"lisi\",\n\t\tAge:  18,\n\t}\n\tfmt.Printf(\"%v\\n\", people)\n\tfmt.Printf(\"%+v\\n\", people)\n\tfmt.Printf(\"%#v\\n\", people)\n}\n// 输出:\n// {lisi 18}\n// {Name:lisi Age:18}\n// People{Name:\"lisi\", Age:18}\n```\n\n<p id=\"2\"></p>\n \n#### new 和 make的区别\n\n* new只用于分配内存，返回一个指向地址的指针。它为每个新类型分配一片内存，初始化为0且返回类型*T的内存地址，它相当于&T{}\n* make只可用于slice,map,channel的初始化,返回的是引用。\n\n<p id=\"3\"></p>\n\n#### slice扩容机制？\nGo <= 1.17\n\n如果当前容量小于1024，则判断所需容量是否大于原来容量2倍，如果大于，当前容量加上所需容量；否则当前容量乘2。\n\n如果当前容量大于1024，则每次按照1.25倍速度递增容量，也就是每次加上cap/4。\n\nGo1.18之后，引入了新的扩容规则：浅谈 Go 1.18.1的切片扩容机制","source":"_posts/golang/golang细节.md","raw":"---\nlayout: golang\ntitle: golang细节\ndate: 2023-07-29 13:20:35\ntags: golang\n---\n\n### 目录\n \n[1. 结构体打印时，%v 和 %+v 的区别](#1)\n[2. new和make的区别](#2)\n[3. slice扩容机制？](#3)\n\n \n<p id=\"1\"></p>\n \n#### 结构体打印时，%v 和 %+v 的区别\n```go\nfunc printStruct(){\n\tpeople := People{\n\t\tName: \"lisi\",\n\t\tAge:  18,\n\t}\n\tfmt.Printf(\"%v\\n\", people)\n\tfmt.Printf(\"%+v\\n\", people)\n\tfmt.Printf(\"%#v\\n\", people)\n}\n// 输出:\n// {lisi 18}\n// {Name:lisi Age:18}\n// People{Name:\"lisi\", Age:18}\n```\n\n<p id=\"2\"></p>\n \n#### new 和 make的区别\n\n* new只用于分配内存，返回一个指向地址的指针。它为每个新类型分配一片内存，初始化为0且返回类型*T的内存地址，它相当于&T{}\n* make只可用于slice,map,channel的初始化,返回的是引用。\n\n<p id=\"3\"></p>\n\n#### slice扩容机制？\nGo <= 1.17\n\n如果当前容量小于1024，则判断所需容量是否大于原来容量2倍，如果大于，当前容量加上所需容量；否则当前容量乘2。\n\n如果当前容量大于1024，则每次按照1.25倍速度递增容量，也就是每次加上cap/4。\n\nGo1.18之后，引入了新的扩容规则：浅谈 Go 1.18.1的切片扩容机制","slug":"golang/golang细节","published":1,"updated":"2023-07-29T05:59:21.089Z","_id":"clknkuzvc0000yu4wfq6b90xp","comments":1,"photos":[],"link":"","content":"<h3 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h3><p><a href=\"#1\">1. 结构体打印时，%v 和 %+v 的区别</a><br><a href=\"#2\">2. new和make的区别</a><br><a href=\"#3\">3. slice扩容机制？</a></p>\n<p id=\"1\"></p>\n \n<h4 id=\"结构体打印时，-v-和-v-的区别\"><a href=\"#结构体打印时，-v-和-v-的区别\" class=\"headerlink\" title=\"结构体打印时，%v 和 %+v 的区别\"></a>结构体打印时，%v 和 %+v 的区别</h4><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">printStruct</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\tpeople := People&#123;</span><br><span class=\"line\">\t\tName: <span class=\"string\">&quot;lisi&quot;</span>,</span><br><span class=\"line\">\t\tAge:  <span class=\"number\">18</span>,</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tfmt.Printf(<span class=\"string\">&quot;%v\\n&quot;</span>, people)</span><br><span class=\"line\">\tfmt.Printf(<span class=\"string\">&quot;%+v\\n&quot;</span>, people)</span><br><span class=\"line\">\tfmt.Printf(<span class=\"string\">&quot;%#v\\n&quot;</span>, people)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 输出:</span></span><br><span class=\"line\"><span class=\"comment\">// &#123;lisi 18&#125;</span></span><br><span class=\"line\"><span class=\"comment\">// &#123;Name:lisi Age:18&#125;</span></span><br><span class=\"line\"><span class=\"comment\">// People&#123;Name:&quot;lisi&quot;, Age:18&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p id=\"2\"></p>\n \n<h4 id=\"new-和-make的区别\"><a href=\"#new-和-make的区别\" class=\"headerlink\" title=\"new 和 make的区别\"></a>new 和 make的区别</h4><ul>\n<li>new只用于分配内存，返回一个指向地址的指针。它为每个新类型分配一片内存，初始化为0且返回类型*T的内存地址，它相当于&amp;T{}</li>\n<li>make只可用于slice,map,channel的初始化,返回的是引用。</li>\n</ul>\n<p id=\"3\"></p>\n\n<h4 id=\"slice扩容机制？\"><a href=\"#slice扩容机制？\" class=\"headerlink\" title=\"slice扩容机制？\"></a>slice扩容机制？</h4><p>Go &lt;&#x3D; 1.17</p>\n<p>如果当前容量小于1024，则判断所需容量是否大于原来容量2倍，如果大于，当前容量加上所需容量；否则当前容量乘2。</p>\n<p>如果当前容量大于1024，则每次按照1.25倍速度递增容量，也就是每次加上cap&#x2F;4。</p>\n<p>Go1.18之后，引入了新的扩容规则：浅谈 Go 1.18.1的切片扩容机制</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h3><p><a href=\"#1\">1. 结构体打印时，%v 和 %+v 的区别</a><br><a href=\"#2\">2. new和make的区别</a><br><a href=\"#3\">3. slice扩容机制？</a></p>\n<p id=\"1\"></p>\n \n<h4 id=\"结构体打印时，-v-和-v-的区别\"><a href=\"#结构体打印时，-v-和-v-的区别\" class=\"headerlink\" title=\"结构体打印时，%v 和 %+v 的区别\"></a>结构体打印时，%v 和 %+v 的区别</h4><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">printStruct</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\tpeople := People&#123;</span><br><span class=\"line\">\t\tName: <span class=\"string\">&quot;lisi&quot;</span>,</span><br><span class=\"line\">\t\tAge:  <span class=\"number\">18</span>,</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tfmt.Printf(<span class=\"string\">&quot;%v\\n&quot;</span>, people)</span><br><span class=\"line\">\tfmt.Printf(<span class=\"string\">&quot;%+v\\n&quot;</span>, people)</span><br><span class=\"line\">\tfmt.Printf(<span class=\"string\">&quot;%#v\\n&quot;</span>, people)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 输出:</span></span><br><span class=\"line\"><span class=\"comment\">// &#123;lisi 18&#125;</span></span><br><span class=\"line\"><span class=\"comment\">// &#123;Name:lisi Age:18&#125;</span></span><br><span class=\"line\"><span class=\"comment\">// People&#123;Name:&quot;lisi&quot;, Age:18&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p id=\"2\"></p>\n \n<h4 id=\"new-和-make的区别\"><a href=\"#new-和-make的区别\" class=\"headerlink\" title=\"new 和 make的区别\"></a>new 和 make的区别</h4><ul>\n<li>new只用于分配内存，返回一个指向地址的指针。它为每个新类型分配一片内存，初始化为0且返回类型*T的内存地址，它相当于&amp;T{}</li>\n<li>make只可用于slice,map,channel的初始化,返回的是引用。</li>\n</ul>\n<p id=\"3\"></p>\n\n<h4 id=\"slice扩容机制？\"><a href=\"#slice扩容机制？\" class=\"headerlink\" title=\"slice扩容机制？\"></a>slice扩容机制？</h4><p>Go &lt;&#x3D; 1.17</p>\n<p>如果当前容量小于1024，则判断所需容量是否大于原来容量2倍，如果大于，当前容量加上所需容量；否则当前容量乘2。</p>\n<p>如果当前容量大于1024，则每次按照1.25倍速度递增容量，也就是每次加上cap&#x2F;4。</p>\n<p>Go1.18之后，引入了新的扩容规则：浅谈 Go 1.18.1的切片扩容机制</p>\n"},{"layout":"golang","title":"viper配置文件","date":"2023-07-29T05:08:23.000Z","_content":"\n#### 配置文件\n```yaml\nmysql:\n  url: 127.0.0.1\n  port: 3306\nisvalid: true\n```\n\n#### 代码示例\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"github.com/spf13/viper\"\n)\n\nfunc main() {\n\t// 设置配置文件的名字\n\tviper.SetConfigName(\"config\")\n\t// 设置配置文件的类型\n\tviper.SetConfigType(\"yaml\")\n\t// 添加配置文件的路径，指定 config 目录下寻找\n\tviper.AddConfigPath(\"./config\")\n\t// 寻找配置文件并读取\n\terr := viper.ReadInConfig()\n\tif err != nil {\n\t\tpanic(fmt.Errorf(\"fatal error config file: %w\", err))\n\t}\n\tfmt.Println(viper.Get(\"mysql\"))\n\tfmt.Println(viper.GetString(\"mysql.url\"))\n\tfmt.Println(viper.GetInt(\"mysql.port\"))\n\tfmt.Println(viper.GetBool(\"isvalid\"))\n}\n```","source":"_posts/golang/viper配置文件.md","raw":"---\nlayout: golang\ntitle: viper配置文件\ndate: 2023-07-29 13:08:23\ntags: golang\n---\n\n#### 配置文件\n```yaml\nmysql:\n  url: 127.0.0.1\n  port: 3306\nisvalid: true\n```\n\n#### 代码示例\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"github.com/spf13/viper\"\n)\n\nfunc main() {\n\t// 设置配置文件的名字\n\tviper.SetConfigName(\"config\")\n\t// 设置配置文件的类型\n\tviper.SetConfigType(\"yaml\")\n\t// 添加配置文件的路径，指定 config 目录下寻找\n\tviper.AddConfigPath(\"./config\")\n\t// 寻找配置文件并读取\n\terr := viper.ReadInConfig()\n\tif err != nil {\n\t\tpanic(fmt.Errorf(\"fatal error config file: %w\", err))\n\t}\n\tfmt.Println(viper.Get(\"mysql\"))\n\tfmt.Println(viper.GetString(\"mysql.url\"))\n\tfmt.Println(viper.GetInt(\"mysql.port\"))\n\tfmt.Println(viper.GetBool(\"isvalid\"))\n}\n```","slug":"golang/viper配置文件","published":1,"updated":"2023-07-29T05:10:06.008Z","comments":1,"photos":[],"link":"","_id":"clknkuzvd0002yu4wdxz3hh7x","content":"<h4 id=\"配置文件\"><a href=\"#配置文件\" class=\"headerlink\" title=\"配置文件\"></a>配置文件</h4><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">mysql:</span></span><br><span class=\"line\">  <span class=\"attr\">url:</span> <span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span></span><br><span class=\"line\">  <span class=\"attr\">port:</span> <span class=\"number\">3306</span></span><br><span class=\"line\"><span class=\"attr\">isvalid:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"代码示例\"><a href=\"#代码示例\" class=\"headerlink\" title=\"代码示例\"></a>代码示例</h4><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">\t<span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;github.com/spf13/viper&quot;</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// 设置配置文件的名字</span></span><br><span class=\"line\">\tviper.SetConfigName(<span class=\"string\">&quot;config&quot;</span>)</span><br><span class=\"line\">\t<span class=\"comment\">// 设置配置文件的类型</span></span><br><span class=\"line\">\tviper.SetConfigType(<span class=\"string\">&quot;yaml&quot;</span>)</span><br><span class=\"line\">\t<span class=\"comment\">// 添加配置文件的路径，指定 config 目录下寻找</span></span><br><span class=\"line\">\tviper.AddConfigPath(<span class=\"string\">&quot;./config&quot;</span>)</span><br><span class=\"line\">\t<span class=\"comment\">// 寻找配置文件并读取</span></span><br><span class=\"line\">\terr := viper.ReadInConfig()</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">panic</span>(fmt.Errorf(<span class=\"string\">&quot;fatal error config file: %w&quot;</span>, err))</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tfmt.Println(viper.Get(<span class=\"string\">&quot;mysql&quot;</span>))</span><br><span class=\"line\">\tfmt.Println(viper.GetString(<span class=\"string\">&quot;mysql.url&quot;</span>))</span><br><span class=\"line\">\tfmt.Println(viper.GetInt(<span class=\"string\">&quot;mysql.port&quot;</span>))</span><br><span class=\"line\">\tfmt.Println(viper.GetBool(<span class=\"string\">&quot;isvalid&quot;</span>))</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h4 id=\"配置文件\"><a href=\"#配置文件\" class=\"headerlink\" title=\"配置文件\"></a>配置文件</h4><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">mysql:</span></span><br><span class=\"line\">  <span class=\"attr\">url:</span> <span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span></span><br><span class=\"line\">  <span class=\"attr\">port:</span> <span class=\"number\">3306</span></span><br><span class=\"line\"><span class=\"attr\">isvalid:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"代码示例\"><a href=\"#代码示例\" class=\"headerlink\" title=\"代码示例\"></a>代码示例</h4><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">\t<span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;github.com/spf13/viper&quot;</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// 设置配置文件的名字</span></span><br><span class=\"line\">\tviper.SetConfigName(<span class=\"string\">&quot;config&quot;</span>)</span><br><span class=\"line\">\t<span class=\"comment\">// 设置配置文件的类型</span></span><br><span class=\"line\">\tviper.SetConfigType(<span class=\"string\">&quot;yaml&quot;</span>)</span><br><span class=\"line\">\t<span class=\"comment\">// 添加配置文件的路径，指定 config 目录下寻找</span></span><br><span class=\"line\">\tviper.AddConfigPath(<span class=\"string\">&quot;./config&quot;</span>)</span><br><span class=\"line\">\t<span class=\"comment\">// 寻找配置文件并读取</span></span><br><span class=\"line\">\terr := viper.ReadInConfig()</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">panic</span>(fmt.Errorf(<span class=\"string\">&quot;fatal error config file: %w&quot;</span>, err))</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tfmt.Println(viper.Get(<span class=\"string\">&quot;mysql&quot;</span>))</span><br><span class=\"line\">\tfmt.Println(viper.GetString(<span class=\"string\">&quot;mysql.url&quot;</span>))</span><br><span class=\"line\">\tfmt.Println(viper.GetInt(<span class=\"string\">&quot;mysql.port&quot;</span>))</span><br><span class=\"line\">\tfmt.Println(viper.GetBool(<span class=\"string\">&quot;isvalid&quot;</span>))</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"layout":"k8s","title":"安装kubectl快捷命令","date":"2023-07-23T07:12:24.000Z","_content":"\n#### 简介\n\nk8s 的命令不算长，也很好记，但身为一个偷懒者，我想我可以更简洁、高效。\n\n默认快捷命令保存在 ～/.bash_profile 文件。\n\n# 安装\n\n```sh\ncurl -sfL https://raw.githubusercontent.com/oldwang12/oldwang12.github.io/master/source/shells/k8s_alias_install.sh | sh -\n```\n\n###### 如果你想指定保存文件\n\n```sh\ncurl -sfL https://raw.githubusercontent.com/oldwang12/oldwang12.github.io/master/source/shells/k8s_alias_install.sh | bash -s ~/.zshrc\n```\n\n执行完记得source <～/FILE_NAME>，例如：\n\n```\nsource ～/.bash_profile\n```\n\n#### 测试\n\n```sh\n# 获取pod\n$ p\nNAME                              READY   STATUS    RESTARTS   AGE\ntest-deployment-d5b769945-q29d4   1/1     Running   0          6d7h\n\n# 进入pod\n$ ke test-deployment-d5b769945-q29d4\nkubectl exec [POD] [COMMAND] is DEPRECATED and will be removed in a future version. Use kubectl exec [POD] -- [COMMAND] instead.\n\n# 查看日志\n$ kl\n\n# 查看帮助\n$ kh\nalias k=\"kubectl\"\nalias kk=\"kubectl -n kube-system\"\nalias kl=\"kubectl logs -f\"\nalias kd=\"kubectl describe\"\nalias p=\"kubectl get po\"\nalias svc=\"kubectl get svc\"\nalias no=\"kubectl get no\"\nalias pvc=\"kubectl get pvc\"\nalias sa=\"kubectl get sa\"\nalias ds=\"kubectl get ds\"\nalias rs=\"kubectl get rs\"\nalias ep=\"kubectl get ep\"\nke=kubectl exec -it POD_NAME sh\n```\n\n#### kubens、kubectx\n\n你可以通过修改环境变量更改 fzf 的背景颜色和字体颜色\n\n```sh\n# 颜色对照表参考: https://github.com/medikoo/cli-color\nexport KUBECTX_CURRENT_FGCOLOR=$(tput setaf 6) # blue text\nexport KUBECTX_CURRENT_BGCOLOR=$(tput setab 7) # white background\n```\n# 卸载\n```sh\ncurl -sfL https://raw.githubusercontent.com/oldwang12/oldwang12.github.io/master/source/shells/k8s_alias_uninstall.sh | sh -\n```\n\n如果你的文件不是 ～/.bashrc，需要替换为对应文件，以 ~/.zshrc 为例\n\n```sh\ncurl -sfL https://raw.githubusercontent.com/oldwang12/oldwang12.github.io/master/source/shells/k8s_alias_uninstall.sh | bash -s ~/.zshrc\n```\n\n执行完记得source <～/FILE_NAME>，例如：\n\n```\nsource ～/.bashrc\n```","source":"_posts/k8s/安装kubectl快捷命令.md","raw":"---\nlayout: k8s\ntitle: 安装kubectl快捷命令\ndate: 2023-07-23 15:12:24\ntags: k8s\n---\n\n#### 简介\n\nk8s 的命令不算长，也很好记，但身为一个偷懒者，我想我可以更简洁、高效。\n\n默认快捷命令保存在 ～/.bash_profile 文件。\n\n# 安装\n\n```sh\ncurl -sfL https://raw.githubusercontent.com/oldwang12/oldwang12.github.io/master/source/shells/k8s_alias_install.sh | sh -\n```\n\n###### 如果你想指定保存文件\n\n```sh\ncurl -sfL https://raw.githubusercontent.com/oldwang12/oldwang12.github.io/master/source/shells/k8s_alias_install.sh | bash -s ~/.zshrc\n```\n\n执行完记得source <～/FILE_NAME>，例如：\n\n```\nsource ～/.bash_profile\n```\n\n#### 测试\n\n```sh\n# 获取pod\n$ p\nNAME                              READY   STATUS    RESTARTS   AGE\ntest-deployment-d5b769945-q29d4   1/1     Running   0          6d7h\n\n# 进入pod\n$ ke test-deployment-d5b769945-q29d4\nkubectl exec [POD] [COMMAND] is DEPRECATED and will be removed in a future version. Use kubectl exec [POD] -- [COMMAND] instead.\n\n# 查看日志\n$ kl\n\n# 查看帮助\n$ kh\nalias k=\"kubectl\"\nalias kk=\"kubectl -n kube-system\"\nalias kl=\"kubectl logs -f\"\nalias kd=\"kubectl describe\"\nalias p=\"kubectl get po\"\nalias svc=\"kubectl get svc\"\nalias no=\"kubectl get no\"\nalias pvc=\"kubectl get pvc\"\nalias sa=\"kubectl get sa\"\nalias ds=\"kubectl get ds\"\nalias rs=\"kubectl get rs\"\nalias ep=\"kubectl get ep\"\nke=kubectl exec -it POD_NAME sh\n```\n\n#### kubens、kubectx\n\n你可以通过修改环境变量更改 fzf 的背景颜色和字体颜色\n\n```sh\n# 颜色对照表参考: https://github.com/medikoo/cli-color\nexport KUBECTX_CURRENT_FGCOLOR=$(tput setaf 6) # blue text\nexport KUBECTX_CURRENT_BGCOLOR=$(tput setab 7) # white background\n```\n# 卸载\n```sh\ncurl -sfL https://raw.githubusercontent.com/oldwang12/oldwang12.github.io/master/source/shells/k8s_alias_uninstall.sh | sh -\n```\n\n如果你的文件不是 ～/.bashrc，需要替换为对应文件，以 ~/.zshrc 为例\n\n```sh\ncurl -sfL https://raw.githubusercontent.com/oldwang12/oldwang12.github.io/master/source/shells/k8s_alias_uninstall.sh | bash -s ~/.zshrc\n```\n\n执行完记得source <～/FILE_NAME>，例如：\n\n```\nsource ～/.bashrc\n```","slug":"k8s/安装kubectl快捷命令","published":1,"updated":"2023-07-28T10:33:58.434Z","comments":1,"photos":[],"link":"","_id":"clknkuzvd0003yu4wdiyu6ntn","content":"<h4 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h4><p>k8s 的命令不算长，也很好记，但身为一个偷懒者，我想我可以更简洁、高效。</p>\n<p>默认快捷命令保存在 ～&#x2F;.bash_profile 文件。</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -sfL https://raw.githubusercontent.com/oldwang12/oldwang12.github.io/master/source/shells/k8s_alias_install.sh | sh -</span><br></pre></td></tr></table></figure>\n\n<h6 id=\"如果你想指定保存文件\"><a href=\"#如果你想指定保存文件\" class=\"headerlink\" title=\"如果你想指定保存文件\"></a>如果你想指定保存文件</h6><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -sfL https://raw.githubusercontent.com/oldwang12/oldwang12.github.io/master/source/shells/k8s_alias_install.sh | bash -s ~/.zshrc</span><br></pre></td></tr></table></figure>\n\n<p>执行完记得source &lt;～&#x2F;FILE_NAME&gt;，例如：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">source ～/.bash_profile</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h4><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 获取pod</span></span><br><span class=\"line\">$ p</span><br><span class=\"line\">NAME                              READY   STATUS    RESTARTS   AGE</span><br><span class=\"line\">test-deployment-d5b769945-q29d4   1/1     Running   0          6d7h</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 进入pod</span></span><br><span class=\"line\">$ ke test-deployment-d5b769945-q29d4</span><br><span class=\"line\">kubectl <span class=\"built_in\">exec</span> [POD] [COMMAND] is DEPRECATED and will be removed <span class=\"keyword\">in</span> a future version. Use kubectl <span class=\"built_in\">exec</span> [POD] -- [COMMAND] instead.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看日志</span></span><br><span class=\"line\">$ kl</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看帮助</span></span><br><span class=\"line\">$ kh</span><br><span class=\"line\"><span class=\"built_in\">alias</span> k=<span class=\"string\">&quot;kubectl&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> kk=<span class=\"string\">&quot;kubectl -n kube-system&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> kl=<span class=\"string\">&quot;kubectl logs -f&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> kd=<span class=\"string\">&quot;kubectl describe&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> p=<span class=\"string\">&quot;kubectl get po&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> svc=<span class=\"string\">&quot;kubectl get svc&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> no=<span class=\"string\">&quot;kubectl get no&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> pvc=<span class=\"string\">&quot;kubectl get pvc&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> sa=<span class=\"string\">&quot;kubectl get sa&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> ds=<span class=\"string\">&quot;kubectl get ds&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> rs=<span class=\"string\">&quot;kubectl get rs&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> ep=<span class=\"string\">&quot;kubectl get ep&quot;</span></span><br><span class=\"line\">ke=kubectl <span class=\"built_in\">exec</span> -it POD_NAME sh</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"kubens、kubectx\"><a href=\"#kubens、kubectx\" class=\"headerlink\" title=\"kubens、kubectx\"></a>kubens、kubectx</h4><p>你可以通过修改环境变量更改 fzf 的背景颜色和字体颜色</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 颜色对照表参考: https://github.com/medikoo/cli-color</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> KUBECTX_CURRENT_FGCOLOR=$(tput setaf 6) <span class=\"comment\"># blue text</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> KUBECTX_CURRENT_BGCOLOR=$(tput setab 7) <span class=\"comment\"># white background</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"卸载\"><a href=\"#卸载\" class=\"headerlink\" title=\"卸载\"></a>卸载</h1><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -sfL https://raw.githubusercontent.com/oldwang12/oldwang12.github.io/master/source/shells/k8s_alias_uninstall.sh | sh -</span><br></pre></td></tr></table></figure>\n\n<p>如果你的文件不是 ～&#x2F;.bashrc，需要替换为对应文件，以 ~&#x2F;.zshrc 为例</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -sfL https://raw.githubusercontent.com/oldwang12/oldwang12.github.io/master/source/shells/k8s_alias_uninstall.sh | bash -s ~/.zshrc</span><br></pre></td></tr></table></figure>\n\n<p>执行完记得source &lt;～&#x2F;FILE_NAME&gt;，例如：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">source ～/.bashrc</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h4 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h4><p>k8s 的命令不算长，也很好记，但身为一个偷懒者，我想我可以更简洁、高效。</p>\n<p>默认快捷命令保存在 ～&#x2F;.bash_profile 文件。</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -sfL https://raw.githubusercontent.com/oldwang12/oldwang12.github.io/master/source/shells/k8s_alias_install.sh | sh -</span><br></pre></td></tr></table></figure>\n\n<h6 id=\"如果你想指定保存文件\"><a href=\"#如果你想指定保存文件\" class=\"headerlink\" title=\"如果你想指定保存文件\"></a>如果你想指定保存文件</h6><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -sfL https://raw.githubusercontent.com/oldwang12/oldwang12.github.io/master/source/shells/k8s_alias_install.sh | bash -s ~/.zshrc</span><br></pre></td></tr></table></figure>\n\n<p>执行完记得source &lt;～&#x2F;FILE_NAME&gt;，例如：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">source ～/.bash_profile</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h4><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 获取pod</span></span><br><span class=\"line\">$ p</span><br><span class=\"line\">NAME                              READY   STATUS    RESTARTS   AGE</span><br><span class=\"line\">test-deployment-d5b769945-q29d4   1/1     Running   0          6d7h</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 进入pod</span></span><br><span class=\"line\">$ ke test-deployment-d5b769945-q29d4</span><br><span class=\"line\">kubectl <span class=\"built_in\">exec</span> [POD] [COMMAND] is DEPRECATED and will be removed <span class=\"keyword\">in</span> a future version. Use kubectl <span class=\"built_in\">exec</span> [POD] -- [COMMAND] instead.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看日志</span></span><br><span class=\"line\">$ kl</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看帮助</span></span><br><span class=\"line\">$ kh</span><br><span class=\"line\"><span class=\"built_in\">alias</span> k=<span class=\"string\">&quot;kubectl&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> kk=<span class=\"string\">&quot;kubectl -n kube-system&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> kl=<span class=\"string\">&quot;kubectl logs -f&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> kd=<span class=\"string\">&quot;kubectl describe&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> p=<span class=\"string\">&quot;kubectl get po&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> svc=<span class=\"string\">&quot;kubectl get svc&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> no=<span class=\"string\">&quot;kubectl get no&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> pvc=<span class=\"string\">&quot;kubectl get pvc&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> sa=<span class=\"string\">&quot;kubectl get sa&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> ds=<span class=\"string\">&quot;kubectl get ds&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> rs=<span class=\"string\">&quot;kubectl get rs&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> ep=<span class=\"string\">&quot;kubectl get ep&quot;</span></span><br><span class=\"line\">ke=kubectl <span class=\"built_in\">exec</span> -it POD_NAME sh</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"kubens、kubectx\"><a href=\"#kubens、kubectx\" class=\"headerlink\" title=\"kubens、kubectx\"></a>kubens、kubectx</h4><p>你可以通过修改环境变量更改 fzf 的背景颜色和字体颜色</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 颜色对照表参考: https://github.com/medikoo/cli-color</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> KUBECTX_CURRENT_FGCOLOR=$(tput setaf 6) <span class=\"comment\"># blue text</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> KUBECTX_CURRENT_BGCOLOR=$(tput setab 7) <span class=\"comment\"># white background</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"卸载\"><a href=\"#卸载\" class=\"headerlink\" title=\"卸载\"></a>卸载</h1><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -sfL https://raw.githubusercontent.com/oldwang12/oldwang12.github.io/master/source/shells/k8s_alias_uninstall.sh | sh -</span><br></pre></td></tr></table></figure>\n\n<p>如果你的文件不是 ～&#x2F;.bashrc，需要替换为对应文件，以 ~&#x2F;.zshrc 为例</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -sfL https://raw.githubusercontent.com/oldwang12/oldwang12.github.io/master/source/shells/k8s_alias_uninstall.sh | bash -s ~/.zshrc</span><br></pre></td></tr></table></figure>\n\n<p>执行完记得source &lt;～&#x2F;FILE_NAME&gt;，例如：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">source ～/.bashrc</span><br></pre></td></tr></table></figure>"},{"layout":"工具","title":"xui客户端配置","date":"2023-07-28T07:46:40.000Z","_content":"\n注意: 只适用于linux环境，下载 [v2ray-core](https://github.com/v2ray/v2ray-core/releases)，解压后替换 config.yaml 如下。执行 ./v2ray\n```yaml\n{\n    \"log\": {\n        \"loglevel\": \"warning\"\n    },\n    \"routing\": {\n        \"domainStrategy\": \"AsIs\",\n        \"rules\": [\n            {\n                \"ip\": [\n                    \"geoip:private\"\n                ],\n                \"outboundTag\": \"direct\",\n                \"type\": \"field\"\n            }\n        ]\n    },\n    \"inbounds\": [\n        {\n            \"port\": 1080,\n            \"protocol\": \"socks\",\n            \"settings\": {\n                \"auth\": \"noauth\",\n                \"udp\": true\n            },\n            \"tag\": \"socks\"\n        }\n    ],\n    \"outbounds\": [\n        {\n            \"protocol\": \"vmess\",\n            \"settings\": {\n                \"vnext\": [\n                    {\n                        \"users\": [\n                            {\n                                \"id\": \"<uuid>\"\n                            }\n                        ],\n                        \"port\": <服务端端口>,\n                        \"address\": \"<服务端IP>\"\n                    }\n                ]\n            }\n        },\n        {\n            \"protocol\": \"freedom\",\n            \"tag\": \"direct\"\n        }\n    ]\n}\n```","source":"_posts/工具/xui客户端配置.md","raw":"---\nlayout: 工具\ntitle: xui客户端配置\ndate: 2023-07-28 15:46:40\ntags: 工具\n---\n\n注意: 只适用于linux环境，下载 [v2ray-core](https://github.com/v2ray/v2ray-core/releases)，解压后替换 config.yaml 如下。执行 ./v2ray\n```yaml\n{\n    \"log\": {\n        \"loglevel\": \"warning\"\n    },\n    \"routing\": {\n        \"domainStrategy\": \"AsIs\",\n        \"rules\": [\n            {\n                \"ip\": [\n                    \"geoip:private\"\n                ],\n                \"outboundTag\": \"direct\",\n                \"type\": \"field\"\n            }\n        ]\n    },\n    \"inbounds\": [\n        {\n            \"port\": 1080,\n            \"protocol\": \"socks\",\n            \"settings\": {\n                \"auth\": \"noauth\",\n                \"udp\": true\n            },\n            \"tag\": \"socks\"\n        }\n    ],\n    \"outbounds\": [\n        {\n            \"protocol\": \"vmess\",\n            \"settings\": {\n                \"vnext\": [\n                    {\n                        \"users\": [\n                            {\n                                \"id\": \"<uuid>\"\n                            }\n                        ],\n                        \"port\": <服务端端口>,\n                        \"address\": \"<服务端IP>\"\n                    }\n                ]\n            }\n        },\n        {\n            \"protocol\": \"freedom\",\n            \"tag\": \"direct\"\n        }\n    ]\n}\n```","slug":"工具/xui客户端配置","published":1,"updated":"2023-07-29T05:47:42.238Z","_id":"clknkuzvd0005yu4wccopdadh","comments":1,"photos":[],"link":"","content":"<p>注意: 只适用于linux环境，下载 <a href=\"https://github.com/v2ray/v2ray-core/releases\">v2ray-core</a>，解压后替换 config.yaml 如下。执行 .&#x2F;v2ray</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">&quot;log&quot;:</span> &#123;</span><br><span class=\"line\">        <span class=\"attr\">&quot;loglevel&quot;:</span> <span class=\"string\">&quot;warning&quot;</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">&quot;routing&quot;:</span> &#123;</span><br><span class=\"line\">        <span class=\"attr\">&quot;domainStrategy&quot;:</span> <span class=\"string\">&quot;AsIs&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;rules&quot;:</span> [</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"attr\">&quot;ip&quot;:</span> [</span><br><span class=\"line\">                    <span class=\"string\">&quot;geoip:private&quot;</span></span><br><span class=\"line\">                ],</span><br><span class=\"line\">                <span class=\"attr\">&quot;outboundTag&quot;:</span> <span class=\"string\">&quot;direct&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;type&quot;:</span> <span class=\"string\">&quot;field&quot;</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        ]</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">&quot;inbounds&quot;:</span> [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"attr\">&quot;port&quot;:</span> <span class=\"number\">1080</span>,</span><br><span class=\"line\">            <span class=\"attr\">&quot;protocol&quot;:</span> <span class=\"string\">&quot;socks&quot;</span>,</span><br><span class=\"line\">            <span class=\"attr\">&quot;settings&quot;:</span> &#123;</span><br><span class=\"line\">                <span class=\"attr\">&quot;auth&quot;:</span> <span class=\"string\">&quot;noauth&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;udp&quot;:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            <span class=\"attr\">&quot;tag&quot;:</span> <span class=\"string\">&quot;socks&quot;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    ],</span><br><span class=\"line\">    <span class=\"attr\">&quot;outbounds&quot;:</span> [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"attr\">&quot;protocol&quot;:</span> <span class=\"string\">&quot;vmess&quot;</span>,</span><br><span class=\"line\">            <span class=\"attr\">&quot;settings&quot;:</span> &#123;</span><br><span class=\"line\">                <span class=\"attr\">&quot;vnext&quot;:</span> [</span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        <span class=\"attr\">&quot;users&quot;:</span> [</span><br><span class=\"line\">                            &#123;</span><br><span class=\"line\">                                <span class=\"attr\">&quot;id&quot;:</span> <span class=\"string\">&quot;&lt;uuid&gt;&quot;</span></span><br><span class=\"line\">                            &#125;</span><br><span class=\"line\">                        ],</span><br><span class=\"line\">                        <span class=\"attr\">&quot;port&quot;:</span> <span class=\"string\">&lt;服务端端口&gt;</span>,</span><br><span class=\"line\">                        <span class=\"attr\">&quot;address&quot;:</span> <span class=\"string\">&quot;&lt;服务端IP&gt;&quot;</span></span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                ]</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"attr\">&quot;protocol&quot;:</span> <span class=\"string\">&quot;freedom&quot;</span>,</span><br><span class=\"line\">            <span class=\"attr\">&quot;tag&quot;:</span> <span class=\"string\">&quot;direct&quot;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>注意: 只适用于linux环境，下载 <a href=\"https://github.com/v2ray/v2ray-core/releases\">v2ray-core</a>，解压后替换 config.yaml 如下。执行 .&#x2F;v2ray</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">&quot;log&quot;:</span> &#123;</span><br><span class=\"line\">        <span class=\"attr\">&quot;loglevel&quot;:</span> <span class=\"string\">&quot;warning&quot;</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">&quot;routing&quot;:</span> &#123;</span><br><span class=\"line\">        <span class=\"attr\">&quot;domainStrategy&quot;:</span> <span class=\"string\">&quot;AsIs&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;rules&quot;:</span> [</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"attr\">&quot;ip&quot;:</span> [</span><br><span class=\"line\">                    <span class=\"string\">&quot;geoip:private&quot;</span></span><br><span class=\"line\">                ],</span><br><span class=\"line\">                <span class=\"attr\">&quot;outboundTag&quot;:</span> <span class=\"string\">&quot;direct&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;type&quot;:</span> <span class=\"string\">&quot;field&quot;</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        ]</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">&quot;inbounds&quot;:</span> [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"attr\">&quot;port&quot;:</span> <span class=\"number\">1080</span>,</span><br><span class=\"line\">            <span class=\"attr\">&quot;protocol&quot;:</span> <span class=\"string\">&quot;socks&quot;</span>,</span><br><span class=\"line\">            <span class=\"attr\">&quot;settings&quot;:</span> &#123;</span><br><span class=\"line\">                <span class=\"attr\">&quot;auth&quot;:</span> <span class=\"string\">&quot;noauth&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;udp&quot;:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            <span class=\"attr\">&quot;tag&quot;:</span> <span class=\"string\">&quot;socks&quot;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    ],</span><br><span class=\"line\">    <span class=\"attr\">&quot;outbounds&quot;:</span> [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"attr\">&quot;protocol&quot;:</span> <span class=\"string\">&quot;vmess&quot;</span>,</span><br><span class=\"line\">            <span class=\"attr\">&quot;settings&quot;:</span> &#123;</span><br><span class=\"line\">                <span class=\"attr\">&quot;vnext&quot;:</span> [</span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        <span class=\"attr\">&quot;users&quot;:</span> [</span><br><span class=\"line\">                            &#123;</span><br><span class=\"line\">                                <span class=\"attr\">&quot;id&quot;:</span> <span class=\"string\">&quot;&lt;uuid&gt;&quot;</span></span><br><span class=\"line\">                            &#125;</span><br><span class=\"line\">                        ],</span><br><span class=\"line\">                        <span class=\"attr\">&quot;port&quot;:</span> <span class=\"string\">&lt;服务端端口&gt;</span>,</span><br><span class=\"line\">                        <span class=\"attr\">&quot;address&quot;:</span> <span class=\"string\">&quot;&lt;服务端IP&gt;&quot;</span></span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                ]</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"attr\">&quot;protocol&quot;:</span> <span class=\"string\">&quot;freedom&quot;</span>,</span><br><span class=\"line\">            <span class=\"attr\">&quot;tag&quot;:</span> <span class=\"string\">&quot;direct&quot;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"layout":"工具","title":"chatgpt","date":"2023-07-28T03:00:52.000Z","_content":"\n#### 测试 key\n```sh\ncurl https://api.openai.com/v1/chat/completions \\\n-H \"Content-Type: application/json\"  \\\n-H \"Authorization: Bearer $1\"  \\\n-d '{\n    \"model\": \"gpt-3.5-turbo\", \n    \"messages\": [\n        {\n            \"role\": \"user\", \n            \"content\": \"Hello!\"\n        }\n    ]\n}'\n```","source":"_posts/工具/chatgpt.md","raw":"---\nlayout: 工具\ntitle: chatgpt\ndate: 2023-07-28 11:00:52\ntags: 工具\n---\n\n#### 测试 key\n```sh\ncurl https://api.openai.com/v1/chat/completions \\\n-H \"Content-Type: application/json\"  \\\n-H \"Authorization: Bearer $1\"  \\\n-d '{\n    \"model\": \"gpt-3.5-turbo\", \n    \"messages\": [\n        {\n            \"role\": \"user\", \n            \"content\": \"Hello!\"\n        }\n    ]\n}'\n```","slug":"工具/chatgpt","published":1,"updated":"2023-07-28T05:38:09.860Z","comments":1,"photos":[],"link":"","_id":"clknkuzve0008yu4w6l9lhqv8","content":"<h4 id=\"测试-key\"><a href=\"#测试-key\" class=\"headerlink\" title=\"测试 key\"></a>测试 key</h4><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl https://api.openai.com/v1/chat/completions \\</span><br><span class=\"line\">-H <span class=\"string\">&quot;Content-Type: application/json&quot;</span>  \\</span><br><span class=\"line\">-H <span class=\"string\">&quot;Authorization: Bearer <span class=\"variable\">$1</span>&quot;</span>  \\</span><br><span class=\"line\">-d <span class=\"string\">&#x27;&#123;</span></span><br><span class=\"line\"><span class=\"string\">    &quot;model&quot;: &quot;gpt-3.5-turbo&quot;, </span></span><br><span class=\"line\"><span class=\"string\">    &quot;messages&quot;: [</span></span><br><span class=\"line\"><span class=\"string\">        &#123;</span></span><br><span class=\"line\"><span class=\"string\">            &quot;role&quot;: &quot;user&quot;, </span></span><br><span class=\"line\"><span class=\"string\">            &quot;content&quot;: &quot;Hello!&quot;</span></span><br><span class=\"line\"><span class=\"string\">        &#125;</span></span><br><span class=\"line\"><span class=\"string\">    ]</span></span><br><span class=\"line\"><span class=\"string\">&#125;&#x27;</span></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h4 id=\"测试-key\"><a href=\"#测试-key\" class=\"headerlink\" title=\"测试 key\"></a>测试 key</h4><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl https://api.openai.com/v1/chat/completions \\</span><br><span class=\"line\">-H <span class=\"string\">&quot;Content-Type: application/json&quot;</span>  \\</span><br><span class=\"line\">-H <span class=\"string\">&quot;Authorization: Bearer <span class=\"variable\">$1</span>&quot;</span>  \\</span><br><span class=\"line\">-d <span class=\"string\">&#x27;&#123;</span></span><br><span class=\"line\"><span class=\"string\">    &quot;model&quot;: &quot;gpt-3.5-turbo&quot;, </span></span><br><span class=\"line\"><span class=\"string\">    &quot;messages&quot;: [</span></span><br><span class=\"line\"><span class=\"string\">        &#123;</span></span><br><span class=\"line\"><span class=\"string\">            &quot;role&quot;: &quot;user&quot;, </span></span><br><span class=\"line\"><span class=\"string\">            &quot;content&quot;: &quot;Hello!&quot;</span></span><br><span class=\"line\"><span class=\"string\">        &#125;</span></span><br><span class=\"line\"><span class=\"string\">    ]</span></span><br><span class=\"line\"><span class=\"string\">&#125;&#x27;</span></span><br></pre></td></tr></table></figure>"},{"layout":"工具","title":"oh my zsh 让终端飞","date":"2023-07-27T10:31:40.000Z","_content":"\n\n```sh\n# yum先安装，如果是ubuntu使用 apt-get install zsh \nyum -y install zsh\n\n# 安装脚本\nsh -c \"$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\"\n\n# 插件安装\n\n## 高亮插件\ngit clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting\n\n## 自动补全\ngit clone https://github.com/zsh-users/zsh-autosuggestions $ZSH_CUSTOM/plugins/zsh-autosuggestions\n```\n\n\n#### 手动更改插件配置\n```sh\n$ vim ~/.zshrc\n\n# plugins 更改如下\nplugins=(\n  git\n  zsh-autosuggestions\n  zsh-syntax-highlighting\n)\n\n# 更换主题\nZSH_THEME=\"ys\"\n\n# 重新加载\nsource ~/.zshrc\n```","source":"_posts/工具/oh-my-zsh-让终端飞.md","raw":"---\nlayout: 工具\ntitle: oh my zsh 让终端飞\ndate: 2023-07-27 18:31:40\ntags: 工具\n---\n\n\n```sh\n# yum先安装，如果是ubuntu使用 apt-get install zsh \nyum -y install zsh\n\n# 安装脚本\nsh -c \"$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\"\n\n# 插件安装\n\n## 高亮插件\ngit clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting\n\n## 自动补全\ngit clone https://github.com/zsh-users/zsh-autosuggestions $ZSH_CUSTOM/plugins/zsh-autosuggestions\n```\n\n\n#### 手动更改插件配置\n```sh\n$ vim ~/.zshrc\n\n# plugins 更改如下\nplugins=(\n  git\n  zsh-autosuggestions\n  zsh-syntax-highlighting\n)\n\n# 更换主题\nZSH_THEME=\"ys\"\n\n# 重新加载\nsource ~/.zshrc\n```","slug":"工具/oh-my-zsh-让终端飞","published":1,"updated":"2023-07-28T11:05:32.600Z","comments":1,"photos":[],"link":"","_id":"clknkuzve0009yu4whaiuak41","content":"<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># yum先安装，如果是ubuntu使用 apt-get install zsh </span></span><br><span class=\"line\">yum -y install zsh</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 安装脚本</span></span><br><span class=\"line\">sh -c <span class=\"string\">&quot;<span class=\"subst\">$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)</span>&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 插件安装</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 高亮插件</span></span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/zsh-users/zsh-syntax-highlighting.git <span class=\"variable\">$&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;</span>/plugins/zsh-syntax-highlighting</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 自动补全</span></span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/zsh-users/zsh-autosuggestions <span class=\"variable\">$ZSH_CUSTOM</span>/plugins/zsh-autosuggestions</span><br></pre></td></tr></table></figure>\n\n\n<h4 id=\"手动更改插件配置\"><a href=\"#手动更改插件配置\" class=\"headerlink\" title=\"手动更改插件配置\"></a>手动更改插件配置</h4><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ vim ~/.zshrc</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># plugins 更改如下</span></span><br><span class=\"line\">plugins=(</span><br><span class=\"line\">  git</span><br><span class=\"line\">  zsh-autosuggestions</span><br><span class=\"line\">  zsh-syntax-highlighting</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 更换主题</span></span><br><span class=\"line\">ZSH_THEME=<span class=\"string\">&quot;ys&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 重新加载</span></span><br><span class=\"line\"><span class=\"built_in\">source</span> ~/.zshrc</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># yum先安装，如果是ubuntu使用 apt-get install zsh </span></span><br><span class=\"line\">yum -y install zsh</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 安装脚本</span></span><br><span class=\"line\">sh -c <span class=\"string\">&quot;<span class=\"subst\">$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)</span>&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 插件安装</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 高亮插件</span></span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/zsh-users/zsh-syntax-highlighting.git <span class=\"variable\">$&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;</span>/plugins/zsh-syntax-highlighting</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 自动补全</span></span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/zsh-users/zsh-autosuggestions <span class=\"variable\">$ZSH_CUSTOM</span>/plugins/zsh-autosuggestions</span><br></pre></td></tr></table></figure>\n\n\n<h4 id=\"手动更改插件配置\"><a href=\"#手动更改插件配置\" class=\"headerlink\" title=\"手动更改插件配置\"></a>手动更改插件配置</h4><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ vim ~/.zshrc</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># plugins 更改如下</span></span><br><span class=\"line\">plugins=(</span><br><span class=\"line\">  git</span><br><span class=\"line\">  zsh-autosuggestions</span><br><span class=\"line\">  zsh-syntax-highlighting</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 更换主题</span></span><br><span class=\"line\">ZSH_THEME=<span class=\"string\">&quot;ys&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 重新加载</span></span><br><span class=\"line\"><span class=\"built_in\">source</span> ~/.zshrc</span><br></pre></td></tr></table></figure>"},{"layout":"golang","title":"grpc如何使用","date":"2023-07-31T09:04:16.000Z","_content":"\n#### 安装grpc\n```sh\ngo get google.golang.org/grpc@latest\n```\n\n#### 安装Protocol Buffers v3\n\nprotoc [下载](https://github.com/google/protobuf/releases)\n\n#### 安装插件\n```sh\ngo install google.golang.org/protobuf/cmd/protoc-gen-go@v1.28\ngo install google.golang.org/grpc/cmd/protoc-gen-go-grpc@v1.2\n```\n\n# 入门示例\n\n[代码实现](https://github.com/oldwang12/grpc-demo)\n\n## 服务端\n\n#### 编写proto代码\n```sh\ncat <<EOF > pb/hello.proto\nsyntax = \"proto3\"; // 版本声明，使用Protocol Buffers v3版本\n\noption go_package = \"server/pb\";  // 指定生成的Go代码在你项目中的导入路径\n\npackage pb; // 包名\n\n\n// 定义服务\nservice Greeter {\n    // SayHello 方法\n    rpc SayHello (HelloRequest) returns (HelloResponse) {}\n}\n\n// 请求消息\nmessage HelloRequest {\n    string name = 1;\n}\n\n// 响应消息\nmessage HelloResponse {\n    string reply = 1;\n}\nEOF\n```\n\n* 执行命令：\n```sh\nprotoc --go_out=. --go_opt=paths=source_relative --go-grpc_out=. --go-grpc_opt=paths=source_relative pb/hello.proto\n```\n\n#### 编写Server端Go代码\n\n```go\npackage main\n\nimport (\n\t\"context\"\n\t\"fmt\"\n\t\"hello_server/pb\"\n\t\"net\"\n\n\t\"google.golang.org/grpc\"\n)\n\n// hello server\n\ntype server struct {\n\tpb.UnimplementedGreeterServer\n}\n\nfunc (s *server) SayHello(ctx context.Context, in *pb.HelloRequest) (*pb.HelloResponse, error) {\n\treturn &pb.HelloResponse{Reply: \"Hello \" + in.Name}, nil\n}\n\nfunc main() {\n\t// 监听本地的8972端口\n\tlis, err := net.Listen(\"tcp\", \":8972\")\n\tif err != nil {\n\t\tfmt.Printf(\"failed to listen: %v\", err)\n\t\treturn\n\t}\n\ts := grpc.NewServer()                  // 创建gRPC服务器\n\tpb.RegisterGreeterServer(s, &server{}) // 在gRPC服务端注册服务\n\t// 启动服务\n\terr = s.Serve(lis)\n\tif err != nil {\n\t\tfmt.Printf(\"failed to serve: %v\", err)\n\t\treturn\n\t}\n}\n```\n\n#### 代码结构\n\n```\nserver\n├── go.mod\n├── go.sum\n├── main.go\n└── pb\n    ├── hello.pb.go\n    ├── hello.proto\n    └── hello_grpc.pb.go\n```\n\n#### 运行\n```sh\ngo run main.go\n```\n\n## 客户端\n\n#### 编写proto代码\n\n新建 client 项目\n\n将 go_package 改为 \"client/db\"\n\n```sh\ncat <<EOF > pb/hello.proto\nsyntax = \"proto3\"; // 版本声明，使用Protocol Buffers v3版本\n\noption go_package = \"client/pb\";  // 指定生成的Go代码在你项目中的导入路径\n\npackage pb; // 包名\n\n\n// 定义服务\nservice Greeter {\n    // SayHello 方法\n    rpc SayHello (HelloRequest) returns (HelloResponse) {}\n}\n\n// 请求消息\nmessage HelloRequest {\n    string name = 1;\n}\n\n// 响应消息\nmessage HelloResponse {\n    string reply = 1;\n}\nEOF\n```\n\n* 执行命令\n```sh\nprotoc --go_out=. --go_opt=paths=source_relative --go-grpc_out=. --go-grpc_opt=paths=source_relative pb/hello.proto\n```\n\n#### client 端代码\n```go\npackage main\n\nimport (\n\t\"context\"\n\t\"flag\"\n\t\"log\"\n\t\"time\"\n\n\t\"hello_client/pb\"\n\n\t\"google.golang.org/grpc\"\n\t\"google.golang.org/grpc/credentials/insecure\"\n)\n\n// hello_client\n\nconst (\n\tdefaultName = \"world\"\n)\n\nvar (\n\taddr = flag.String(\"addr\", \"127.0.0.1:8972\", \"the address to connect to\")\n\tname = flag.String(\"name\", defaultName, \"Name to greet\")\n)\n\nfunc main() {\n\tflag.Parse()\n\t// 连接到server端，此处禁用安全传输\n\tconn, err := grpc.Dial(*addr, grpc.WithTransportCredentials(insecure.NewCredentials()))\n\tif err != nil {\n\t\tlog.Fatalf(\"did not connect: %v\", err)\n\t}\n\tdefer conn.Close()\n\tc := pb.NewGreeterClient(conn)\n\n\t// 执行RPC调用并打印收到的响应数据\n\tctx, cancel := context.WithTimeout(context.Background(), time.Second)\n\tdefer cancel()\n\tr, err := c.SayHello(ctx, &pb.HelloRequest{Name: *name})\n\tif err != nil {\n\t\tlog.Fatalf(\"could not greet: %v\", err)\n\t}\n\tlog.Printf(\"Greeting: %s\", r.GetReply())\n}\n```\n\n#### 项目目录\n```\nhttp_client\n├── go.mod\n├── go.sum\n├── main.go\n└── pb\n    ├── hello.pb.go\n    ├── hello.proto\n    └── hello_grpc.pb.go\n```\n\n## 结果\n```sh\n$ go run main.go -name=李四\n2023/07/31 17:17:47 Greeting: Hello 李四\n```","source":"_posts/golang/grpc如何使用.md","raw":"---\nlayout: golang\ntitle: grpc如何使用\ndate: 2023-07-31 17:04:16\ntags: golang\n---\n\n#### 安装grpc\n```sh\ngo get google.golang.org/grpc@latest\n```\n\n#### 安装Protocol Buffers v3\n\nprotoc [下载](https://github.com/google/protobuf/releases)\n\n#### 安装插件\n```sh\ngo install google.golang.org/protobuf/cmd/protoc-gen-go@v1.28\ngo install google.golang.org/grpc/cmd/protoc-gen-go-grpc@v1.2\n```\n\n# 入门示例\n\n[代码实现](https://github.com/oldwang12/grpc-demo)\n\n## 服务端\n\n#### 编写proto代码\n```sh\ncat <<EOF > pb/hello.proto\nsyntax = \"proto3\"; // 版本声明，使用Protocol Buffers v3版本\n\noption go_package = \"server/pb\";  // 指定生成的Go代码在你项目中的导入路径\n\npackage pb; // 包名\n\n\n// 定义服务\nservice Greeter {\n    // SayHello 方法\n    rpc SayHello (HelloRequest) returns (HelloResponse) {}\n}\n\n// 请求消息\nmessage HelloRequest {\n    string name = 1;\n}\n\n// 响应消息\nmessage HelloResponse {\n    string reply = 1;\n}\nEOF\n```\n\n* 执行命令：\n```sh\nprotoc --go_out=. --go_opt=paths=source_relative --go-grpc_out=. --go-grpc_opt=paths=source_relative pb/hello.proto\n```\n\n#### 编写Server端Go代码\n\n```go\npackage main\n\nimport (\n\t\"context\"\n\t\"fmt\"\n\t\"hello_server/pb\"\n\t\"net\"\n\n\t\"google.golang.org/grpc\"\n)\n\n// hello server\n\ntype server struct {\n\tpb.UnimplementedGreeterServer\n}\n\nfunc (s *server) SayHello(ctx context.Context, in *pb.HelloRequest) (*pb.HelloResponse, error) {\n\treturn &pb.HelloResponse{Reply: \"Hello \" + in.Name}, nil\n}\n\nfunc main() {\n\t// 监听本地的8972端口\n\tlis, err := net.Listen(\"tcp\", \":8972\")\n\tif err != nil {\n\t\tfmt.Printf(\"failed to listen: %v\", err)\n\t\treturn\n\t}\n\ts := grpc.NewServer()                  // 创建gRPC服务器\n\tpb.RegisterGreeterServer(s, &server{}) // 在gRPC服务端注册服务\n\t// 启动服务\n\terr = s.Serve(lis)\n\tif err != nil {\n\t\tfmt.Printf(\"failed to serve: %v\", err)\n\t\treturn\n\t}\n}\n```\n\n#### 代码结构\n\n```\nserver\n├── go.mod\n├── go.sum\n├── main.go\n└── pb\n    ├── hello.pb.go\n    ├── hello.proto\n    └── hello_grpc.pb.go\n```\n\n#### 运行\n```sh\ngo run main.go\n```\n\n## 客户端\n\n#### 编写proto代码\n\n新建 client 项目\n\n将 go_package 改为 \"client/db\"\n\n```sh\ncat <<EOF > pb/hello.proto\nsyntax = \"proto3\"; // 版本声明，使用Protocol Buffers v3版本\n\noption go_package = \"client/pb\";  // 指定生成的Go代码在你项目中的导入路径\n\npackage pb; // 包名\n\n\n// 定义服务\nservice Greeter {\n    // SayHello 方法\n    rpc SayHello (HelloRequest) returns (HelloResponse) {}\n}\n\n// 请求消息\nmessage HelloRequest {\n    string name = 1;\n}\n\n// 响应消息\nmessage HelloResponse {\n    string reply = 1;\n}\nEOF\n```\n\n* 执行命令\n```sh\nprotoc --go_out=. --go_opt=paths=source_relative --go-grpc_out=. --go-grpc_opt=paths=source_relative pb/hello.proto\n```\n\n#### client 端代码\n```go\npackage main\n\nimport (\n\t\"context\"\n\t\"flag\"\n\t\"log\"\n\t\"time\"\n\n\t\"hello_client/pb\"\n\n\t\"google.golang.org/grpc\"\n\t\"google.golang.org/grpc/credentials/insecure\"\n)\n\n// hello_client\n\nconst (\n\tdefaultName = \"world\"\n)\n\nvar (\n\taddr = flag.String(\"addr\", \"127.0.0.1:8972\", \"the address to connect to\")\n\tname = flag.String(\"name\", defaultName, \"Name to greet\")\n)\n\nfunc main() {\n\tflag.Parse()\n\t// 连接到server端，此处禁用安全传输\n\tconn, err := grpc.Dial(*addr, grpc.WithTransportCredentials(insecure.NewCredentials()))\n\tif err != nil {\n\t\tlog.Fatalf(\"did not connect: %v\", err)\n\t}\n\tdefer conn.Close()\n\tc := pb.NewGreeterClient(conn)\n\n\t// 执行RPC调用并打印收到的响应数据\n\tctx, cancel := context.WithTimeout(context.Background(), time.Second)\n\tdefer cancel()\n\tr, err := c.SayHello(ctx, &pb.HelloRequest{Name: *name})\n\tif err != nil {\n\t\tlog.Fatalf(\"could not greet: %v\", err)\n\t}\n\tlog.Printf(\"Greeting: %s\", r.GetReply())\n}\n```\n\n#### 项目目录\n```\nhttp_client\n├── go.mod\n├── go.sum\n├── main.go\n└── pb\n    ├── hello.pb.go\n    ├── hello.proto\n    └── hello_grpc.pb.go\n```\n\n## 结果\n```sh\n$ go run main.go -name=李四\n2023/07/31 17:17:47 Greeting: Hello 李四\n```","slug":"golang/grpc如何使用","published":1,"updated":"2023-07-31T09:57:28.538Z","_id":"clkqp0e2000006o4wblmweesx","comments":1,"photos":[],"link":"","content":"<h4 id=\"安装grpc\"><a href=\"#安装grpc\" class=\"headerlink\" title=\"安装grpc\"></a>安装grpc</h4><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">go get google.golang.org/grpc@latest</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"安装Protocol-Buffers-v3\"><a href=\"#安装Protocol-Buffers-v3\" class=\"headerlink\" title=\"安装Protocol Buffers v3\"></a>安装Protocol Buffers v3</h4><p>protoc <a href=\"https://github.com/google/protobuf/releases\">下载</a></p>\n<h4 id=\"安装插件\"><a href=\"#安装插件\" class=\"headerlink\" title=\"安装插件\"></a>安装插件</h4><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">go install google.golang.org/protobuf/cmd/protoc-gen-go@v1.28</span><br><span class=\"line\">go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@v1.2</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"入门示例\"><a href=\"#入门示例\" class=\"headerlink\" title=\"入门示例\"></a>入门示例</h1><p><a href=\"https://github.com/oldwang12/grpc-demo\">代码实现</a></p>\n<h2 id=\"服务端\"><a href=\"#服务端\" class=\"headerlink\" title=\"服务端\"></a>服务端</h2><h4 id=\"编写proto代码\"><a href=\"#编写proto代码\" class=\"headerlink\" title=\"编写proto代码\"></a>编写proto代码</h4><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cat</span> &lt;&lt;<span class=\"string\">EOF &gt; pb/hello.proto</span></span><br><span class=\"line\"><span class=\"string\">syntax = &quot;proto3&quot;; // 版本声明，使用Protocol Buffers v3版本</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">option go_package = &quot;server/pb&quot;;  // 指定生成的Go代码在你项目中的导入路径</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">package pb; // 包名</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">// 定义服务</span></span><br><span class=\"line\"><span class=\"string\">service Greeter &#123;</span></span><br><span class=\"line\"><span class=\"string\">    // SayHello 方法</span></span><br><span class=\"line\"><span class=\"string\">    rpc SayHello (HelloRequest) returns (HelloResponse) &#123;&#125;</span></span><br><span class=\"line\"><span class=\"string\">&#125;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">// 请求消息</span></span><br><span class=\"line\"><span class=\"string\">message HelloRequest &#123;</span></span><br><span class=\"line\"><span class=\"string\">    string name = 1;</span></span><br><span class=\"line\"><span class=\"string\">&#125;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">// 响应消息</span></span><br><span class=\"line\"><span class=\"string\">message HelloResponse &#123;</span></span><br><span class=\"line\"><span class=\"string\">    string reply = 1;</span></span><br><span class=\"line\"><span class=\"string\">&#125;</span></span><br><span class=\"line\"><span class=\"string\">EOF</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>执行命令：<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">protoc --go_out=. --go_opt=paths=source_relative --go-grpc_out=. --go-grpc_opt=paths=source_relative pb/hello.proto</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h4 id=\"编写Server端Go代码\"><a href=\"#编写Server端Go代码\" class=\"headerlink\" title=\"编写Server端Go代码\"></a>编写Server端Go代码</h4><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">\t<span class=\"string\">&quot;context&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;hello_server/pb&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;net&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"string\">&quot;google.golang.org/grpc&quot;</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// hello server</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">type</span> server <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tpb.UnimplementedGreeterServer</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(s *server)</span></span> SayHello(ctx context.Context, in *pb.HelloRequest) (*pb.HelloResponse, <span class=\"type\">error</span>) &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> &amp;pb.HelloResponse&#123;Reply: <span class=\"string\">&quot;Hello &quot;</span> + in.Name&#125;, <span class=\"literal\">nil</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// 监听本地的8972端口</span></span><br><span class=\"line\">\tlis, err := net.Listen(<span class=\"string\">&quot;tcp&quot;</span>, <span class=\"string\">&quot;:8972&quot;</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\tfmt.Printf(<span class=\"string\">&quot;failed to listen: %v&quot;</span>, err)</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\ts := grpc.NewServer()                  <span class=\"comment\">// 创建gRPC服务器</span></span><br><span class=\"line\">\tpb.RegisterGreeterServer(s, &amp;server&#123;&#125;) <span class=\"comment\">// 在gRPC服务端注册服务</span></span><br><span class=\"line\">\t<span class=\"comment\">// 启动服务</span></span><br><span class=\"line\">\terr = s.Serve(lis)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\tfmt.Printf(<span class=\"string\">&quot;failed to serve: %v&quot;</span>, err)</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"代码结构\"><a href=\"#代码结构\" class=\"headerlink\" title=\"代码结构\"></a>代码结构</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server</span><br><span class=\"line\">├── go.mod</span><br><span class=\"line\">├── go.sum</span><br><span class=\"line\">├── main.go</span><br><span class=\"line\">└── pb</span><br><span class=\"line\">    ├── hello.pb.go</span><br><span class=\"line\">    ├── hello.proto</span><br><span class=\"line\">    └── hello_grpc.pb.go</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h4><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">go run main.go</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"客户端\"><a href=\"#客户端\" class=\"headerlink\" title=\"客户端\"></a>客户端</h2><h4 id=\"编写proto代码-1\"><a href=\"#编写proto代码-1\" class=\"headerlink\" title=\"编写proto代码\"></a>编写proto代码</h4><p>新建 client 项目</p>\n<p>将 go_package 改为 “client&#x2F;db”</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cat</span> &lt;&lt;<span class=\"string\">EOF &gt; pb/hello.proto</span></span><br><span class=\"line\"><span class=\"string\">syntax = &quot;proto3&quot;; // 版本声明，使用Protocol Buffers v3版本</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">option go_package = &quot;client/pb&quot;;  // 指定生成的Go代码在你项目中的导入路径</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">package pb; // 包名</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">// 定义服务</span></span><br><span class=\"line\"><span class=\"string\">service Greeter &#123;</span></span><br><span class=\"line\"><span class=\"string\">    // SayHello 方法</span></span><br><span class=\"line\"><span class=\"string\">    rpc SayHello (HelloRequest) returns (HelloResponse) &#123;&#125;</span></span><br><span class=\"line\"><span class=\"string\">&#125;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">// 请求消息</span></span><br><span class=\"line\"><span class=\"string\">message HelloRequest &#123;</span></span><br><span class=\"line\"><span class=\"string\">    string name = 1;</span></span><br><span class=\"line\"><span class=\"string\">&#125;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">// 响应消息</span></span><br><span class=\"line\"><span class=\"string\">message HelloResponse &#123;</span></span><br><span class=\"line\"><span class=\"string\">    string reply = 1;</span></span><br><span class=\"line\"><span class=\"string\">&#125;</span></span><br><span class=\"line\"><span class=\"string\">EOF</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>执行命令<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">protoc --go_out=. --go_opt=paths=source_relative --go-grpc_out=. --go-grpc_opt=paths=source_relative pb/hello.proto</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h4 id=\"client-端代码\"><a href=\"#client-端代码\" class=\"headerlink\" title=\"client 端代码\"></a>client 端代码</h4><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">\t<span class=\"string\">&quot;context&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;flag&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;log&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;time&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"string\">&quot;hello_client/pb&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"string\">&quot;google.golang.org/grpc&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;google.golang.org/grpc/credentials/insecure&quot;</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// hello_client</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> (</span><br><span class=\"line\">\tdefaultName = <span class=\"string\">&quot;world&quot;</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> (</span><br><span class=\"line\">\taddr = flag.String(<span class=\"string\">&quot;addr&quot;</span>, <span class=\"string\">&quot;127.0.0.1:8972&quot;</span>, <span class=\"string\">&quot;the address to connect to&quot;</span>)</span><br><span class=\"line\">\tname = flag.String(<span class=\"string\">&quot;name&quot;</span>, defaultName, <span class=\"string\">&quot;Name to greet&quot;</span>)</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\tflag.Parse()</span><br><span class=\"line\">\t<span class=\"comment\">// 连接到server端，此处禁用安全传输</span></span><br><span class=\"line\">\tconn, err := grpc.Dial(*addr, grpc.WithTransportCredentials(insecure.NewCredentials()))</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\tlog.Fatalf(<span class=\"string\">&quot;did not connect: %v&quot;</span>, err)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">defer</span> conn.Close()</span><br><span class=\"line\">\tc := pb.NewGreeterClient(conn)</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 执行RPC调用并打印收到的响应数据</span></span><br><span class=\"line\">\tctx, cancel := context.WithTimeout(context.Background(), time.Second)</span><br><span class=\"line\">\t<span class=\"keyword\">defer</span> cancel()</span><br><span class=\"line\">\tr, err := c.SayHello(ctx, &amp;pb.HelloRequest&#123;Name: *name&#125;)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\tlog.Fatalf(<span class=\"string\">&quot;could not greet: %v&quot;</span>, err)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tlog.Printf(<span class=\"string\">&quot;Greeting: %s&quot;</span>, r.GetReply())</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"项目目录\"><a href=\"#项目目录\" class=\"headerlink\" title=\"项目目录\"></a>项目目录</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http_client</span><br><span class=\"line\">├── go.mod</span><br><span class=\"line\">├── go.sum</span><br><span class=\"line\">├── main.go</span><br><span class=\"line\">└── pb</span><br><span class=\"line\">    ├── hello.pb.go</span><br><span class=\"line\">    ├── hello.proto</span><br><span class=\"line\">    └── hello_grpc.pb.go</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"结果\"><a href=\"#结果\" class=\"headerlink\" title=\"结果\"></a>结果</h2><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ go run main.go -name=李四</span><br><span class=\"line\">2023/07/31 17:17:47 Greeting: Hello 李四</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h4 id=\"安装grpc\"><a href=\"#安装grpc\" class=\"headerlink\" title=\"安装grpc\"></a>安装grpc</h4><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">go get google.golang.org/grpc@latest</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"安装Protocol-Buffers-v3\"><a href=\"#安装Protocol-Buffers-v3\" class=\"headerlink\" title=\"安装Protocol Buffers v3\"></a>安装Protocol Buffers v3</h4><p>protoc <a href=\"https://github.com/google/protobuf/releases\">下载</a></p>\n<h4 id=\"安装插件\"><a href=\"#安装插件\" class=\"headerlink\" title=\"安装插件\"></a>安装插件</h4><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">go install google.golang.org/protobuf/cmd/protoc-gen-go@v1.28</span><br><span class=\"line\">go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@v1.2</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"入门示例\"><a href=\"#入门示例\" class=\"headerlink\" title=\"入门示例\"></a>入门示例</h1><p><a href=\"https://github.com/oldwang12/grpc-demo\">代码实现</a></p>\n<h2 id=\"服务端\"><a href=\"#服务端\" class=\"headerlink\" title=\"服务端\"></a>服务端</h2><h4 id=\"编写proto代码\"><a href=\"#编写proto代码\" class=\"headerlink\" title=\"编写proto代码\"></a>编写proto代码</h4><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cat</span> &lt;&lt;<span class=\"string\">EOF &gt; pb/hello.proto</span></span><br><span class=\"line\"><span class=\"string\">syntax = &quot;proto3&quot;; // 版本声明，使用Protocol Buffers v3版本</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">option go_package = &quot;server/pb&quot;;  // 指定生成的Go代码在你项目中的导入路径</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">package pb; // 包名</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">// 定义服务</span></span><br><span class=\"line\"><span class=\"string\">service Greeter &#123;</span></span><br><span class=\"line\"><span class=\"string\">    // SayHello 方法</span></span><br><span class=\"line\"><span class=\"string\">    rpc SayHello (HelloRequest) returns (HelloResponse) &#123;&#125;</span></span><br><span class=\"line\"><span class=\"string\">&#125;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">// 请求消息</span></span><br><span class=\"line\"><span class=\"string\">message HelloRequest &#123;</span></span><br><span class=\"line\"><span class=\"string\">    string name = 1;</span></span><br><span class=\"line\"><span class=\"string\">&#125;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">// 响应消息</span></span><br><span class=\"line\"><span class=\"string\">message HelloResponse &#123;</span></span><br><span class=\"line\"><span class=\"string\">    string reply = 1;</span></span><br><span class=\"line\"><span class=\"string\">&#125;</span></span><br><span class=\"line\"><span class=\"string\">EOF</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>执行命令：<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">protoc --go_out=. --go_opt=paths=source_relative --go-grpc_out=. --go-grpc_opt=paths=source_relative pb/hello.proto</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h4 id=\"编写Server端Go代码\"><a href=\"#编写Server端Go代码\" class=\"headerlink\" title=\"编写Server端Go代码\"></a>编写Server端Go代码</h4><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">\t<span class=\"string\">&quot;context&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;hello_server/pb&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;net&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"string\">&quot;google.golang.org/grpc&quot;</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// hello server</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">type</span> server <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tpb.UnimplementedGreeterServer</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(s *server)</span></span> SayHello(ctx context.Context, in *pb.HelloRequest) (*pb.HelloResponse, <span class=\"type\">error</span>) &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> &amp;pb.HelloResponse&#123;Reply: <span class=\"string\">&quot;Hello &quot;</span> + in.Name&#125;, <span class=\"literal\">nil</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// 监听本地的8972端口</span></span><br><span class=\"line\">\tlis, err := net.Listen(<span class=\"string\">&quot;tcp&quot;</span>, <span class=\"string\">&quot;:8972&quot;</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\tfmt.Printf(<span class=\"string\">&quot;failed to listen: %v&quot;</span>, err)</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\ts := grpc.NewServer()                  <span class=\"comment\">// 创建gRPC服务器</span></span><br><span class=\"line\">\tpb.RegisterGreeterServer(s, &amp;server&#123;&#125;) <span class=\"comment\">// 在gRPC服务端注册服务</span></span><br><span class=\"line\">\t<span class=\"comment\">// 启动服务</span></span><br><span class=\"line\">\terr = s.Serve(lis)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\tfmt.Printf(<span class=\"string\">&quot;failed to serve: %v&quot;</span>, err)</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"代码结构\"><a href=\"#代码结构\" class=\"headerlink\" title=\"代码结构\"></a>代码结构</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server</span><br><span class=\"line\">├── go.mod</span><br><span class=\"line\">├── go.sum</span><br><span class=\"line\">├── main.go</span><br><span class=\"line\">└── pb</span><br><span class=\"line\">    ├── hello.pb.go</span><br><span class=\"line\">    ├── hello.proto</span><br><span class=\"line\">    └── hello_grpc.pb.go</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h4><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">go run main.go</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"客户端\"><a href=\"#客户端\" class=\"headerlink\" title=\"客户端\"></a>客户端</h2><h4 id=\"编写proto代码-1\"><a href=\"#编写proto代码-1\" class=\"headerlink\" title=\"编写proto代码\"></a>编写proto代码</h4><p>新建 client 项目</p>\n<p>将 go_package 改为 “client&#x2F;db”</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cat</span> &lt;&lt;<span class=\"string\">EOF &gt; pb/hello.proto</span></span><br><span class=\"line\"><span class=\"string\">syntax = &quot;proto3&quot;; // 版本声明，使用Protocol Buffers v3版本</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">option go_package = &quot;client/pb&quot;;  // 指定生成的Go代码在你项目中的导入路径</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">package pb; // 包名</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">// 定义服务</span></span><br><span class=\"line\"><span class=\"string\">service Greeter &#123;</span></span><br><span class=\"line\"><span class=\"string\">    // SayHello 方法</span></span><br><span class=\"line\"><span class=\"string\">    rpc SayHello (HelloRequest) returns (HelloResponse) &#123;&#125;</span></span><br><span class=\"line\"><span class=\"string\">&#125;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">// 请求消息</span></span><br><span class=\"line\"><span class=\"string\">message HelloRequest &#123;</span></span><br><span class=\"line\"><span class=\"string\">    string name = 1;</span></span><br><span class=\"line\"><span class=\"string\">&#125;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">// 响应消息</span></span><br><span class=\"line\"><span class=\"string\">message HelloResponse &#123;</span></span><br><span class=\"line\"><span class=\"string\">    string reply = 1;</span></span><br><span class=\"line\"><span class=\"string\">&#125;</span></span><br><span class=\"line\"><span class=\"string\">EOF</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>执行命令<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">protoc --go_out=. --go_opt=paths=source_relative --go-grpc_out=. --go-grpc_opt=paths=source_relative pb/hello.proto</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h4 id=\"client-端代码\"><a href=\"#client-端代码\" class=\"headerlink\" title=\"client 端代码\"></a>client 端代码</h4><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">\t<span class=\"string\">&quot;context&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;flag&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;log&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;time&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"string\">&quot;hello_client/pb&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"string\">&quot;google.golang.org/grpc&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;google.golang.org/grpc/credentials/insecure&quot;</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// hello_client</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> (</span><br><span class=\"line\">\tdefaultName = <span class=\"string\">&quot;world&quot;</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> (</span><br><span class=\"line\">\taddr = flag.String(<span class=\"string\">&quot;addr&quot;</span>, <span class=\"string\">&quot;127.0.0.1:8972&quot;</span>, <span class=\"string\">&quot;the address to connect to&quot;</span>)</span><br><span class=\"line\">\tname = flag.String(<span class=\"string\">&quot;name&quot;</span>, defaultName, <span class=\"string\">&quot;Name to greet&quot;</span>)</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\tflag.Parse()</span><br><span class=\"line\">\t<span class=\"comment\">// 连接到server端，此处禁用安全传输</span></span><br><span class=\"line\">\tconn, err := grpc.Dial(*addr, grpc.WithTransportCredentials(insecure.NewCredentials()))</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\tlog.Fatalf(<span class=\"string\">&quot;did not connect: %v&quot;</span>, err)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">defer</span> conn.Close()</span><br><span class=\"line\">\tc := pb.NewGreeterClient(conn)</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 执行RPC调用并打印收到的响应数据</span></span><br><span class=\"line\">\tctx, cancel := context.WithTimeout(context.Background(), time.Second)</span><br><span class=\"line\">\t<span class=\"keyword\">defer</span> cancel()</span><br><span class=\"line\">\tr, err := c.SayHello(ctx, &amp;pb.HelloRequest&#123;Name: *name&#125;)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\tlog.Fatalf(<span class=\"string\">&quot;could not greet: %v&quot;</span>, err)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tlog.Printf(<span class=\"string\">&quot;Greeting: %s&quot;</span>, r.GetReply())</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"项目目录\"><a href=\"#项目目录\" class=\"headerlink\" title=\"项目目录\"></a>项目目录</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http_client</span><br><span class=\"line\">├── go.mod</span><br><span class=\"line\">├── go.sum</span><br><span class=\"line\">├── main.go</span><br><span class=\"line\">└── pb</span><br><span class=\"line\">    ├── hello.pb.go</span><br><span class=\"line\">    ├── hello.proto</span><br><span class=\"line\">    └── hello_grpc.pb.go</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"结果\"><a href=\"#结果\" class=\"headerlink\" title=\"结果\"></a>结果</h2><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ go run main.go -name=李四</span><br><span class=\"line\">2023/07/31 17:17:47 Greeting: Hello 李四</span><br></pre></td></tr></table></figure>"},{"layout":"linux","title":"linux命令","date":"2023-08-01T07:49:05.000Z","_content":"[1. cronjob 定时任务](#1)\n\n<p id=\"1\"></p>\n\n#### cronjob 定时任务\n```sh\n# crontab -e 命令以编辑当前用户的cron表。\ncrontab -e\n\n# 每分钟执行一次 ls\n*/1 * * * * ls\n```","source":"_posts/linux/linux命令.md","raw":"---\nlayout: linux\ntitle: linux命令\ndate: 2023-08-01 15:49:05\ntags: linux\n---\n[1. cronjob 定时任务](#1)\n\n<p id=\"1\"></p>\n\n#### cronjob 定时任务\n```sh\n# crontab -e 命令以编辑当前用户的cron表。\ncrontab -e\n\n# 每分钟执行一次 ls\n*/1 * * * * ls\n```","slug":"linux/linux命令","published":1,"updated":"2023-08-01T07:56:25.306Z","comments":1,"photos":[],"link":"","_id":"clks09wfu0000sj4waxi7htx7","content":"<p><a href=\"#1\">1. cronjob 定时任务</a></p>\n<p id=\"1\"></p>\n\n<h4 id=\"cronjob-定时任务\"><a href=\"#cronjob-定时任务\" class=\"headerlink\" title=\"cronjob 定时任务\"></a>cronjob 定时任务</h4><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># crontab -e 命令以编辑当前用户的cron表。</span></span><br><span class=\"line\">crontab -e</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 每分钟执行一次 ls</span></span><br><span class=\"line\">*/1 * * * * <span class=\"built_in\">ls</span></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p><a href=\"#1\">1. cronjob 定时任务</a></p>\n<p id=\"1\"></p>\n\n<h4 id=\"cronjob-定时任务\"><a href=\"#cronjob-定时任务\" class=\"headerlink\" title=\"cronjob 定时任务\"></a>cronjob 定时任务</h4><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># crontab -e 命令以编辑当前用户的cron表。</span></span><br><span class=\"line\">crontab -e</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 每分钟执行一次 ls</span></span><br><span class=\"line\">*/1 * * * * <span class=\"built_in\">ls</span></span><br></pre></td></tr></table></figure>"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"clke8jrxr00033w4w3v7o1h18","tag_id":"clke896pe0002vp4w40if892l","_id":"clke8jrxs00043w4wg4x0dtng"},{"post_id":"clke8k2dq00053w4whx9jgpie","tag_id":"clke84yod0000s54w9waz3nx8","_id":"clke8k2dr00063w4wa1hh216t"},{"post_id":"clke8l8o0000c3w4wdk1x511z","tag_id":"clke8knpo00093w4wbyph0dex","_id":"clke8l8o0000d3w4w8d0ehg79"},{"post_id":"clke8l8o1000f3w4wdhkvfdw9","tag_id":"clke8knpo00093w4wbyph0dex","_id":"clke8l8o1000g3w4w3tgy567f"},{"post_id":"clke8lpvj000h3w4w3l9oegjr","tag_id":"clke85ik80002s54w46c8hn90","_id":"clke8lpvk000i3w4w9w6agxm9"},{"post_id":"clke8luk3000j3w4wb0xq3j2e","tag_id":"clke8knpo00093w4wbyph0dex","_id":"clke8lyg5000k3w4w8g3d6uvo"},{"post_id":"clke8mugw000m3w4wcn6s8ouz","tag_id":"clke8i6k900031d4wcuj66xud","_id":"clke8nf6f000o3w4w7xu6g9hz"},{"post_id":"clke8m1vq000l3w4w1dxifn0l","tag_id":"clke85ik80002s54w46c8hn90","_id":"clke8ofsa000q3w4wa3vmc9vl"},{"post_id":"clkfkkqf50001614w2ihd8upa","tag_id":"clke8i6k900031d4wcuj66xud","_id":"clkfkkqf60003614w8mfkdks0"},{"post_id":"clkgr6kqj0000ga4w8w9sggqw","tag_id":"clke85ik80002s54w46c8hn90","_id":"clkgr6kqm0001ga4wdwde3qro"},{"post_id":"clkkk2yo00001e94w72lxehna","tag_id":"clke84yod0000s54w9waz3nx8","_id":"clkkk2yo20002e94w05n1e4rt"},{"post_id":"clkkk2yo20003e94w2emv7j83","tag_id":"clke84yod0000s54w9waz3nx8","_id":"clkkk2yo30005e94w0mq1ex3s"},{"post_id":"clkkk2yo20004e94w7bthfmwf","tag_id":"clke8i6k900031d4wcuj66xud","_id":"clkkk2yo30006e94w5vcd9mmr"},{"post_id":"clkku7xnf0000jr4wcpcf02k8","tag_id":"clke84yod0000s54w9waz3nx8","_id":"clkku7xng0001jr4w19yah3zv"},{"post_id":"clknkuzvc0000yu4wfq6b90xp","tag_id":"clke85ik80002s54w46c8hn90","_id":"clknkuzvd0001yu4wglrfciru"},{"post_id":"clknkuzvd0002yu4wdxz3hh7x","tag_id":"clke85ik80002s54w46c8hn90","_id":"clknkuzvd0004yu4w51ph0yhj"},{"post_id":"clknkuzvd0003yu4wdiyu6ntn","tag_id":"clke84yod0000s54w9waz3nx8","_id":"clknkuzve0006yu4wfyg6gywe"},{"post_id":"clknkuzvd0005yu4wccopdadh","tag_id":"clke8knpo00093w4wbyph0dex","_id":"clknkuzve0007yu4wceu5bsy2"},{"post_id":"clknkuzve0008yu4w6l9lhqv8","tag_id":"clke8knpo00093w4wbyph0dex","_id":"clknkuzvf000ayu4w8s8zfbsk"},{"post_id":"clknkuzve0009yu4whaiuak41","tag_id":"clke8knpo00093w4wbyph0dex","_id":"clknkuzvf000byu4wh2il4z64"},{"post_id":"clkqp0e2000006o4wblmweesx","tag_id":"clke85ik80002s54w46c8hn90","_id":"clkqp0e2300016o4waznce1yb"},{"post_id":"clks09wfu0000sj4waxi7htx7","tag_id":"clke8i6k900031d4wcuj66xud","_id":"clks09wfy0001sj4wci786uxj"}],"Tag":[{"name":"k8s","_id":"clke84yod0000s54w9waz3nx8"},{"name":"golang","_id":"clke85ik80002s54w46c8hn90"},{"name":"docker","_id":"clke896pe0002vp4w40if892l"},{"name":"tools","_id":"clke8htdw00011d4wfxuweb52"},{"name":"linux","_id":"clke8i6k900031d4wcuj66xud"},{"name":"工具","_id":"clke8knpo00093w4wbyph0dex"}]}}